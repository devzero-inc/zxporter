name: Kubernetes Compatibility Test

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.image }}
    
    steps:
      - name: Set Docker image name
        id: set-image
        run: |
          echo "ZXPORTER_IMG=zxporter:latest" >> $GITHUB_ENV
          echo "image=zxporter:latest" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Build Docker image
        run: make docker-build IMG=${{ env.ZXPORTER_IMG }}

      - name: Save Docker image
        run: |
          mkdir -p /tmp/docker-images
          docker save ${{ env.ZXPORTER_IMG }} -o /tmp/docker-images/zxporter-image.tar
          ls -la /tmp/docker-images

      - name: Cache Docker image
        uses: actions/cache@v3
        with:
          path: /tmp/docker-images
          key: docker-image-${{ github.run_id }}
          restore-keys: docker-image-

  test:
    name: Test on K8s ${{ matrix.k8s-version }}
    needs: build
    runs-on: ubuntu-xl
    
    strategy:
      fail-fast: false
      matrix:
        k8s-version:
          - v1.25.16
          - v1.26.15
          - v1.27.16
          - v1.28.15
          - v1.29.14
          - v1.30.8
          - v1.31.6
          - v1.32.3

    steps:
      - name: Set Docker image name
        run: echo "ZXPORTER_IMG=${{ needs.build.outputs.image }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1
        with:
          version: v0.27.0
          node_image: kindest/node:${{ matrix.k8s-version }}
          cluster_name: kind-${{ matrix.k8s-version }}
          wait: 120s

      - name: Restore Docker image from cache
        uses: actions/cache@v3
        with:
          path: /tmp/docker-images
          key: docker-image-${{ github.run_id }}

      - name: Load Docker image to Kind
        run: |
          ls -la /tmp/docker-images
          docker load -i /tmp/docker-images/zxporter-image.tar
          docker images
          kind load docker-image ${{ env.ZXPORTER_IMG }} --name kind-${{ matrix.k8s-version }}

      - name: Install Metrics Server
        run: |
          helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/
          helm repo update
          helm upgrade --install --set args={--kubelet-insecure-tls} metrics-server metrics-server/metrics-server --namespace kube-system

      - name: Install Node Exporter
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts 
          helm repo update
          helm install node-exporter prometheus-community/prometheus-node-exporter

      - name: Deploy ZXporter
        run: make deploy IMG=${{ env.ZXPORTER_IMG }}

      - name: Wait for deployment to be ready
        run: |
          echo "Waiting for deployment to be ready..."
          kubectl wait --for=condition=available --timeout=300s deployment/devzero-zxporter-controller-manager -n devzero-zxporter || true
          
          echo "Getting pod status..."
          kubectl get pods -n devzero-zxporter -o wide
          
          echo "Describing deployment..."
          kubectl describe deployment devzero-zxporter-controller-manager -n devzero-zxporter
          
          echo "Getting pod details..."
          POD_NAME=$(kubectl get pods -n devzero-zxporter -l control-plane=controller-manager -o jsonpath='{.items[0].metadata.name}')
          kubectl describe pod $POD_NAME -n devzero-zxporter
          
          echo "Getting events for the namespace..."
          kubectl get events -n devzero-zxporter --sort-by='.lastTimestamp'
          
          echo "Checking node status..."
          kubectl describe nodes
          
          echo "Checking node resources..."
          kubectl get nodes -o custom-columns=NAME:.metadata.name,CPU:.status.capacity.cpu,MEMORY:.status.capacity.memory

      - name: Verify ZXporter is running
        run: |
          echo "Getting pod status..."
          kubectl get pods -n devzero-zxporter -o wide
          
          echo "Getting pod logs (if any)..."
          POD_NAME=$(kubectl get pods -n devzero-zxporter -l control-plane=controller-manager -o jsonpath='{.items[0].metadata.name}')
          kubectl logs $POD_NAME -n devzero-zxporter --tail=100 || echo "No logs available"
          
          echo "Getting pod events..."
          kubectl get events -n devzero-zxporter --field-selector involvedObject.name=$POD_NAME --sort-by='.lastTimestamp'
