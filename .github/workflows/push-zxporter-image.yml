name: 'Push zxporter to Docker Hub'

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  package-and-push:
    name: Package & Push Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Version Info
        id: version
        run: |
          GITVERSION=$(git describe --tags --always || echo "v0.0.0-$(git rev-parse --short HEAD)")
          echo "GITVERSION=${GITVERSION}" >> $GITHUB_ENV
          if [[ "$GITVERSION" =~ ^v([0-9]+)\.([0-9]+)\.(.+)$ ]]; then
            echo "MAJOR=${BASH_REMATCH[1]}" >> $GITHUB_ENV
            echo "MINOR=${BASH_REMATCH[2]}" >> $GITHUB_ENV
            echo "PATCH=${BASH_REMATCH[3]}" >> $GITHUB_ENV
            echo "IS_RELEASE=true" >> $GITHUB_ENV
          else
            echo "MAJOR=0" >> $GITHUB_ENV
            echo "MINOR=0" >> $GITHUB_ENV
            echo "PATCH=0" >> $GITHUB_ENV
            echo "IS_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_ZXPORTER_BALANCE_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ZXPORTER_BALANCE_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multi-arch images
        run: |
          docker buildx create --use --name zxporter-builder || docker buildx use zxporter-builder

          echo "Building and pushing multi-arch images..."

          TAGS=("latest" "$(git rev-parse --short HEAD)" "$GITVERSION")

          if [[ "$IS_RELEASE" == "true" ]]; then
            TAGS+=("${MAJOR}.${MINOR}.${PATCH}" "${MAJOR}.${MINOR}" "${MAJOR}")
          fi

          for tag in "${TAGS[@]}"; do
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --push \
              -t devzeroinc/zxporter:$tag \
              .
          done
