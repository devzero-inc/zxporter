name: Release Helm Chart

on:
  push:
    branches:
      - garvit/helm-release-ci
  workflow_dispatch:
    inputs:
      version_change:
        description: 'Type of version change (major, minor, patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
      push_latest:
        description: 'Also push as latest'
        required: false
        type: boolean
        default: false

env:
  REGISTRY: registry-1.docker.io
  CHART_NAME: zxporter
  ORG: devzeroinc
  CHART_TAG_PREFIX: chart-v

jobs:
  release-helm-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.12.3'
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_ZXPORTER_BALANCE_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ZXPORTER_BALANCE_TOKEN }}

    - name: Enable Helm OCI support
      run: echo "HELM_EXPERIMENTAL_OCI=1" >> $GITHUB_ENV

    - name: Fetch tags
      run: git fetch --tags

    - name: Get last chart version from tags
      id: get_version
      run: |
        LAST_TAG=$(git tag --list '${{ env.CHART_TAG_PREFIX }}*' --sort=-v:refname | head -n 1)
        if [ -z "$LAST_TAG" ]; then
          LAST_VERSION="0.0.0"
        else
          LAST_VERSION="${LAST_TAG#${{ env.CHART_TAG_PREFIX }}}"
        fi
        echo "Last version: $LAST_VERSION"
        echo "last_version=$LAST_VERSION" >> $GITHUB_OUTPUT

    - name: Bump version
      id: bump_version
      run: |
        LAST_VERSION="${{ steps.get_version.outputs.last_version }}"
        # Set default to 'patch' if not provided
        CHANGE_TYPE="${{ github.event.inputs.version_change || 'patch' }}"
        IFS='.' read -r MAJOR MINOR PATCH <<< "$LAST_VERSION"

        if [[ "$CHANGE_TYPE" == "major" ]]; then
          MAJOR=$((MAJOR + 1))
          MINOR=0
          PATCH=0
        elif [[ "$CHANGE_TYPE" == "minor" ]]; then
          MINOR=$((MINOR + 1))
          PATCH=0
        elif [[ "$CHANGE_TYPE" == "patch" ]]; then
          PATCH=$((PATCH + 1))
        else
          echo "Invalid version change type: $CHANGE_TYPE"
          exit 1
        fi

        NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
        echo "Bumped version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Create and push new tag
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git tag "${{ env.CHART_TAG_PREFIX }}${{ steps.bump_version.outputs.new_version }}"
        git push origin "${{ env.CHART_TAG_PREFIX }}${{ steps.bump_version.outputs.new_version }}"

    - name: Update chart dependencies
      run: |
        helm dependency update helm-chart/zxporter

    - name: Lint Helm chart
      run: |
        helm lint helm-chart/zxporter

    - name: Package Helm chart
      run: |
        mkdir -p helm-chart/packages
        helm package helm-chart/zxporter \
          --version ${{ steps.bump_version.outputs.new_version }} \
          --app-version ${{ steps.bump_version.outputs.new_version }} \
          --destination helm-chart/packages

        PUSH_LATEST="${{ github.event.inputs.push_latest || 'false' }}"
        if [[ "$PUSH_LATEST" == "true" ]]; then
          helm package helm-chart/zxporter \
            --version latest \
            --app-version ${{ steps.bump_version.outputs.new_version }} \
            --destination helm-chart/packages
        fi

    - name: Push Helm chart to Docker Hub OCI registry
      run: |
        helm push helm-chart/packages/zxporter-${{ steps.bump_version.outputs.new_version }}.tgz \
          oci://${{ env.REGISTRY }}/${{ env.ORG }}
        PUSH_LATEST="${{ github.event.inputs.push_latest || 'false' }}"
        if [[ "$PUSH_LATEST" == "true" ]]; then
          helm push helm-chart/packages/zxporter-latest.tgz \
            oci://${{ env.REGISTRY }}/${{ env.ORG }}
        fi
