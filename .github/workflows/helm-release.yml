name: Release Helm Chart

on:
  workflow_dispatch:
    inputs:
      version_change:
        description: 'Type of version change (major, minor, patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
env:
  REGISTRY: registry-1.docker.io
  CHART_NAME: zxporter
  ORG: devzeroinc
  CHART_TAG_PREFIX: chart-v

jobs:
  release-helm-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.12.3'

    - name: Install yq
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq

    - name: Helm registry login
      run: |
        echo "${{ secrets.DOCKERHUB_ZXPORTER_BALANCE_TOKEN }}" | \
          helm registry login registry-1.docker.io \
            --username "${{ secrets.DOCKERHUB_ZXPORTER_BALANCE_USERNAME }}" \
            --password-stdin

    - name: Enable Helm OCI support
      run: echo "HELM_EXPERIMENTAL_OCI=1" >> $GITHUB_ENV

    - name: Fetch tags
      run: git fetch --tags

    - name: Get last chart version from tags
      id: get_version
      run: |
        LAST_TAG=$(git tag --list '${{ env.CHART_TAG_PREFIX }}*' --sort=-v:refname | head -n 1)
        if [ -z "$LAST_TAG" ]; then
          LAST_VERSION="0.0.0"
        else
          LAST_VERSION="${LAST_TAG#${{ env.CHART_TAG_PREFIX }}}"
        fi
        echo "Last version: $LAST_VERSION"
        echo "last_version=$LAST_VERSION" >> $GITHUB_OUTPUT

    - name: Bump version
      id: bump_version
      run: |
        LAST_VERSION="${{ steps.get_version.outputs.last_version }}"
        # Set default to 'patch' if not provided
        CHANGE_TYPE="${{ github.event.inputs.version_change || 'patch' }}"
        IFS='.' read -r MAJOR MINOR PATCH <<< "$LAST_VERSION"

        if [[ "$CHANGE_TYPE" == "major" ]]; then
          MAJOR=$((MAJOR + 1))
          MINOR=0
          PATCH=0
        elif [[ "$CHANGE_TYPE" == "minor" ]]; then
          MINOR=$((MINOR + 1))
          PATCH=0
        elif [[ "$CHANGE_TYPE" == "patch" ]]; then
          PATCH=$((PATCH + 1))
        else
          echo "Invalid version change type: $CHANGE_TYPE"
          exit 1
        fi

        NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
        echo "Bumped version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Create and push new tag
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git tag "${{ env.CHART_TAG_PREFIX }}${{ steps.bump_version.outputs.new_version }}"
        git push origin "${{ env.CHART_TAG_PREFIX }}${{ steps.bump_version.outputs.new_version }}"

    - name: Update chart dependencies
      run: |
        helm dependency update helm-chart/zxporter

    - name: Lint Helm chart
      run: |
        helm lint helm-chart/zxporter

    - name: Package Helm chart
      run: |
        mkdir -p helm-chart/packages
        helm package helm-chart/zxporter \
          --version ${{ steps.bump_version.outputs.new_version }} \
          --app-version ${{ steps.bump_version.outputs.new_version }} \
          --destination helm-chart/packages

    - name: Push Helm chart to Docker Hub OCI registry
      run: |
        helm push helm-chart/packages/zxporter-${{ steps.bump_version.outputs.new_version }}.tgz \
          oci://${{ env.REGISTRY }}/${{ env.ORG }}

    - name: Update Chart.yaml version and appVersion
      run: |
        yq e -i '.version = "${{ steps.bump_version.outputs.new_version }}"' helm-chart/zxporter/Chart.yaml
        yq e -i '.appVersion = "${{ steps.bump_version.outputs.new_version }}"' helm-chart/zxporter/Chart.yaml

    - name: Create PR to update Chart.yaml version and appVersion
      uses: peter-evans/create-pull-request@v6
      with:
        commit-message: "chore(helm): update Chart.yaml version to ${{ steps.bump_version.outputs.new_version }}"
        title: "chore(helm): update Chart.yaml version to ${{ steps.bump_version.outputs.new_version }}"
        body: |
          This PR updates the `version` and `appVersion` fields in `helm-chart/zxporter/Chart.yaml` to `${{ steps.bump_version.outputs.new_version }}`.
        branch: "update/chart-version-${{ steps.bump_version.outputs.new_version }}"
        add-paths: |
          helm-chart/zxporter/Chart.yaml

    # - name: Create PR in services repo to update Helm version in docs and dashboard
    #   env:
    #     GH_TOKEN: ${{ secrets.GH_PAT_SERVICES_REPO }}
    #     NEW_VERSION: ${{ steps.bump_version.outputs.new_version }}
    #   run: |
    #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
    #     git config --global user.name "github-actions[bot]"
    #     git clone https://x-access-token:${GH_TOKEN}@github.com/devzeroinc/services.git services-repo
    #     cd services-repo
    #     BRANCH="update/zxporter-helm-version-${NEW_VERSION}"
    #     git checkout -b "$BRANCH"
    #     sed -i 's/\(helm install zxporter oci:\/\/registry-1\.docker\.io\/devzeroinc\/zxporter --version \)[0-9]\+\.[0-9]\+\.[0-9]\+\( --namespace devzero-zxporter --create-namespace\)/\1${NEW_VERSION}\2/' web/content/docs/k8s-automation/getting-started/step-by-step.mdx
    #     sed -i 's/\(helm install zxporter oci:\/\/registry-1\.docker\.io\/devzeroinc\/zxporter --version \)[0-9]\+\.[0-9]\+\.[0-9]\+\( --namespace devzero-zxporter --create-namespace\)/\1${NEW_VERSION}\2/' web/app/\(protected\)/dashboard/resource-optimization/_components/ConnectClusterContent.tsx
    #     git add web/content/docs/k8s-automation/getting-started/step-by-step.mdx web/app/(protected)/dashboard/resource-optimization/_components/ConnectClusterContent.tsx
    #     git commit -m "docs(helm): update zxporter Helm chart version to ${NEW_VERSION}"
    #     git push origin "$BRANCH"
    #     gh pr create --title "docs(helm): update zxporter Helm chart version to ${NEW_VERSION}" \
    #       --body "This PR updates the zxporter Helm chart version to \`${NEW_VERSION}\` in documentation and dashboard." \
    #       --head "$BRANCH" --base main


