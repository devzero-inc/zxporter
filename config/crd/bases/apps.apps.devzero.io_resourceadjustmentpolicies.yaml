---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: resourceadjustmentpolicies.apps.apps.devzero.io
spec:
  group: apps.apps.devzero.io
  names:
    kind: ResourceAdjustmentPolicy
    listKind: ResourceAdjustmentPolicyList
    plural: resourceadjustmentpolicies
    singular: resourceadjustmentpolicy
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ResourceAdjustmentPolicy is the Schema for the resourceadjustmentpolicies
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ResourceAdjustmentPolicySpec defines the desired state of
              ResourceAdjustmentPolicy
            properties:
              exclusions:
                description: Exclusions specifies resources or namespaces to exclude
                  from adjustments
                properties:
                  namespaces:
                    items:
                      type: string
                    type: array
                required:
                - namespaces
                type: object
              logging:
                description: Logging defines logging configurations
                properties:
                  enableAuditLogs:
                    type: boolean
                  level:
                    type: string
                required:
                - enableAuditLogs
                - level
                type: object
              policies:
                description: Policies defines the resource adjustment policies
                properties:
                  cpuRecommendation:
                    description: CPURecommendation specifies policies for CPU adjustments
                    properties:
                      historyLength:
                        type: string
                      marginFraction:
                        type: string
                      requestPercentile:
                        type: string
                      sampleInterval:
                        type: string
                      targetUtilization:
                        type: string
                    required:
                    - historyLength
                    - marginFraction
                    - requestPercentile
                    - sampleInterval
                    - targetUtilization
                    type: object
                  memoryRecommendation:
                    description: MemoryRecommendation specifies policies for memory
                      adjustments
                    properties:
                      historyLength:
                        type: string
                      marginFraction:
                        type: string
                      oomProtection:
                        type: boolean
                      requestPercentile:
                        type: string
                      sampleInterval:
                        type: string
                      targetUtilization:
                        type: string
                    required:
                    - historyLength
                    - marginFraction
                    - oomProtection
                    - requestPercentile
                    - sampleInterval
                    - targetUtilization
                    type: object
                  metricsSources:
                    items:
                      type: string
                    type: array
                  normalization:
                    description: Normalization specifies normalization policies
                    properties:
                      config:
                        type: string
                      enabled:
                        type: boolean
                    required:
                    - config
                    - enabled
                    type: object
                required:
                - cpuRecommendation
                - memoryRecommendation
                - metricsSources
                - normalization
                type: object
              targetSelector:
                description: TargetSelector specifies the labels and namespaces to
                  match resources
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                  namespaces:
                    items:
                      type: string
                    type: array
                required:
                - matchLabels
                - namespaces
                type: object
            required:
            - exclusions
            - logging
            - policies
            - targetSelector
            type: object
          status:
            description: ResourceAdjustmentPolicyStatus defines the observed state
              of ResourceAdjustmentPolicy
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              containers:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  description: ContainerStatus holds detailed status for each monitored
                    container.
                  properties:
                    containerName:
                      type: string
                    cpuRecommendation:
                      description: RecommendationDetails holds the base and adjusted
                        recommendations for a resource.
                      properties:
                        adjustedRecommendation:
                          type: string
                        baseRecommendation:
                          type: string
                        needToApply:
                          type: boolean
                      type: object
                    currentCPU:
                      description: ResourceUsage holds details about current resource
                        usage and limits.
                      properties:
                        limit:
                          type: string
                        usage:
                          type: string
                      type: object
                    currentMemory:
                      description: ResourceUsage holds details about current resource
                        usage and limits.
                      properties:
                        limit:
                          type: string
                        usage:
                          type: string
                      type: object
                    lastUpdated:
                      format: date-time
                      type: string
                    memoryRecommendation:
                      description: RecommendationDetails holds the base and adjusted
                        recommendations for a resource.
                      properties:
                        adjustedRecommendation:
                          type: string
                        baseRecommendation:
                          type: string
                        needToApply:
                          type: boolean
                      type: object
                    namespace:
                      type: string
                    oomEvents:
                      items:
                        description: OOMEvent holds details of an Out-of-Memory event.
                        properties:
                          description:
                            type: string
                          reason:
                            type: string
                          timestamp:
                            format: date-time
                            type: string
                        required:
                        - description
                        - reason
                        - timestamp
                        type: object
                      type: array
                    podName:
                      type: string
                  required:
                  - containerName
                  - cpuRecommendation
                  - currentCPU
                  - currentMemory
                  - lastUpdated
                  - memoryRecommendation
                  - namespace
                  - podName
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
