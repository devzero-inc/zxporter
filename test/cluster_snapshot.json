{
    "resourceType": "cluster_snapshot",
    "dataType": "*snap.ClusterSnapshot",
    "FULL_RESOURCE": {
        "ResourceType": 43,
        "Object": {
            "clusterInfo": {
                "version": "v1.30.13-eks-5d4a308",
                "nodeCount": 2,
                "namespaces": [
                    "default",
                    "devzero-zxporter",
                    "kube-node-lease",
                    "kube-public",
                    "kube-system"
                ]
            },
            "nodes": {
                "ip-10-8-110-61.ec2.internal": {
                    "node": {
                        "metadata": {
                            "name": "ip-10-8-110-61.ec2.internal",
                            "uid": "dd4b2a60-7f45-457d-93b2-33f30d6d11b5",
                            "resourceVersion": "292949",
                            "creationTimestamp": "2025-06-11T16:47:42Z",
                            "labels": {
                                "beta.kubernetes.io/arch": "amd64",
                                "beta.kubernetes.io/instance-type": "m5.large",
                                "beta.kubernetes.io/os": "linux",
                                "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                "eks.amazonaws.com/nodegroup": "upprom-test-ph-kata-nodes-20250611164557466700000014",
                                "eks.amazonaws.com/nodegroup-image": "ami-09b245eb641406d83",
                                "eks.amazonaws.com/sourceLaunchTemplateId": "lt-062a8941ceb8c08e8",
                                "eks.amazonaws.com/sourceLaunchTemplateVersion": "1",
                                "failure-domain.beta.kubernetes.io/region": "us-east-1",
                                "failure-domain.beta.kubernetes.io/zone": "us-east-1a",
                                "k8s.io/cloud-provider-aws": "79b8568a8a99eefe977336eb0445c8df",
                                "kata-runtime": "running",
                                "kubernetes.io/arch": "amd64",
                                "kubernetes.io/hostname": "ip-10-8-110-61.ec2.internal",
                                "kubernetes.io/os": "linux",
                                "node-role.kubernetes.io/devpod-node": "1",
                                "node-role.kubernetes.io/kata-devpod-node": "1",
                                "node-role.kubernetes.io/vcluster-node": "1",
                                "node.kubernetes.io/instance-type": "m5.large",
                                "topology.k8s.aws/zone-id": "use1-az2",
                                "topology.kubernetes.io/region": "us-east-1",
                                "topology.kubernetes.io/zone": "us-east-1a"
                            },
                            "annotations": {
                                "alpha.kubernetes.io/provided-node-ip": "10.8.110.61",
                                "node.alpha.kubernetes.io/ttl": "0",
                                "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "aws-cloud-controller-manager",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:42Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:status": {
                                            "f:addresses": {
                                                "k:{\"type\":\"InternalDNS\"}": {
                                                    ".": {},
                                                    "f:address": {},
                                                    "f:type": {}
                                                }
                                            }
                                        }
                                    },
                                    "subresource": "status"
                                },
                                {
                                    "manager": "kube-controller-manager",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:42Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                "f:node.alpha.kubernetes.io/ttl": {}
                                            }
                                        }
                                    }
                                },
                                {
                                    "manager": "kubelet",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:42Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:alpha.kubernetes.io/provided-node-ip": {},
                                                "f:volumes.kubernetes.io/controller-managed-attach-detach": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:beta.kubernetes.io/arch": {},
                                                "f:beta.kubernetes.io/os": {},
                                                "f:kubernetes.io/arch": {},
                                                "f:kubernetes.io/hostname": {},
                                                "f:kubernetes.io/os": {}
                                            }
                                        },
                                        "f:spec": {
                                            "f:providerID": {}
                                        }
                                    }
                                },
                                {
                                    "manager": "aws-cloud-controller-manager",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:43Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                "f:beta.kubernetes.io/instance-type": {},
                                                "f:failure-domain.beta.kubernetes.io/region": {},
                                                "f:failure-domain.beta.kubernetes.io/zone": {},
                                                "f:k8s.io/cloud-provider-aws": {},
                                                "f:node.kubernetes.io/instance-type": {},
                                                "f:topology.k8s.aws/zone-id": {},
                                                "f:topology.kubernetes.io/region": {},
                                                "f:topology.kubernetes.io/zone": {}
                                            }
                                        }
                                    }
                                },
                                {
                                    "manager": "vpcLambda",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:51Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                "f:eks.amazonaws.com/capacityType": {},
                                                "f:eks.amazonaws.com/nodegroup": {},
                                                "f:eks.amazonaws.com/nodegroup-image": {},
                                                "f:eks.amazonaws.com/sourceLaunchTemplateId": {},
                                                "f:eks.amazonaws.com/sourceLaunchTemplateVersion": {},
                                                "f:kata-runtime": {},
                                                "f:node-role.kubernetes.io/devpod-node": {},
                                                "f:node-role.kubernetes.io/kata-devpod-node": {},
                                                "f:node-role.kubernetes.io/vcluster-node": {}
                                            }
                                        }
                                    }
                                },
                                {
                                    "manager": "kubelet",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-12T17:53:21Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:status": {
                                            "f:conditions": {
                                                "k:{\"type\":\"DiskPressure\"}": {
                                                    "f:lastHeartbeatTime": {}
                                                },
                                                "k:{\"type\":\"MemoryPressure\"}": {
                                                    "f:lastHeartbeatTime": {}
                                                },
                                                "k:{\"type\":\"PIDPressure\"}": {
                                                    "f:lastHeartbeatTime": {}
                                                },
                                                "k:{\"type\":\"Ready\"}": {
                                                    "f:lastHeartbeatTime": {},
                                                    "f:lastTransitionTime": {},
                                                    "f:message": {},
                                                    "f:reason": {},
                                                    "f:status": {}
                                                }
                                            },
                                            "f:images": {}
                                        }
                                    },
                                    "subresource": "status"
                                }
                            ]
                        },
                        "spec": {
                            "providerID": "aws:///us-east-1a/i-0cfc7d19c44903d3f"
                        },
                        "status": {
                            "capacity": {
                                "cpu": "2",
                                "ephemeral-storage": "524210156Ki",
                                "hugepages-1Gi": "0",
                                "hugepages-2Mi": "0",
                                "memory": "7927548Ki",
                                "pods": "29"
                            },
                            "allocatable": {
                                "cpu": "1930m",
                                "ephemeral-storage": "482038337146",
                                "hugepages-1Gi": "0",
                                "hugepages-2Mi": "0",
                                "memory": "7237372Ki",
                                "pods": "29"
                            },
                            "conditions": [
                                {
                                    "type": "MemoryPressure",
                                    "status": "False",
                                    "lastHeartbeatTime": "2025-06-12T17:53:21Z",
                                    "lastTransitionTime": "2025-06-11T16:47:39Z",
                                    "reason": "KubeletHasSufficientMemory",
                                    "message": "kubelet has sufficient memory available"
                                },
                                {
                                    "type": "DiskPressure",
                                    "status": "False",
                                    "lastHeartbeatTime": "2025-06-12T17:53:21Z",
                                    "lastTransitionTime": "2025-06-11T16:47:39Z",
                                    "reason": "KubeletHasNoDiskPressure",
                                    "message": "kubelet has no disk pressure"
                                },
                                {
                                    "type": "PIDPressure",
                                    "status": "False",
                                    "lastHeartbeatTime": "2025-06-12T17:53:21Z",
                                    "lastTransitionTime": "2025-06-11T16:47:39Z",
                                    "reason": "KubeletHasSufficientPID",
                                    "message": "kubelet has sufficient PID available"
                                },
                                {
                                    "type": "Ready",
                                    "status": "True",
                                    "lastHeartbeatTime": "2025-06-12T17:53:21Z",
                                    "lastTransitionTime": "2025-06-11T16:48:01Z",
                                    "reason": "KubeletReady",
                                    "message": "kubelet is posting ready status"
                                }
                            ],
                            "addresses": [
                                {
                                    "type": "InternalIP",
                                    "address": "10.8.110.61"
                                },
                                {
                                    "type": "InternalDNS",
                                    "address": "ip-10-8-110-61.ec2.internal"
                                },
                                {
                                    "type": "Hostname",
                                    "address": "ip-10-8-110-61.ec2.internal"
                                }
                            ],
                            "daemonEndpoints": {
                                "kubeletEndpoint": {
                                    "Port": 10250
                                }
                            },
                            "nodeInfo": {
                                "machineID": "ec23dff74513459f421254dc913c0df4",
                                "systemUUID": "ec2bac5f-1f2e-50d4-4cc1-254de8c49de1",
                                "bootID": "ce433fbb-afe1-4db8-81bc-ad6196716258",
                                "kernelVersion": "6.7.0-dz-pvm-host",
                                "osImage": "Amazon Linux 2023.6.20250128",
                                "containerRuntimeVersion": "containerd://1.7.25",
                                "kubeletVersion": "v1.30.8-eks-aeac579",
                                "kubeProxyVersion": "v1.30.8-eks-aeac579",
                                "operatingSystem": "linux",
                                "architecture": "amd64"
                            },
                            "images": [
                                {
                                    "names": [
                                        "docker.io/devzeroinc/gha-scale-set-runner-ubuntu:24.04-devel@sha256:7eb16ed43cedd1a61a77e8e7f2ea073c426ac81d389b889d6e7f87e309ef33cf"
                                    ],
                                    "sizeBytes": 21951436956
                                },
                                {
                                    "names": [
                                        "docker.io/library/nginx@sha256:a484819eb60211f5299034ac80f6a681b06f89e65866ce91f356ed7c72af059c",
                                        "docker.io/library/nginx:1.25"
                                    ],
                                    "sizeBytes": 71005258
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:ce36e6fc8457a3c79eab29ad7ca86ebc9220056c443e15502eeab7ceeef8496f",
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1"
                                    ],
                                    "sizeBytes": 62982633
                                },
                                {
                                    "names": [
                                        "docker.io/remontada007/zxporter@sha256:b69371ed31480cefd553936ba009b1174751458d2fffcc86d853d5a0ece6fe07",
                                        "docker.io/remontada007/zxporter:mev3"
                                    ],
                                    "sizeBytes": 61511878
                                },
                                {
                                    "names": [
                                        "docker.io/remontada007/zxporter@sha256:223415afb6b7278754ff6fa764652a7497166a85f1866fca26390ca02467ef7c",
                                        "docker.io/remontada007/zxporter:mev2"
                                    ],
                                    "sizeBytes": 61496775
                                },
                                {
                                    "names": [
                                        "docker.io/devzeroinc/zxporter@sha256:1e0cbe5913019e6199328a43567ef5dc3b0285ad1e30d3c5d318c2a9799687dc",
                                        "docker.io/devzeroinc/zxporter:latest"
                                    ],
                                    "sizeBytes": 61455132
                                },
                                {
                                    "names": [
                                        "docker.io/remontada007/zxporter@sha256:334f7bccd8256fe61fa25ddc026c5b8e36f85200a7747598ac6c3eee3ffbb6a2",
                                        "docker.io/remontada007/zxporter:mev"
                                    ],
                                    "sizeBytes": 61454694
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:efada7e5222a3376dc170b43b569f4dea762fd58186467c233b512bd6ab5415b",
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1"
                                    ],
                                    "sizeBytes": 48672727
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent@sha256:f3280f090b6c5d3128357d8710db237931f5e1089e8017ab3d9cece429d77954",
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1"
                                    ],
                                    "sizeBytes": 40739177
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:5ed7b40f2b07b992318718d8264324747ecc24b4ea8fab26095b8e569980eff6",
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3"
                                    ],
                                    "sizeBytes": 31494047
                                },
                                {
                                    "names": [
                                        "registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9",
                                        "registry.k8s.io/metrics-server/metrics-server:v0.7.2"
                                    ],
                                    "sizeBytes": 19494617
                                },
                                {
                                    "names": [
                                        "registry.k8s.io/metrics-server/metrics-server@sha256:1c0419326500f1704af580d12a579671b2c3a06a8aa918cd61d0a35fb2d6b3ce",
                                        "registry.k8s.io/metrics-server/metrics-server:v0.7.0"
                                    ],
                                    "sizeBytes": 19435023
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:d21885a6632343ecd25d468b54681a0bd512055174bb17bc35a08cb38a965f12",
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8"
                                    ],
                                    "sizeBytes": 18847690
                                },
                                {
                                    "names": [
                                        "registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:db384bf43222b066c378e77027a675d4cd9911107adba46c2922b3a55e10d6fb",
                                        "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0"
                                    ],
                                    "sizeBytes": 15293353
                                },
                                {
                                    "names": [
                                        "quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a",
                                        "quay.io/prometheus/node-exporter:v1.9.1"
                                    ],
                                    "sizeBytes": 12955907
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause:3.10",
                                        "localhost/kubernetes/pause:latest"
                                    ],
                                    "sizeBytes": 318731
                                }
                            ]
                        }
                    },
                    "pods": {
                        "default/nginx-deployment-6c9b4ccd66-cpmfp": {
                            "metadata": {
                                "name": "nginx-deployment-6c9b4ccd66-cpmfp",
                                "generateName": "nginx-deployment-6c9b4ccd66-",
                                "namespace": "default",
                                "uid": "d16d4300-c586-4f2d-aa73-5f137999f538",
                                "resourceVersion": "262104",
                                "creationTimestamp": "2025-06-12T15:12:25Z",
                                "labels": {
                                    "app": "nginx",
                                    "pod-template-hash": "6c9b4ccd66"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "ReplicaSet",
                                        "name": "nginx-deployment-6c9b4ccd66",
                                        "uid": "62abfca4-bd72-4945-8cc2-b11909322e1a",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T15:12:25Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app": {},
                                                    "f:pod-template-hash": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"62abfca4-bd72-4945-8cc2-b11909322e1a\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"nginx\"}": {
                                                        ".": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T15:12:28Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.98.217\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "kube-api-access-82msp",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx",
                                        "image": "nginx:1.25",
                                        "ports": [
                                            {
                                                "containerPort": 80,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "4000Mi"
                                            },
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "2000Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "kube-api-access-82msp",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "default",
                                "serviceAccount": "default",
                                "nodeName": "ip-10-8-110-61.ec2.internal",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    }
                                ],
                                "priority": 0,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:28Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:25Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:28Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:28Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:25Z"
                                    }
                                ],
                                "hostIP": "10.8.110.61",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.110.61"
                                    }
                                ],
                                "podIP": "10.8.98.217",
                                "podIPs": [
                                    {
                                        "ip": "10.8.98.217"
                                    }
                                ],
                                "startTime": "2025-06-12T15:12:25Z",
                                "containerStatuses": [
                                    {
                                        "name": "nginx",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-12T15:12:28Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "docker.io/library/nginx:1.25",
                                        "imageID": "docker.io/library/nginx@sha256:a484819eb60211f5299034ac80f6a681b06f89e65866ce91f356ed7c72af059c",
                                        "containerID": "containerd://da20e45b640a1fa3cac0472590dba664c8736a4de7b6e33e9a6aad3de963eab4",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        },
                        "devzero-zxporter/dz-prometheus-node-exporter-gcnbc": {
                            "metadata": {
                                "name": "dz-prometheus-node-exporter-gcnbc",
                                "generateName": "dz-prometheus-node-exporter-",
                                "namespace": "devzero-zxporter",
                                "uid": "bb133697-685e-4035-b2bf-fd83fa7d4760",
                                "resourceVersion": "30280",
                                "creationTimestamp": "2025-06-11T19:21:35Z",
                                "labels": {
                                    "app.kubernetes.io/component": "metrics",
                                    "app.kubernetes.io/instance": "node-exporter",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/part-of": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/version": "1.9.1",
                                    "controller-revision-hash": "bdd7b4c8",
                                    "helm.sh/chart": "prometheus-node-exporter-4.47.0",
                                    "pod-template-generation": "1"
                                },
                                "annotations": {
                                    "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "9101",
                                    "prometheus.io/scrape": "true"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "DaemonSet",
                                        "name": "dz-prometheus-node-exporter",
                                        "uid": "b8cee21f-6011-4558-8552-3dd63c82463e",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:35Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:cluster-autoscaler.kubernetes.io/safe-to-evict": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:controller-revision-hash": {},
                                                    "f:helm.sh/chart": {},
                                                    "f:pod-template-generation": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"b8cee21f-6011-4558-8552-3dd63c82463e\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:affinity": {
                                                    ".": {},
                                                    "f:nodeAffinity": {
                                                        ".": {},
                                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                    }
                                                },
                                                "f:automountServiceAccountToken": {},
                                                "f:containers": {
                                                    "k:{\"name\":\"node-exporter\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"HOST_IP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:hostPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:readOnlyRootFilesystem": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/host/proc\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/host/root\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:mountPropagation": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/host/sys\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:hostNetwork": {},
                                                "f:hostPID": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:fsGroup": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"proc\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"root\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"sys\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:36Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.110.61\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "proc",
                                        "hostPath": {
                                            "path": "/proc",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "sys",
                                        "hostPath": {
                                            "path": "/sys",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "root",
                                        "hostPath": {
                                            "path": "/",
                                            "type": ""
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "node-exporter",
                                        "image": "quay.io/prometheus/node-exporter:v1.9.1",
                                        "args": [
                                            "--path.procfs=/host/proc",
                                            "--path.sysfs=/host/sys",
                                            "--path.rootfs=/host/root",
                                            "--path.udev.data=/host/root/run/udev/data",
                                            "--web.listen-address=[$(HOST_IP)]:9101"
                                        ],
                                        "ports": [
                                            {
                                                "name": "metrics",
                                                "hostPort": 9101,
                                                "containerPort": 9101,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "HOST_IP",
                                                "value": "0.0.0.0"
                                            }
                                        ],
                                        "resources": {},
                                        "volumeMounts": [
                                            {
                                                "name": "proc",
                                                "readOnly": true,
                                                "mountPath": "/host/proc"
                                            },
                                            {
                                                "name": "sys",
                                                "readOnly": true,
                                                "mountPath": "/host/sys"
                                            },
                                            {
                                                "name": "root",
                                                "readOnly": true,
                                                "mountPath": "/host/root",
                                                "mountPropagation": "HostToContainer"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/",
                                                "port": 9101,
                                                "scheme": "HTTP"
                                            },
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/",
                                                "port": 9101,
                                                "scheme": "HTTP"
                                            },
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "readOnlyRootFilesystem": true,
                                            "allowPrivilegeEscalation": false
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "dz-prometheus-node-exporter",
                                "serviceAccount": "dz-prometheus-node-exporter",
                                "automountServiceAccountToken": false,
                                "nodeName": "ip-10-8-110-61.ec2.internal",
                                "hostNetwork": true,
                                "hostPID": true,
                                "securityContext": {
                                    "runAsUser": 65534,
                                    "runAsGroup": 65534,
                                    "runAsNonRoot": true,
                                    "fsGroup": 65534
                                },
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchFields": [
                                                        {
                                                            "key": "metadata.name",
                                                            "operator": "In",
                                                            "values": [
                                                                "ip-10-8-110-61.ec2.internal"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/disk-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/memory-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/pid-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unschedulable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/network-unavailable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    }
                                ],
                                "priority": 0,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:36Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:35Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:36Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:36Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:35Z"
                                    }
                                ],
                                "hostIP": "10.8.110.61",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.110.61"
                                    }
                                ],
                                "podIP": "10.8.110.61",
                                "podIPs": [
                                    {
                                        "ip": "10.8.110.61"
                                    }
                                ],
                                "startTime": "2025-06-11T19:21:35Z",
                                "containerStatuses": [
                                    {
                                        "name": "node-exporter",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T19:21:36Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "quay.io/prometheus/node-exporter:v1.9.1",
                                        "imageID": "quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a",
                                        "containerID": "containerd://83d59f318756030982bb0603f578882c58fb4d90e7ae09e78ad32a93a91adfe7",
                                        "started": true
                                    }
                                ],
                                "qosClass": "BestEffort"
                            }
                        },
                        "kube-system/aws-node-vvzsj": {
                            "metadata": {
                                "name": "aws-node-vvzsj",
                                "generateName": "aws-node-",
                                "namespace": "kube-system",
                                "uid": "1f2985aa-0edc-4fce-acfb-e26a3b49c134",
                                "resourceVersion": "1563",
                                "creationTimestamp": "2025-06-11T16:47:42Z",
                                "labels": {
                                    "app.kubernetes.io/instance": "aws-vpc-cni",
                                    "app.kubernetes.io/name": "aws-node",
                                    "controller-revision-hash": "6b64f5765",
                                    "k8s-app": "aws-node",
                                    "pod-template-generation": "1"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "DaemonSet",
                                        "name": "aws-node",
                                        "uid": "9b848bba-5997-48bc-92c7-e3bba4b6d9ba",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:42Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:controller-revision-hash": {},
                                                    "f:k8s-app": {},
                                                    "f:pod-template-generation": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"9b848bba-5997-48bc-92c7-e3bba4b6d9ba\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:affinity": {
                                                    ".": {},
                                                    "f:nodeAffinity": {
                                                        ".": {},
                                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                    }
                                                },
                                                "f:containers": {
                                                    "k:{\"name\":\"aws-eks-nodeagent\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:capabilities": {
                                                                ".": {},
                                                                "f:add": {}
                                                            },
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log/aws-routed-eni\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    },
                                                    "k:{\"name\":\"aws-node\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"ADDITIONAL_ENI_TAGS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ANNOTATE_POD_IP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_ENI_MTU\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"DISABLE_INTROSPECTION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"DISABLE_METRICS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"DISABLE_NETWORK_RESOURCE_PROVISIONING\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_IPv4\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_POD_ENI\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_PREFIX_DELEGATION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_SUBNET_DISCOVERY\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MY_POD_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"NETWORK_POLICY_ENFORCING_MODE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"VPC_CNI_VERSION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"VPC_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"WARM_ENI_TARGET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"WARM_PREFIX_TARGET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:exec": {
                                                                ".": {},
                                                                "f:command": {}
                                                            },
                                                            "f:failureThreshold": {},
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":61678,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:hostPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:exec": {
                                                                ".": {},
                                                                "f:command": {}
                                                            },
                                                            "f:failureThreshold": {},
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:capabilities": {
                                                                ".": {},
                                                                "f:add": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/host/var/log/aws-routed-eni\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:hostNetwork": {},
                                                "f:initContainers": {
                                                    ".": {},
                                                    "k:{\"name\":\"aws-vpc-cni-init\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"DISABLE_TCP_EARLY_DEMUX\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:priorityClassName": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"bpf-pin-path\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"cni-bin-dir\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"cni-net-dir\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"log-dir\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"run-dir\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"xtables-lock\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:48:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:initContainerStatuses": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.110.61\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "bpf-pin-path",
                                        "hostPath": {
                                            "path": "/sys/fs/bpf",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "cni-bin-dir",
                                        "hostPath": {
                                            "path": "/opt/cni/bin",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "cni-net-dir",
                                        "hostPath": {
                                            "path": "/etc/cni/net.d",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "log-dir",
                                        "hostPath": {
                                            "path": "/var/log/aws-routed-eni",
                                            "type": "DirectoryOrCreate"
                                        }
                                    },
                                    {
                                        "name": "run-dir",
                                        "hostPath": {
                                            "path": "/var/run/aws-node",
                                            "type": "DirectoryOrCreate"
                                        }
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "hostPath": {
                                            "path": "/run/xtables.lock",
                                            "type": "FileOrCreate"
                                        }
                                    },
                                    {
                                        "name": "kube-api-access-t74bc",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "aws-vpc-cni-init",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1",
                                        "env": [
                                            {
                                                "name": "DISABLE_TCP_EARLY_DEMUX",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_IPv6",
                                                "value": "false"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "25m"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "cni-bin-dir",
                                                "mountPath": "/host/opt/cni/bin"
                                            },
                                            {
                                                "name": "kube-api-access-t74bc",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "Always",
                                        "securityContext": {
                                            "privileged": true
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "aws-node",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1",
                                        "ports": [
                                            {
                                                "name": "metrics",
                                                "hostPort": 61678,
                                                "containerPort": 61678,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "ADDITIONAL_ENI_TAGS",
                                                "value": "{}"
                                            },
                                            {
                                                "name": "ANNOTATE_POD_IP",
                                                "value": "false"
                                            },
                                            {
                                                "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                                "value": "true"
                                            },
                                            {
                                                "name": "AWS_VPC_ENI_MTU",
                                                "value": "9001"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                                "value": "false"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                                "value": "false"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                                "value": "DEBUG"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                                "value": "/host/var/log/aws-routed-eni/ipamd.log"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                                "value": "prng"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                                "value": "eni"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                                "value": "/var/log/aws-routed-eni/plugin.log"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                                "value": "DEBUG"
                                            },
                                            {
                                                "name": "CLUSTER_NAME",
                                                "value": "upprom-test-ph"
                                            },
                                            {
                                                "name": "DISABLE_INTROSPECTION",
                                                "value": "false"
                                            },
                                            {
                                                "name": "DISABLE_METRICS",
                                                "value": "false"
                                            },
                                            {
                                                "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_IPv4",
                                                "value": "true"
                                            },
                                            {
                                                "name": "ENABLE_IPv6",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_POD_ENI",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_PREFIX_DELEGATION",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_SUBNET_DISCOVERY",
                                                "value": "true"
                                            },
                                            {
                                                "name": "NETWORK_POLICY_ENFORCING_MODE",
                                                "value": "standard"
                                            },
                                            {
                                                "name": "VPC_CNI_VERSION",
                                                "value": "v1.19.0"
                                            },
                                            {
                                                "name": "VPC_ID",
                                                "value": "vpc-010b580eeadcc56b5"
                                            },
                                            {
                                                "name": "WARM_ENI_TARGET",
                                                "value": "1"
                                            },
                                            {
                                                "name": "WARM_PREFIX_TARGET",
                                                "value": "1"
                                            },
                                            {
                                                "name": "MY_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MY_POD_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "25m"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "cni-bin-dir",
                                                "mountPath": "/host/opt/cni/bin"
                                            },
                                            {
                                                "name": "cni-net-dir",
                                                "mountPath": "/host/etc/cni/net.d"
                                            },
                                            {
                                                "name": "log-dir",
                                                "mountPath": "/host/var/log/aws-routed-eni"
                                            },
                                            {
                                                "name": "run-dir",
                                                "mountPath": "/var/run/aws-node"
                                            },
                                            {
                                                "name": "xtables-lock",
                                                "mountPath": "/run/xtables.lock"
                                            },
                                            {
                                                "name": "kube-api-access-t74bc",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    "/app/grpc-health-probe",
                                                    "-addr=:50051",
                                                    "-connect-timeout=5s",
                                                    "-rpc-timeout=5s"
                                                ]
                                            },
                                            "initialDelaySeconds": 60,
                                            "timeoutSeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    "/app/grpc-health-probe",
                                                    "-addr=:50051",
                                                    "-connect-timeout=5s",
                                                    "-rpc-timeout=5s"
                                                ]
                                            },
                                            "initialDelaySeconds": 1,
                                            "timeoutSeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "name": "aws-eks-nodeagent",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1",
                                        "args": [
                                            "--enable-ipv6=false",
                                            "--enable-network-policy=false",
                                            "--enable-cloudwatch-logs=false",
                                            "--enable-policy-event-logs=false",
                                            "--log-file=/var/log/aws-routed-eni/network-policy-agent.log",
                                            "--metrics-bind-addr=:8162",
                                            "--health-probe-bind-addr=:8163",
                                            "--conntrack-cache-cleanup-period=300"
                                        ],
                                        "env": [
                                            {
                                                "name": "MY_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "25m"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "cni-bin-dir",
                                                "mountPath": "/host/opt/cni/bin"
                                            },
                                            {
                                                "name": "bpf-pin-path",
                                                "mountPath": "/sys/fs/bpf"
                                            },
                                            {
                                                "name": "log-dir",
                                                "mountPath": "/var/log/aws-routed-eni"
                                            },
                                            {
                                                "name": "run-dir",
                                                "mountPath": "/var/run/aws-node"
                                            },
                                            {
                                                "name": "kube-api-access-t74bc",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "Always",
                                        "securityContext": {
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN"
                                                ]
                                            },
                                            "privileged": true
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 10,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "aws-node",
                                "serviceAccount": "aws-node",
                                "nodeName": "ip-10-8-110-61.ec2.internal",
                                "hostNetwork": true,
                                "securityContext": {},
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchFields": [
                                                        {
                                                            "key": "metadata.name",
                                                            "operator": "In",
                                                            "values": [
                                                                "ip-10-8-110-61.ec2.internal"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "operator": "Exists"
                                    },
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/disk-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/memory-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/pid-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unschedulable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/network-unavailable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    }
                                ],
                                "priorityClassName": "system-node-critical",
                                "priority": 2000001000,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:57Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:57Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:01Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:01Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:42Z"
                                    }
                                ],
                                "hostIP": "10.8.110.61",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.110.61"
                                    }
                                ],
                                "podIP": "10.8.110.61",
                                "podIPs": [
                                    {
                                        "ip": "10.8.110.61"
                                    }
                                ],
                                "startTime": "2025-06-11T16:47:42Z",
                                "initContainerStatuses": [
                                    {
                                        "name": "aws-vpc-cni-init",
                                        "state": {
                                            "terminated": {
                                                "exitCode": 0,
                                                "reason": "Completed",
                                                "startedAt": "2025-06-11T16:47:56Z",
                                                "finishedAt": "2025-06-11T16:47:56Z",
                                                "containerID": "containerd://eae694a562074a807c0a8da704c3884f62f0e142944d6cf797c49d80a1e1f15b"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:ce36e6fc8457a3c79eab29ad7ca86ebc9220056c443e15502eeab7ceeef8496f",
                                        "containerID": "containerd://eae694a562074a807c0a8da704c3884f62f0e142944d6cf797c49d80a1e1f15b",
                                        "started": false
                                    }
                                ],
                                "containerStatuses": [
                                    {
                                        "name": "aws-eks-nodeagent",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T16:48:01Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent@sha256:f3280f090b6c5d3128357d8710db237931f5e1089e8017ab3d9cece429d77954",
                                        "containerID": "containerd://e3c813b6840f5ff014cd685fa8bb68cab2a64206b85e1dd4316c0f4efe6171a7",
                                        "started": true
                                    },
                                    {
                                        "name": "aws-node",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T16:47:59Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:efada7e5222a3376dc170b43b569f4dea762fd58186467c233b512bd6ab5415b",
                                        "containerID": "containerd://5a46127e9c90bf34941c9e639d643ca4039b738100dde6f7aa9d145fd4ed21d1",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        },
                        "kube-system/coredns-586b798467-2wnrg": {
                            "metadata": {
                                "name": "coredns-586b798467-2wnrg",
                                "generateName": "coredns-586b798467-",
                                "namespace": "kube-system",
                                "uid": "79c24ab3-b7e7-485a-a2f2-ac1bf92a8260",
                                "resourceVersion": "1599",
                                "creationTimestamp": "2025-06-11T16:42:45Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "coredns",
                                    "k8s-app": "kube-dns",
                                    "pod-template-hash": "586b798467"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "ReplicaSet",
                                        "name": "coredns-586b798467",
                                        "uid": "f4be945e-9b19-4c93-a332-e2ff070f6406",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:45Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {},
                                                    "f:pod-template-hash": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"f4be945e-9b19-4c93-a332-e2ff070f6406\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:affinity": {
                                                    ".": {},
                                                    "f:nodeAffinity": {
                                                        ".": {},
                                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                    },
                                                    "f:podAntiAffinity": {
                                                        ".": {},
                                                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                                    }
                                                },
                                                "f:containers": {
                                                    "k:{\"name\":\"coredns\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:capabilities": {
                                                                ".": {},
                                                                "f:add": {},
                                                                "f:drop": {}
                                                            },
                                                            "f:readOnlyRootFilesystem": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:priorityClassName": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:topologySpreadConstraints": {
                                                    ".": {},
                                                    "k:{\"topologyKey\":\"topology.kubernetes.io/zone\",\"whenUnsatisfiable\":\"ScheduleAnyway\"}": {
                                                        ".": {},
                                                        "f:labelSelector": {},
                                                        "f:maxSkew": {},
                                                        "f:topologyKey": {},
                                                        "f:whenUnsatisfiable": {}
                                                    }
                                                },
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"config-volume\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:items": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kube-scheduler",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:50Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    ".": {},
                                                    "k:{\"type\":\"PodScheduled\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:message": {},
                                                        "f:reason": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                }
                                            }
                                        },
                                        "subresource": "status"
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:48:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.105.223\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "config-volume",
                                        "configMap": {
                                            "name": "coredns",
                                            "items": [
                                                {
                                                    "key": "Corefile",
                                                    "path": "Corefile"
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "kube-api-access-x7b8s",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "coredns",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                        "args": [
                                            "-conf",
                                            "/etc/coredns/Corefile"
                                        ],
                                        "ports": [
                                            {
                                                "name": "dns",
                                                "containerPort": 53,
                                                "protocol": "UDP"
                                            },
                                            {
                                                "name": "dns-tcp",
                                                "containerPort": 53,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "name": "metrics",
                                                "containerPort": 9153,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "memory": "170Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "70Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "config-volume",
                                                "readOnly": true,
                                                "mountPath": "/etc/coredns"
                                            },
                                            {
                                                "name": "kube-api-access-x7b8s",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/health",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 60,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 5
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 8181,
                                                "scheme": "HTTP"
                                            },
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "capabilities": {
                                                "add": [
                                                    "NET_BIND_SERVICE"
                                                ],
                                                "drop": [
                                                    "ALL"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true,
                                            "allowPrivilegeEscalation": false
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "Default",
                                "serviceAccountName": "coredns",
                                "serviceAccount": "coredns",
                                "nodeName": "ip-10-8-110-61.ec2.internal",
                                "securityContext": {},
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "kubernetes.io/os",
                                                            "operator": "In",
                                                            "values": [
                                                                "linux"
                                                            ]
                                                        },
                                                        {
                                                            "key": "kubernetes.io/arch",
                                                            "operator": "In",
                                                            "values": [
                                                                "amd64",
                                                                "arm64"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "weight": 100,
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "k8s-app",
                                                                "operator": "In",
                                                                "values": [
                                                                    "kube-dns"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "topologyKey": "kubernetes.io/hostname"
                                                }
                                            }
                                        ]
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "node-role.kubernetes.io/control-plane",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "CriticalAddonsOnly",
                                        "operator": "Exists"
                                    },
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    }
                                ],
                                "priorityClassName": "system-cluster-critical",
                                "priority": 2000000000,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority",
                                "topologySpreadConstraints": [
                                    {
                                        "maxSkew": 1,
                                        "topologyKey": "topology.kubernetes.io/zone",
                                        "whenUnsatisfiable": "ScheduleAnyway",
                                        "labelSelector": {
                                            "matchLabels": {
                                                "k8s-app": "kube-dns"
                                            }
                                        }
                                    }
                                ]
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:04Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:01Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:04Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:04Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:01Z"
                                    }
                                ],
                                "hostIP": "10.8.110.61",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.110.61"
                                    }
                                ],
                                "podIP": "10.8.105.223",
                                "podIPs": [
                                    {
                                        "ip": "10.8.105.223"
                                    }
                                ],
                                "startTime": "2025-06-11T16:48:01Z",
                                "containerStatuses": [
                                    {
                                        "name": "coredns",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T16:48:04Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:d21885a6632343ecd25d468b54681a0bd512055174bb17bc35a08cb38a965f12",
                                        "containerID": "containerd://c7073205c4cc1795270aa5ab3891f7cc46453432bf3a7a10ec540eb80ba9e48f",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        },
                        "kube-system/coredns-586b798467-9ngj9": {
                            "metadata": {
                                "name": "coredns-586b798467-9ngj9",
                                "generateName": "coredns-586b798467-",
                                "namespace": "kube-system",
                                "uid": "3ccc0d03-7187-4348-9415-94bba0c106a8",
                                "resourceVersion": "1594",
                                "creationTimestamp": "2025-06-11T16:42:45Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "coredns",
                                    "k8s-app": "kube-dns",
                                    "pod-template-hash": "586b798467"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "ReplicaSet",
                                        "name": "coredns-586b798467",
                                        "uid": "f4be945e-9b19-4c93-a332-e2ff070f6406",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:45Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {},
                                                    "f:pod-template-hash": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"f4be945e-9b19-4c93-a332-e2ff070f6406\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:affinity": {
                                                    ".": {},
                                                    "f:nodeAffinity": {
                                                        ".": {},
                                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                    },
                                                    "f:podAntiAffinity": {
                                                        ".": {},
                                                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                                    }
                                                },
                                                "f:containers": {
                                                    "k:{\"name\":\"coredns\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:capabilities": {
                                                                ".": {},
                                                                "f:add": {},
                                                                "f:drop": {}
                                                            },
                                                            "f:readOnlyRootFilesystem": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:priorityClassName": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:topologySpreadConstraints": {
                                                    ".": {},
                                                    "k:{\"topologyKey\":\"topology.kubernetes.io/zone\",\"whenUnsatisfiable\":\"ScheduleAnyway\"}": {
                                                        ".": {},
                                                        "f:labelSelector": {},
                                                        "f:maxSkew": {},
                                                        "f:topologyKey": {},
                                                        "f:whenUnsatisfiable": {}
                                                    }
                                                },
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"config-volume\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:items": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kube-scheduler",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:50Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    ".": {},
                                                    "k:{\"type\":\"PodScheduled\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:message": {},
                                                        "f:reason": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                }
                                            }
                                        },
                                        "subresource": "status"
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:48:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.101.22\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "config-volume",
                                        "configMap": {
                                            "name": "coredns",
                                            "items": [
                                                {
                                                    "key": "Corefile",
                                                    "path": "Corefile"
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "kube-api-access-9rmqw",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "coredns",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                        "args": [
                                            "-conf",
                                            "/etc/coredns/Corefile"
                                        ],
                                        "ports": [
                                            {
                                                "name": "dns",
                                                "containerPort": 53,
                                                "protocol": "UDP"
                                            },
                                            {
                                                "name": "dns-tcp",
                                                "containerPort": 53,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "name": "metrics",
                                                "containerPort": 9153,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "memory": "170Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "70Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "config-volume",
                                                "readOnly": true,
                                                "mountPath": "/etc/coredns"
                                            },
                                            {
                                                "name": "kube-api-access-9rmqw",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/health",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 60,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 5
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 8181,
                                                "scheme": "HTTP"
                                            },
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "capabilities": {
                                                "add": [
                                                    "NET_BIND_SERVICE"
                                                ],
                                                "drop": [
                                                    "ALL"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true,
                                            "allowPrivilegeEscalation": false
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "Default",
                                "serviceAccountName": "coredns",
                                "serviceAccount": "coredns",
                                "nodeName": "ip-10-8-110-61.ec2.internal",
                                "securityContext": {},
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "kubernetes.io/os",
                                                            "operator": "In",
                                                            "values": [
                                                                "linux"
                                                            ]
                                                        },
                                                        {
                                                            "key": "kubernetes.io/arch",
                                                            "operator": "In",
                                                            "values": [
                                                                "amd64",
                                                                "arm64"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "weight": 100,
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "k8s-app",
                                                                "operator": "In",
                                                                "values": [
                                                                    "kube-dns"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "topologyKey": "kubernetes.io/hostname"
                                                }
                                            }
                                        ]
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "node-role.kubernetes.io/control-plane",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "CriticalAddonsOnly",
                                        "operator": "Exists"
                                    },
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    }
                                ],
                                "priorityClassName": "system-cluster-critical",
                                "priority": 2000000000,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority",
                                "topologySpreadConstraints": [
                                    {
                                        "maxSkew": 1,
                                        "topologyKey": "topology.kubernetes.io/zone",
                                        "whenUnsatisfiable": "ScheduleAnyway",
                                        "labelSelector": {
                                            "matchLabels": {
                                                "k8s-app": "kube-dns"
                                            }
                                        }
                                    }
                                ]
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:04Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:01Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:04Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:04Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:01Z"
                                    }
                                ],
                                "hostIP": "10.8.110.61",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.110.61"
                                    }
                                ],
                                "podIP": "10.8.101.22",
                                "podIPs": [
                                    {
                                        "ip": "10.8.101.22"
                                    }
                                ],
                                "startTime": "2025-06-11T16:48:01Z",
                                "containerStatuses": [
                                    {
                                        "name": "coredns",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T16:48:04Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:d21885a6632343ecd25d468b54681a0bd512055174bb17bc35a08cb38a965f12",
                                        "containerID": "containerd://29b08c74ff6bafca3dc28d5ae385d9de6f1b05917bad29ec08b3c6a1b2e8a1bc",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        },
                        "kube-system/kube-proxy-dvxxm": {
                            "metadata": {
                                "name": "kube-proxy-dvxxm",
                                "generateName": "kube-proxy-",
                                "namespace": "kube-system",
                                "uid": "904e2489-e929-436f-a49a-ec09b82e3e7a",
                                "resourceVersion": "1526",
                                "creationTimestamp": "2025-06-11T16:47:42Z",
                                "labels": {
                                    "controller-revision-hash": "65f976f6bf",
                                    "k8s-app": "kube-proxy",
                                    "pod-template-generation": "1"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "DaemonSet",
                                        "name": "kube-proxy",
                                        "uid": "e7a66e5c-c6ef-4024-8389-9861d4365da9",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:42Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:controller-revision-hash": {},
                                                    "f:k8s-app": {},
                                                    "f:pod-template-generation": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"e7a66e5c-c6ef-4024-8389-9861d4365da9\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:affinity": {
                                                    ".": {},
                                                    "f:nodeAffinity": {
                                                        ".": {},
                                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                    }
                                                },
                                                "f:containers": {
                                                    "k:{\"name\":\"kube-proxy\"}": {
                                                        ".": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/lib/modules\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/kube-proxy-config/\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/kube-proxy/\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:hostNetwork": {},
                                                "f:priorityClassName": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"config\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"kubeconfig\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"lib-modules\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlog\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"xtables-lock\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:57Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.110.61\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "varlog",
                                        "hostPath": {
                                            "path": "/var/log",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "hostPath": {
                                            "path": "/run/xtables.lock",
                                            "type": "FileOrCreate"
                                        }
                                    },
                                    {
                                        "name": "lib-modules",
                                        "hostPath": {
                                            "path": "/lib/modules",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "kubeconfig",
                                        "configMap": {
                                            "name": "kube-proxy",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "config",
                                        "configMap": {
                                            "name": "kube-proxy-config",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "kube-api-access-s2rhc",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "kube-proxy",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3",
                                        "command": [
                                            "kube-proxy",
                                            "--v=2",
                                            "--config=/var/lib/kube-proxy-config/config",
                                            "--hostname-override=$(NODE_NAME)"
                                        ],
                                        "env": [
                                            {
                                                "name": "NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "varlog",
                                                "mountPath": "/var/log"
                                            },
                                            {
                                                "name": "xtables-lock",
                                                "mountPath": "/run/xtables.lock"
                                            },
                                            {
                                                "name": "lib-modules",
                                                "readOnly": true,
                                                "mountPath": "/lib/modules"
                                            },
                                            {
                                                "name": "kubeconfig",
                                                "mountPath": "/var/lib/kube-proxy/"
                                            },
                                            {
                                                "name": "config",
                                                "mountPath": "/var/lib/kube-proxy-config/"
                                            },
                                            {
                                                "name": "kube-api-access-s2rhc",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "privileged": true
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "kube-proxy",
                                "serviceAccount": "kube-proxy",
                                "nodeName": "ip-10-8-110-61.ec2.internal",
                                "hostNetwork": true,
                                "securityContext": {},
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchFields": [
                                                        {
                                                            "key": "metadata.name",
                                                            "operator": "In",
                                                            "values": [
                                                                "ip-10-8-110-61.ec2.internal"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "operator": "Exists"
                                    },
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/disk-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/memory-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/pid-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unschedulable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/network-unavailable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    }
                                ],
                                "priorityClassName": "system-node-critical",
                                "priority": 2000001000,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:57Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:42Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:57Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:57Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:42Z"
                                    }
                                ],
                                "hostIP": "10.8.110.61",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.110.61"
                                    }
                                ],
                                "podIP": "10.8.110.61",
                                "podIPs": [
                                    {
                                        "ip": "10.8.110.61"
                                    }
                                ],
                                "startTime": "2025-06-11T16:47:42Z",
                                "containerStatuses": [
                                    {
                                        "name": "kube-proxy",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T16:47:56Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:5ed7b40f2b07b992318718d8264324747ecc24b4ea8fab26095b8e569980eff6",
                                        "containerID": "containerd://3152a8c5e94e8bf0b9016d076223830c061f5c72bbc3e5ff96d00e7bb9797281",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        }
                    },
                    "hash": "1fb62747d0de290b43e6c3f5008ce096f4f11ecaef5c28366dce55e901bd01c9"
                },
                "ip-10-8-143-217.ec2.internal": {
                    "node": {
                        "metadata": {
                            "name": "ip-10-8-143-217.ec2.internal",
                            "uid": "5d12e7e2-5551-402c-8f5d-149165fa28fd",
                            "resourceVersion": "293077",
                            "creationTimestamp": "2025-06-11T16:47:41Z",
                            "labels": {
                                "beta.kubernetes.io/arch": "amd64",
                                "beta.kubernetes.io/instance-type": "m5.large",
                                "beta.kubernetes.io/os": "linux",
                                "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                "eks.amazonaws.com/nodegroup": "upprom-test-ph-kata-nodes-20250611164557466700000014",
                                "eks.amazonaws.com/nodegroup-image": "ami-09b245eb641406d83",
                                "eks.amazonaws.com/sourceLaunchTemplateId": "lt-062a8941ceb8c08e8",
                                "eks.amazonaws.com/sourceLaunchTemplateVersion": "1",
                                "failure-domain.beta.kubernetes.io/region": "us-east-1",
                                "failure-domain.beta.kubernetes.io/zone": "us-east-1c",
                                "k8s.io/cloud-provider-aws": "79b8568a8a99eefe977336eb0445c8df",
                                "kata-runtime": "running",
                                "kubernetes.io/arch": "amd64",
                                "kubernetes.io/hostname": "ip-10-8-143-217.ec2.internal",
                                "kubernetes.io/os": "linux",
                                "node-role.kubernetes.io/devpod-node": "1",
                                "node-role.kubernetes.io/kata-devpod-node": "1",
                                "node-role.kubernetes.io/vcluster-node": "1",
                                "node.kubernetes.io/instance-type": "m5.large",
                                "topology.k8s.aws/zone-id": "use1-az6",
                                "topology.kubernetes.io/region": "us-east-1",
                                "topology.kubernetes.io/zone": "us-east-1c"
                            },
                            "annotations": {
                                "alpha.kubernetes.io/provided-node-ip": "10.8.143.217",
                                "node.alpha.kubernetes.io/ttl": "0",
                                "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-controller-manager",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:41Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                "f:node.alpha.kubernetes.io/ttl": {}
                                            }
                                        }
                                    }
                                },
                                {
                                    "manager": "kubelet",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:41Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:alpha.kubernetes.io/provided-node-ip": {},
                                                "f:volumes.kubernetes.io/controller-managed-attach-detach": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:beta.kubernetes.io/arch": {},
                                                "f:beta.kubernetes.io/os": {},
                                                "f:kubernetes.io/arch": {},
                                                "f:kubernetes.io/hostname": {},
                                                "f:kubernetes.io/os": {}
                                            }
                                        },
                                        "f:spec": {
                                            "f:providerID": {}
                                        }
                                    }
                                },
                                {
                                    "manager": "aws-cloud-controller-manager",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:42Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                "f:beta.kubernetes.io/instance-type": {},
                                                "f:failure-domain.beta.kubernetes.io/region": {},
                                                "f:failure-domain.beta.kubernetes.io/zone": {},
                                                "f:k8s.io/cloud-provider-aws": {},
                                                "f:node.kubernetes.io/instance-type": {},
                                                "f:topology.k8s.aws/zone-id": {},
                                                "f:topology.kubernetes.io/region": {},
                                                "f:topology.kubernetes.io/zone": {}
                                            }
                                        }
                                    }
                                },
                                {
                                    "manager": "aws-cloud-controller-manager",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:42Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:status": {
                                            "f:addresses": {
                                                "k:{\"type\":\"InternalDNS\"}": {
                                                    ".": {},
                                                    "f:address": {},
                                                    "f:type": {}
                                                }
                                            }
                                        }
                                    },
                                    "subresource": "status"
                                },
                                {
                                    "manager": "vpcLambda",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:47:53Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                "f:eks.amazonaws.com/capacityType": {},
                                                "f:eks.amazonaws.com/nodegroup": {},
                                                "f:eks.amazonaws.com/nodegroup-image": {},
                                                "f:eks.amazonaws.com/sourceLaunchTemplateId": {},
                                                "f:eks.amazonaws.com/sourceLaunchTemplateVersion": {},
                                                "f:kata-runtime": {},
                                                "f:node-role.kubernetes.io/devpod-node": {},
                                                "f:node-role.kubernetes.io/kata-devpod-node": {},
                                                "f:node-role.kubernetes.io/vcluster-node": {}
                                            }
                                        }
                                    }
                                },
                                {
                                    "manager": "kubelet",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-12T17:53:49Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:status": {
                                            "f:conditions": {
                                                "k:{\"type\":\"DiskPressure\"}": {
                                                    "f:lastHeartbeatTime": {}
                                                },
                                                "k:{\"type\":\"MemoryPressure\"}": {
                                                    "f:lastHeartbeatTime": {}
                                                },
                                                "k:{\"type\":\"PIDPressure\"}": {
                                                    "f:lastHeartbeatTime": {}
                                                },
                                                "k:{\"type\":\"Ready\"}": {
                                                    "f:lastHeartbeatTime": {},
                                                    "f:lastTransitionTime": {},
                                                    "f:message": {},
                                                    "f:reason": {},
                                                    "f:status": {}
                                                }
                                            },
                                            "f:images": {}
                                        }
                                    },
                                    "subresource": "status"
                                }
                            ]
                        },
                        "spec": {
                            "providerID": "aws:///us-east-1c/i-05906509a29c30c1a"
                        },
                        "status": {
                            "capacity": {
                                "cpu": "2",
                                "ephemeral-storage": "524210156Ki",
                                "hugepages-1Gi": "0",
                                "hugepages-2Mi": "0",
                                "memory": "7927548Ki",
                                "pods": "29"
                            },
                            "allocatable": {
                                "cpu": "1930m",
                                "ephemeral-storage": "482038337146",
                                "hugepages-1Gi": "0",
                                "hugepages-2Mi": "0",
                                "memory": "7237372Ki",
                                "pods": "29"
                            },
                            "conditions": [
                                {
                                    "type": "MemoryPressure",
                                    "status": "False",
                                    "lastHeartbeatTime": "2025-06-12T17:53:49Z",
                                    "lastTransitionTime": "2025-06-11T16:47:38Z",
                                    "reason": "KubeletHasSufficientMemory",
                                    "message": "kubelet has sufficient memory available"
                                },
                                {
                                    "type": "DiskPressure",
                                    "status": "False",
                                    "lastHeartbeatTime": "2025-06-12T17:53:49Z",
                                    "lastTransitionTime": "2025-06-11T16:47:38Z",
                                    "reason": "KubeletHasNoDiskPressure",
                                    "message": "kubelet has no disk pressure"
                                },
                                {
                                    "type": "PIDPressure",
                                    "status": "False",
                                    "lastHeartbeatTime": "2025-06-12T17:53:49Z",
                                    "lastTransitionTime": "2025-06-11T16:47:38Z",
                                    "reason": "KubeletHasSufficientPID",
                                    "message": "kubelet has sufficient PID available"
                                },
                                {
                                    "type": "Ready",
                                    "status": "True",
                                    "lastHeartbeatTime": "2025-06-12T17:53:49Z",
                                    "lastTransitionTime": "2025-06-11T16:48:01Z",
                                    "reason": "KubeletReady",
                                    "message": "kubelet is posting ready status"
                                }
                            ],
                            "addresses": [
                                {
                                    "type": "InternalIP",
                                    "address": "10.8.143.217"
                                },
                                {
                                    "type": "InternalDNS",
                                    "address": "ip-10-8-143-217.ec2.internal"
                                },
                                {
                                    "type": "Hostname",
                                    "address": "ip-10-8-143-217.ec2.internal"
                                }
                            ],
                            "daemonEndpoints": {
                                "kubeletEndpoint": {
                                    "Port": 10250
                                }
                            },
                            "nodeInfo": {
                                "machineID": "ec23dff74513459f421254dc913c0df4",
                                "systemUUID": "ec217bee-a797-782c-c4b5-7bda45590bcf",
                                "bootID": "9ae9e9be-53c6-4cb4-a514-ce61d858b8ed",
                                "kernelVersion": "6.7.0-dz-pvm-host",
                                "osImage": "Amazon Linux 2023.6.20250128",
                                "containerRuntimeVersion": "containerd://1.7.25",
                                "kubeletVersion": "v1.30.8-eks-aeac579",
                                "kubeProxyVersion": "v1.30.8-eks-aeac579",
                                "operatingSystem": "linux",
                                "architecture": "amd64"
                            },
                            "images": [
                                {
                                    "names": [
                                        "docker.io/devzeroinc/gha-scale-set-runner-ubuntu:24.04-devel@sha256:7eb16ed43cedd1a61a77e8e7f2ea073c426ac81d389b889d6e7f87e309ef33cf"
                                    ],
                                    "sizeBytes": 21951436956
                                },
                                {
                                    "names": [
                                        "quay.io/prometheus/prometheus@sha256:9abc6cf6aea7710d163dbb28d8eeb7dc5baef01e38fa4cd146a406dd9f07f70d",
                                        "quay.io/prometheus/prometheus:v3.4.1"
                                    ],
                                    "sizeBytes": 119927953
                                },
                                {
                                    "names": [
                                        "docker.io/library/nginx@sha256:a484819eb60211f5299034ac80f6a681b06f89e65866ce91f356ed7c72af059c",
                                        "docker.io/library/nginx:1.25"
                                    ],
                                    "sizeBytes": 71005258
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:ce36e6fc8457a3c79eab29ad7ca86ebc9220056c443e15502eeab7ceeef8496f",
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1"
                                    ],
                                    "sizeBytes": 62982633
                                },
                                {
                                    "names": [
                                        "docker.io/remontada007/zxporter@sha256:2c97dc1b86765d03b4cd32548ab2a545d1fb943c3791335c6b1b90266a1b2f13",
                                        "docker.io/remontada007/zxporter:mev4"
                                    ],
                                    "sizeBytes": 61512953
                                },
                                {
                                    "names": [
                                        "docker.io/remontada007/zxporter@sha256:b69371ed31480cefd553936ba009b1174751458d2fffcc86d853d5a0ece6fe07",
                                        "docker.io/remontada007/zxporter:mev3"
                                    ],
                                    "sizeBytes": 61511878
                                },
                                {
                                    "names": [
                                        "docker.io/remontada007/zxporter@sha256:42253de02c15536a9c2b796bc53e1220e291048fb54b6b7395232439b33da7e1",
                                        "docker.io/remontada007/zxporter:mev1"
                                    ],
                                    "sizeBytes": 61502861
                                },
                                {
                                    "names": [
                                        "docker.io/devzeroinc/zxporter@sha256:1e0cbe5913019e6199328a43567ef5dc3b0285ad1e30d3c5d318c2a9799687dc",
                                        "docker.io/devzeroinc/zxporter:latest"
                                    ],
                                    "sizeBytes": 61455132
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:efada7e5222a3376dc170b43b569f4dea762fd58186467c233b512bd6ab5415b",
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1"
                                    ],
                                    "sizeBytes": 48672727
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent@sha256:f3280f090b6c5d3128357d8710db237931f5e1089e8017ab3d9cece429d77954",
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1"
                                    ],
                                    "sizeBytes": 40739177
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:5ed7b40f2b07b992318718d8264324747ecc24b4ea8fab26095b8e569980eff6",
                                        "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3"
                                    ],
                                    "sizeBytes": 31494047
                                },
                                {
                                    "names": [
                                        "registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9",
                                        "registry.k8s.io/metrics-server/metrics-server:v0.7.2"
                                    ],
                                    "sizeBytes": 19494617
                                },
                                {
                                    "names": [
                                        "registry.k8s.io/metrics-server/metrics-server@sha256:1c0419326500f1704af580d12a579671b2c3a06a8aa918cd61d0a35fb2d6b3ce",
                                        "registry.k8s.io/metrics-server/metrics-server:v0.7.0"
                                    ],
                                    "sizeBytes": 19435023
                                },
                                {
                                    "names": [
                                        "registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:db384bf43222b066c378e77027a675d4cd9911107adba46c2922b3a55e10d6fb",
                                        "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0"
                                    ],
                                    "sizeBytes": 15293353
                                },
                                {
                                    "names": [
                                        "quay.io/prometheus-operator/prometheus-config-reloader@sha256:78aec597d87aa2b4ba947ab9190538dae93a58a67b8e930aefea1086534b02ef",
                                        "quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0"
                                    ],
                                    "sizeBytes": 14977246
                                },
                                {
                                    "names": [
                                        "quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a",
                                        "quay.io/prometheus/node-exporter:v1.9.1"
                                    ],
                                    "sizeBytes": 12955907
                                },
                                {
                                    "names": [
                                        "602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/pause:3.10",
                                        "localhost/kubernetes/pause:latest"
                                    ],
                                    "sizeBytes": 318731
                                }
                            ]
                        }
                    },
                    "pods": {
                        "default/nginx-deployment-6c9b4ccd66-wkp5c": {
                            "metadata": {
                                "name": "nginx-deployment-6c9b4ccd66-wkp5c",
                                "generateName": "nginx-deployment-6c9b4ccd66-",
                                "namespace": "default",
                                "uid": "6dd48da0-51d3-4829-9403-90fe2583df7e",
                                "resourceVersion": "262063",
                                "creationTimestamp": "2025-06-12T15:12:20Z",
                                "labels": {
                                    "app": "nginx",
                                    "pod-template-hash": "6c9b4ccd66"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "ReplicaSet",
                                        "name": "nginx-deployment-6c9b4ccd66",
                                        "uid": "62abfca4-bd72-4945-8cc2-b11909322e1a",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T15:12:20Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app": {},
                                                    "f:pod-template-hash": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"62abfca4-bd72-4945-8cc2-b11909322e1a\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"nginx\"}": {
                                                        ".": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T15:12:25Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.131.174\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "kube-api-access-mdvh9",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nginx",
                                        "image": "nginx:1.25",
                                        "ports": [
                                            {
                                                "containerPort": 80,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "4000Mi"
                                            },
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "2000Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "kube-api-access-mdvh9",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "default",
                                "serviceAccount": "default",
                                "nodeName": "ip-10-8-143-217.ec2.internal",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    }
                                ],
                                "priority": 0,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:25Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:20Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:25Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:25Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T15:12:20Z"
                                    }
                                ],
                                "hostIP": "10.8.143.217",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "podIP": "10.8.131.174",
                                "podIPs": [
                                    {
                                        "ip": "10.8.131.174"
                                    }
                                ],
                                "startTime": "2025-06-12T15:12:20Z",
                                "containerStatuses": [
                                    {
                                        "name": "nginx",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-12T15:12:24Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "docker.io/library/nginx:1.25",
                                        "imageID": "docker.io/library/nginx@sha256:a484819eb60211f5299034ac80f6a681b06f89e65866ce91f356ed7c72af059c",
                                        "containerID": "containerd://163cab7b12bfb25103ef0e12a0266a610fbfa900c6f8698a03d1a3c84fa94318",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        },
                        "devzero-zxporter/devzero-zxporter-controller-manager-645c9b6d64-q2svb": {
                            "metadata": {
                                "name": "devzero-zxporter-controller-manager-645c9b6d64-q2svb",
                                "generateName": "devzero-zxporter-controller-manager-645c9b6d64-",
                                "namespace": "devzero-zxporter",
                                "uid": "6c089688-7e50-4672-8cd0-f6ac6e892c9e",
                                "resourceVersion": "293037",
                                "creationTimestamp": "2025-06-12T17:53:32Z",
                                "labels": {
                                    "control-plane": "controller-manager",
                                    "pod-template-hash": "645c9b6d64"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/default-container": "manager"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "ReplicaSet",
                                        "name": "devzero-zxporter-controller-manager-645c9b6d64",
                                        "uid": "5d2dd27e-fa9e-4f4e-9c71-132a36957565",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T17:53:32Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/default-container": {}
                                                },
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:control-plane": {},
                                                    "f:pod-template-hash": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"5d2dd27e-fa9e-4f4e-9c71-132a36957565\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"manager\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:capabilities": {
                                                                ".": {},
                                                                "f:drop": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/etc/zxporter/config\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:runAsNonRoot": {}
                                                },
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"config-volume\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T17:53:42Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.135.206\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "config-volume",
                                        "configMap": {
                                            "name": "devzero-zxporter-env-config",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "kube-api-access-8ln2s",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "manager",
                                        "image": "remontada007/zxporter:mev4",
                                        "args": [
                                            "--metrics-bind-address=:8443",
                                            "--leader-elect",
                                            "--health-probe-bind-address=:8081"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "200m",
                                                "memory": "128Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "config-volume",
                                                "readOnly": true,
                                                "mountPath": "/etc/zxporter/config"
                                            },
                                            {
                                                "name": "kube-api-access-8ln2s",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": 8081,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 15,
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 20,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/readyz",
                                                "port": 8081,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "capabilities": {
                                                "drop": [
                                                    "ALL"
                                                ]
                                            },
                                            "allowPrivilegeEscalation": false
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 10,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "devzero-zxporter-controller-manager",
                                "serviceAccount": "devzero-zxporter-controller-manager",
                                "nodeName": "ip-10-8-143-217.ec2.internal",
                                "securityContext": {
                                    "runAsNonRoot": true
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    }
                                ],
                                "priority": 0,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T17:53:34Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T17:53:32Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T17:53:42Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T17:53:42Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-12T17:53:32Z"
                                    }
                                ],
                                "hostIP": "10.8.143.217",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "podIP": "10.8.135.206",
                                "podIPs": [
                                    {
                                        "ip": "10.8.135.206"
                                    }
                                ],
                                "startTime": "2025-06-12T17:53:32Z",
                                "containerStatuses": [
                                    {
                                        "name": "manager",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-12T17:53:34Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "docker.io/remontada007/zxporter:mev4",
                                        "imageID": "docker.io/remontada007/zxporter@sha256:2c97dc1b86765d03b4cd32548ab2a545d1fb943c3791335c6b1b90266a1b2f13",
                                        "containerID": "containerd://1bd953686b1c580506b764f9050d224109ed44744e6008063022dfeb391c5f9b",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        },
                        "devzero-zxporter/dz-metrics-server-7b7f7bf57b-vm88j": {
                            "metadata": {
                                "name": "dz-metrics-server-7b7f7bf57b-vm88j",
                                "generateName": "dz-metrics-server-7b7f7bf57b-",
                                "namespace": "devzero-zxporter",
                                "uid": "03a6b7dc-c1fb-46c8-84b6-4dd69778e1d5",
                                "resourceVersion": "30448",
                                "creationTimestamp": "2025-06-11T19:21:46Z",
                                "labels": {
                                    "app.kubernetes.io/instance": "metrics-server",
                                    "app.kubernetes.io/name": "dz-metrics-server",
                                    "pod-template-hash": "7b7f7bf57b"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "ReplicaSet",
                                        "name": "dz-metrics-server-7b7f7bf57b",
                                        "uid": "ed8910e7-24ae-476d-92e4-9fa21d07dcd4",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:46Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:pod-template-hash": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"ed8910e7-24ae-476d-92e4-9fa21d07dcd4\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"metrics-server\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:capabilities": {
                                                                ".": {},
                                                                "f:drop": {}
                                                            },
                                                            "f:readOnlyRootFilesystem": {},
                                                            "f:runAsNonRoot": {},
                                                            "f:runAsUser": {},
                                                            "f:seccompProfile": {
                                                                ".": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/tmp\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:priorityClassName": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"tmp\"}": {
                                                        ".": {},
                                                        "f:emptyDir": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:22:07Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.131.66\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "tmp",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "kube-api-access-jwzjp",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "metrics-server",
                                        "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2",
                                        "args": [
                                            "--secure-port=10250",
                                            "--cert-dir=/tmp",
                                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                            "--kubelet-use-node-status-port",
                                            "--metric-resolution=15s",
                                            "--kubelet-insecure-tls"
                                        ],
                                        "ports": [
                                            {
                                                "name": "https",
                                                "containerPort": 10250,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "200Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "tmp",
                                                "mountPath": "/tmp"
                                            },
                                            {
                                                "name": "kube-api-access-jwzjp",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/livez",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/readyz",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "initialDelaySeconds": 20,
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "capabilities": {
                                                "drop": [
                                                    "ALL"
                                                ]
                                            },
                                            "runAsUser": 1000,
                                            "runAsNonRoot": true,
                                            "readOnlyRootFilesystem": true,
                                            "allowPrivilegeEscalation": false,
                                            "seccompProfile": {
                                                "type": "RuntimeDefault"
                                            }
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "dz-metrics-server",
                                "serviceAccount": "dz-metrics-server",
                                "nodeName": "ip-10-8-143-217.ec2.internal",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    }
                                ],
                                "priorityClassName": "system-cluster-critical",
                                "priority": 2000000000,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:48Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:46Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:22:07Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:22:07Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:46Z"
                                    }
                                ],
                                "hostIP": "10.8.143.217",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "podIP": "10.8.131.66",
                                "podIPs": [
                                    {
                                        "ip": "10.8.131.66"
                                    }
                                ],
                                "startTime": "2025-06-11T19:21:46Z",
                                "containerStatuses": [
                                    {
                                        "name": "metrics-server",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T19:21:47Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2",
                                        "imageID": "registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9",
                                        "containerID": "containerd://fd71891a678015268ba3f17ac18394fdc561d86ae8b789b586fab2d0327c5abf",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        },
                        "devzero-zxporter/dz-prometheus-node-exporter-7z6wq": {
                            "metadata": {
                                "name": "dz-prometheus-node-exporter-7z6wq",
                                "generateName": "dz-prometheus-node-exporter-",
                                "namespace": "devzero-zxporter",
                                "uid": "9862d88d-a28c-46ec-a980-c393c5d23854",
                                "resourceVersion": "30285",
                                "creationTimestamp": "2025-06-11T19:21:35Z",
                                "labels": {
                                    "app.kubernetes.io/component": "metrics",
                                    "app.kubernetes.io/instance": "node-exporter",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/part-of": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/version": "1.9.1",
                                    "controller-revision-hash": "bdd7b4c8",
                                    "helm.sh/chart": "prometheus-node-exporter-4.47.0",
                                    "pod-template-generation": "1"
                                },
                                "annotations": {
                                    "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                    "prometheus.io/path": "/metrics",
                                    "prometheus.io/port": "9101",
                                    "prometheus.io/scrape": "true"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "DaemonSet",
                                        "name": "dz-prometheus-node-exporter",
                                        "uid": "b8cee21f-6011-4558-8552-3dd63c82463e",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:35Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:cluster-autoscaler.kubernetes.io/safe-to-evict": {},
                                                    "f:prometheus.io/path": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:controller-revision-hash": {},
                                                    "f:helm.sh/chart": {},
                                                    "f:pod-template-generation": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"b8cee21f-6011-4558-8552-3dd63c82463e\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:affinity": {
                                                    ".": {},
                                                    "f:nodeAffinity": {
                                                        ".": {},
                                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                    }
                                                },
                                                "f:automountServiceAccountToken": {},
                                                "f:containers": {
                                                    "k:{\"name\":\"node-exporter\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"HOST_IP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:hostPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:readOnlyRootFilesystem": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/host/proc\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/host/root\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:mountPropagation": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/host/sys\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:hostNetwork": {},
                                                "f:hostPID": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:fsGroup": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"proc\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"root\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"sys\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:36Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.143.217\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "proc",
                                        "hostPath": {
                                            "path": "/proc",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "sys",
                                        "hostPath": {
                                            "path": "/sys",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "root",
                                        "hostPath": {
                                            "path": "/",
                                            "type": ""
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "node-exporter",
                                        "image": "quay.io/prometheus/node-exporter:v1.9.1",
                                        "args": [
                                            "--path.procfs=/host/proc",
                                            "--path.sysfs=/host/sys",
                                            "--path.rootfs=/host/root",
                                            "--path.udev.data=/host/root/run/udev/data",
                                            "--web.listen-address=[$(HOST_IP)]:9101"
                                        ],
                                        "ports": [
                                            {
                                                "name": "metrics",
                                                "hostPort": 9101,
                                                "containerPort": 9101,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "HOST_IP",
                                                "value": "0.0.0.0"
                                            }
                                        ],
                                        "resources": {},
                                        "volumeMounts": [
                                            {
                                                "name": "proc",
                                                "readOnly": true,
                                                "mountPath": "/host/proc"
                                            },
                                            {
                                                "name": "sys",
                                                "readOnly": true,
                                                "mountPath": "/host/sys"
                                            },
                                            {
                                                "name": "root",
                                                "readOnly": true,
                                                "mountPath": "/host/root",
                                                "mountPropagation": "HostToContainer"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/",
                                                "port": 9101,
                                                "scheme": "HTTP"
                                            },
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/",
                                                "port": 9101,
                                                "scheme": "HTTP"
                                            },
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "readOnlyRootFilesystem": true,
                                            "allowPrivilegeEscalation": false
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "dz-prometheus-node-exporter",
                                "serviceAccount": "dz-prometheus-node-exporter",
                                "automountServiceAccountToken": false,
                                "nodeName": "ip-10-8-143-217.ec2.internal",
                                "hostNetwork": true,
                                "hostPID": true,
                                "securityContext": {
                                    "runAsUser": 65534,
                                    "runAsGroup": 65534,
                                    "runAsNonRoot": true,
                                    "fsGroup": 65534
                                },
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchFields": [
                                                        {
                                                            "key": "metadata.name",
                                                            "operator": "In",
                                                            "values": [
                                                                "ip-10-8-143-217.ec2.internal"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/disk-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/memory-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/pid-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unschedulable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/network-unavailable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    }
                                ],
                                "priority": 0,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:36Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:35Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:36Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:36Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:35Z"
                                    }
                                ],
                                "hostIP": "10.8.143.217",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "podIP": "10.8.143.217",
                                "podIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "startTime": "2025-06-11T19:21:35Z",
                                "containerStatuses": [
                                    {
                                        "name": "node-exporter",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T19:21:35Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "quay.io/prometheus/node-exporter:v1.9.1",
                                        "imageID": "quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a",
                                        "containerID": "containerd://12b4bc7fabef1051c071562512e6b0fba70d376b306aa6e8c879638751655e67",
                                        "started": true
                                    }
                                ],
                                "qosClass": "BestEffort"
                            }
                        },
                        "devzero-zxporter/prometheus-dz-prometheus-server-5cc6d954cd-vpp6q": {
                            "metadata": {
                                "name": "prometheus-dz-prometheus-server-5cc6d954cd-vpp6q",
                                "generateName": "prometheus-dz-prometheus-server-5cc6d954cd-",
                                "namespace": "devzero-zxporter",
                                "uid": "be6a8344-1fe6-491c-8964-81f29d2c9157",
                                "resourceVersion": "30457",
                                "creationTimestamp": "2025-06-11T19:21:33Z",
                                "labels": {
                                    "app.kubernetes.io/component": "server",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/name": "dz-prometheus",
                                    "app.kubernetes.io/part-of": "dz-prometheus",
                                    "app.kubernetes.io/version": "v3.4.1",
                                    "helm.sh/chart": "prometheus-27.20.0",
                                    "pod-template-hash": "5cc6d954cd"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "ReplicaSet",
                                        "name": "prometheus-dz-prometheus-server-5cc6d954cd",
                                        "uid": "c2cf5038-ff1d-4259-bfab-f26ceba89449",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:33Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {},
                                                    "f:pod-template-hash": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"c2cf5038-ff1d-4259-bfab-f26ceba89449\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"dz-prometheus-server\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":9090,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {},
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/data\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/etc/config\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    },
                                                    "k:{\"name\":\"dz-prometheus-server-configmap-reload\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {},
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/etc/config\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:fsGroup": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"config-volume\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"storage-volume\"}": {
                                                        ".": {},
                                                        "f:emptyDir": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:22:08Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.136.124\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "config-volume",
                                        "configMap": {
                                            "name": "prometheus-dz-prometheus-server",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "storage-volume",
                                        "emptyDir": {}
                                    },
                                    {
                                        "name": "kube-api-access-qm9zv",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "dz-prometheus-server-configmap-reload",
                                        "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0",
                                        "args": [
                                            "--watched-dir=/etc/config",
                                            "--listen-address=0.0.0.0:8080",
                                            "--reload-url=http://127.0.0.1:9090/-/reload"
                                        ],
                                        "ports": [
                                            {
                                                "name": "metrics",
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {},
                                        "volumeMounts": [
                                            {
                                                "name": "config-volume",
                                                "readOnly": true,
                                                "mountPath": "/etc/config"
                                            },
                                            {
                                                "name": "kube-api-access-qm9zv",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "metrics",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "metrics",
                                                "scheme": "HTTP"
                                            },
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "dz-prometheus-server",
                                        "image": "quay.io/prometheus/prometheus:v3.4.1",
                                        "args": [
                                            "--storage.tsdb.retention.time=15d",
                                            "--config.file=/etc/config/prometheus.yml",
                                            "--storage.tsdb.path=/data",
                                            "--web.console.libraries=/etc/prometheus/console_libraries",
                                            "--web.console.templates=/etc/prometheus/consoles",
                                            "--web.enable-lifecycle"
                                        ],
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {},
                                        "volumeMounts": [
                                            {
                                                "name": "config-volume",
                                                "mountPath": "/etc/config"
                                            },
                                            {
                                                "name": "storage-volume",
                                                "mountPath": "/data"
                                            },
                                            {
                                                "name": "kube-api-access-qm9zv",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/-/healthy",
                                                "port": 9090,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "timeoutSeconds": 10,
                                            "periodSeconds": 15,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/-/ready",
                                                "port": 9090,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "timeoutSeconds": 4,
                                            "periodSeconds": 5,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 300,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "prometheus-dz-prometheus-server",
                                "serviceAccount": "prometheus-dz-prometheus-server",
                                "nodeName": "ip-10-8-143-217.ec2.internal",
                                "securityContext": {
                                    "runAsUser": 65534,
                                    "runAsGroup": 65534,
                                    "runAsNonRoot": true,
                                    "fsGroup": 65534
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    }
                                ],
                                "priority": 0,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:34Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:33Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:22:08Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:22:08Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:33Z"
                                    }
                                ],
                                "hostIP": "10.8.143.217",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "podIP": "10.8.136.124",
                                "podIPs": [
                                    {
                                        "ip": "10.8.136.124"
                                    }
                                ],
                                "startTime": "2025-06-11T19:21:33Z",
                                "containerStatuses": [
                                    {
                                        "name": "dz-prometheus-server",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T19:21:34Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "quay.io/prometheus/prometheus:v3.4.1",
                                        "imageID": "quay.io/prometheus/prometheus@sha256:9abc6cf6aea7710d163dbb28d8eeb7dc5baef01e38fa4cd146a406dd9f07f70d",
                                        "containerID": "containerd://769012eac4912054933443b45b45343eca722e3ff6b61a84cc060a79fd4986f6",
                                        "started": true
                                    },
                                    {
                                        "name": "dz-prometheus-server-configmap-reload",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T19:21:33Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0",
                                        "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:78aec597d87aa2b4ba947ab9190538dae93a58a67b8e930aefea1086534b02ef",
                                        "containerID": "containerd://9972216f1ff2538758f7983c33bdba51c84cd470e5399847143e8f3d7380d8d1",
                                        "started": true
                                    }
                                ],
                                "qosClass": "BestEffort"
                            }
                        },
                        "devzero-zxporter/prometheus-kube-state-metrics-57554884b-mgs5b": {
                            "metadata": {
                                "name": "prometheus-kube-state-metrics-57554884b-mgs5b",
                                "generateName": "prometheus-kube-state-metrics-57554884b-",
                                "namespace": "devzero-zxporter",
                                "uid": "0d5fcb4d-3be1-49cb-9e5f-4bedd0468073",
                                "resourceVersion": "30311",
                                "creationTimestamp": "2025-06-11T19:21:32Z",
                                "labels": {
                                    "app.kubernetes.io/component": "metrics",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "kube-state-metrics",
                                    "app.kubernetes.io/part-of": "kube-state-metrics",
                                    "app.kubernetes.io/version": "2.15.0",
                                    "helm.sh/chart": "kube-state-metrics-5.33.2",
                                    "pod-template-hash": "57554884b"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "ReplicaSet",
                                        "name": "prometheus-kube-state-metrics-57554884b",
                                        "uid": "33984339-e1c9-4a92-8b2e-4b3c829ee2a2",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:32Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {},
                                                    "f:pod-template-hash": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"33984339-e1c9-4a92-8b2e-4b3c829ee2a2\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:automountServiceAccountToken": {},
                                                "f:containers": {
                                                    "k:{\"name\":\"kube-state-metrics\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:allowPrivilegeEscalation": {},
                                                            "f:capabilities": {
                                                                ".": {},
                                                                "f:drop": {}
                                                            },
                                                            "f:readOnlyRootFilesystem": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:fsGroup": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:42Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.137.201\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "kube-api-access-j78c8",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "kube-state-metrics",
                                        "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0",
                                        "args": [
                                            "--port=8080",
                                            "--resources=nodes"
                                        ],
                                        "ports": [
                                            {
                                                "name": "http",
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {},
                                        "volumeMounts": [
                                            {
                                                "name": "kube-api-access-j78c8",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/livez",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/readyz",
                                                "port": 8081,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "capabilities": {
                                                "drop": [
                                                    "ALL"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true,
                                            "allowPrivilegeEscalation": false
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "prometheus-kube-state-metrics",
                                "serviceAccount": "prometheus-kube-state-metrics",
                                "automountServiceAccountToken": true,
                                "nodeName": "ip-10-8-143-217.ec2.internal",
                                "securityContext": {
                                    "runAsUser": 65534,
                                    "runAsGroup": 65534,
                                    "runAsNonRoot": true,
                                    "fsGroup": 65534,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute",
                                        "tolerationSeconds": 300
                                    }
                                ],
                                "priority": 0,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:34Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:32Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:42Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:42Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T19:21:32Z"
                                    }
                                ],
                                "hostIP": "10.8.143.217",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "podIP": "10.8.137.201",
                                "podIPs": [
                                    {
                                        "ip": "10.8.137.201"
                                    }
                                ],
                                "startTime": "2025-06-11T19:21:32Z",
                                "containerStatuses": [
                                    {
                                        "name": "kube-state-metrics",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T19:21:33Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0",
                                        "imageID": "registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:db384bf43222b066c378e77027a675d4cd9911107adba46c2922b3a55e10d6fb",
                                        "containerID": "containerd://c1585c6ac7a65a5cbafca65fd83bfc3d830ea4c0e15eb795b6659ffe62f4373c",
                                        "started": true
                                    }
                                ],
                                "qosClass": "BestEffort"
                            }
                        },
                        "kube-system/aws-node-xkmpc": {
                            "metadata": {
                                "name": "aws-node-xkmpc",
                                "generateName": "aws-node-",
                                "namespace": "kube-system",
                                "uid": "c7db57ac-e048-4129-a4a0-b27ac8766191",
                                "resourceVersion": "1572",
                                "creationTimestamp": "2025-06-11T16:47:41Z",
                                "labels": {
                                    "app.kubernetes.io/instance": "aws-vpc-cni",
                                    "app.kubernetes.io/name": "aws-node",
                                    "controller-revision-hash": "6b64f5765",
                                    "k8s-app": "aws-node",
                                    "pod-template-generation": "1"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "DaemonSet",
                                        "name": "aws-node",
                                        "uid": "9b848bba-5997-48bc-92c7-e3bba4b6d9ba",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:41Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:controller-revision-hash": {},
                                                    "f:k8s-app": {},
                                                    "f:pod-template-generation": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"9b848bba-5997-48bc-92c7-e3bba4b6d9ba\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:affinity": {
                                                    ".": {},
                                                    "f:nodeAffinity": {
                                                        ".": {},
                                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                    }
                                                },
                                                "f:containers": {
                                                    "k:{\"name\":\"aws-eks-nodeagent\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:capabilities": {
                                                                ".": {},
                                                                "f:add": {}
                                                            },
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log/aws-routed-eni\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    },
                                                    "k:{\"name\":\"aws-node\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"ADDITIONAL_ENI_TAGS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ANNOTATE_POD_IP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_ENI_MTU\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"DISABLE_INTROSPECTION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"DISABLE_METRICS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"DISABLE_NETWORK_RESOURCE_PROVISIONING\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_IPv4\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_POD_ENI\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_PREFIX_DELEGATION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_SUBNET_DISCOVERY\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MY_POD_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"NETWORK_POLICY_ENFORCING_MODE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"VPC_CNI_VERSION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"VPC_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"WARM_ENI_TARGET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"WARM_PREFIX_TARGET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:exec": {
                                                                ".": {},
                                                                "f:command": {}
                                                            },
                                                            "f:failureThreshold": {},
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":61678,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:hostPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:exec": {
                                                                ".": {},
                                                                "f:command": {}
                                                            },
                                                            "f:failureThreshold": {},
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:capabilities": {
                                                                ".": {},
                                                                "f:add": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/host/var/log/aws-routed-eni\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:hostNetwork": {},
                                                "f:initContainers": {
                                                    ".": {},
                                                    "k:{\"name\":\"aws-vpc-cni-init\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"DISABLE_TCP_EARLY_DEMUX\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:priorityClassName": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"bpf-pin-path\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"cni-bin-dir\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"cni-net-dir\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"log-dir\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"run-dir\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"xtables-lock\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:48:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:initContainerStatuses": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.143.217\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "bpf-pin-path",
                                        "hostPath": {
                                            "path": "/sys/fs/bpf",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "cni-bin-dir",
                                        "hostPath": {
                                            "path": "/opt/cni/bin",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "cni-net-dir",
                                        "hostPath": {
                                            "path": "/etc/cni/net.d",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "log-dir",
                                        "hostPath": {
                                            "path": "/var/log/aws-routed-eni",
                                            "type": "DirectoryOrCreate"
                                        }
                                    },
                                    {
                                        "name": "run-dir",
                                        "hostPath": {
                                            "path": "/var/run/aws-node",
                                            "type": "DirectoryOrCreate"
                                        }
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "hostPath": {
                                            "path": "/run/xtables.lock",
                                            "type": "FileOrCreate"
                                        }
                                    },
                                    {
                                        "name": "kube-api-access-h52cz",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "name": "aws-vpc-cni-init",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1",
                                        "env": [
                                            {
                                                "name": "DISABLE_TCP_EARLY_DEMUX",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_IPv6",
                                                "value": "false"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "25m"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "cni-bin-dir",
                                                "mountPath": "/host/opt/cni/bin"
                                            },
                                            {
                                                "name": "kube-api-access-h52cz",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "Always",
                                        "securityContext": {
                                            "privileged": true
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "aws-node",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1",
                                        "ports": [
                                            {
                                                "name": "metrics",
                                                "hostPort": 61678,
                                                "containerPort": 61678,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "ADDITIONAL_ENI_TAGS",
                                                "value": "{}"
                                            },
                                            {
                                                "name": "ANNOTATE_POD_IP",
                                                "value": "false"
                                            },
                                            {
                                                "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                                "value": "true"
                                            },
                                            {
                                                "name": "AWS_VPC_ENI_MTU",
                                                "value": "9001"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                                "value": "false"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                                "value": "false"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                                "value": "DEBUG"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                                "value": "/host/var/log/aws-routed-eni/ipamd.log"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                                "value": "prng"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                                "value": "eni"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                                "value": "/var/log/aws-routed-eni/plugin.log"
                                            },
                                            {
                                                "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                                "value": "DEBUG"
                                            },
                                            {
                                                "name": "CLUSTER_NAME",
                                                "value": "upprom-test-ph"
                                            },
                                            {
                                                "name": "DISABLE_INTROSPECTION",
                                                "value": "false"
                                            },
                                            {
                                                "name": "DISABLE_METRICS",
                                                "value": "false"
                                            },
                                            {
                                                "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_IPv4",
                                                "value": "true"
                                            },
                                            {
                                                "name": "ENABLE_IPv6",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_POD_ENI",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_PREFIX_DELEGATION",
                                                "value": "false"
                                            },
                                            {
                                                "name": "ENABLE_SUBNET_DISCOVERY",
                                                "value": "true"
                                            },
                                            {
                                                "name": "NETWORK_POLICY_ENFORCING_MODE",
                                                "value": "standard"
                                            },
                                            {
                                                "name": "VPC_CNI_VERSION",
                                                "value": "v1.19.0"
                                            },
                                            {
                                                "name": "VPC_ID",
                                                "value": "vpc-010b580eeadcc56b5"
                                            },
                                            {
                                                "name": "WARM_ENI_TARGET",
                                                "value": "1"
                                            },
                                            {
                                                "name": "WARM_PREFIX_TARGET",
                                                "value": "1"
                                            },
                                            {
                                                "name": "MY_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MY_POD_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "25m"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "cni-bin-dir",
                                                "mountPath": "/host/opt/cni/bin"
                                            },
                                            {
                                                "name": "cni-net-dir",
                                                "mountPath": "/host/etc/cni/net.d"
                                            },
                                            {
                                                "name": "log-dir",
                                                "mountPath": "/host/var/log/aws-routed-eni"
                                            },
                                            {
                                                "name": "run-dir",
                                                "mountPath": "/var/run/aws-node"
                                            },
                                            {
                                                "name": "xtables-lock",
                                                "mountPath": "/run/xtables.lock"
                                            },
                                            {
                                                "name": "kube-api-access-h52cz",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    "/app/grpc-health-probe",
                                                    "-addr=:50051",
                                                    "-connect-timeout=5s",
                                                    "-rpc-timeout=5s"
                                                ]
                                            },
                                            "initialDelaySeconds": 60,
                                            "timeoutSeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    "/app/grpc-health-probe",
                                                    "-addr=:50051",
                                                    "-connect-timeout=5s",
                                                    "-rpc-timeout=5s"
                                                ]
                                            },
                                            "initialDelaySeconds": 1,
                                            "timeoutSeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "name": "aws-eks-nodeagent",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1",
                                        "args": [
                                            "--enable-ipv6=false",
                                            "--enable-network-policy=false",
                                            "--enable-cloudwatch-logs=false",
                                            "--enable-policy-event-logs=false",
                                            "--log-file=/var/log/aws-routed-eni/network-policy-agent.log",
                                            "--metrics-bind-addr=:8162",
                                            "--health-probe-bind-addr=:8163",
                                            "--conntrack-cache-cleanup-period=300"
                                        ],
                                        "env": [
                                            {
                                                "name": "MY_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "25m"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "cni-bin-dir",
                                                "mountPath": "/host/opt/cni/bin"
                                            },
                                            {
                                                "name": "bpf-pin-path",
                                                "mountPath": "/sys/fs/bpf"
                                            },
                                            {
                                                "name": "log-dir",
                                                "mountPath": "/var/log/aws-routed-eni"
                                            },
                                            {
                                                "name": "run-dir",
                                                "mountPath": "/var/run/aws-node"
                                            },
                                            {
                                                "name": "kube-api-access-h52cz",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "Always",
                                        "securityContext": {
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN"
                                                ]
                                            },
                                            "privileged": true
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 10,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "aws-node",
                                "serviceAccount": "aws-node",
                                "nodeName": "ip-10-8-143-217.ec2.internal",
                                "hostNetwork": true,
                                "securityContext": {},
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchFields": [
                                                        {
                                                            "key": "metadata.name",
                                                            "operator": "In",
                                                            "values": [
                                                                "ip-10-8-143-217.ec2.internal"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "operator": "Exists"
                                    },
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/disk-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/memory-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/pid-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unschedulable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/network-unavailable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    }
                                ],
                                "priorityClassName": "system-node-critical",
                                "priority": 2000001000,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:57Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:57Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:01Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:48:01Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:42Z"
                                    }
                                ],
                                "hostIP": "10.8.143.217",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "podIP": "10.8.143.217",
                                "podIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "startTime": "2025-06-11T16:47:42Z",
                                "initContainerStatuses": [
                                    {
                                        "name": "aws-vpc-cni-init",
                                        "state": {
                                            "terminated": {
                                                "exitCode": 0,
                                                "reason": "Completed",
                                                "startedAt": "2025-06-11T16:47:57Z",
                                                "finishedAt": "2025-06-11T16:47:57Z",
                                                "containerID": "containerd://647155c36b5537335a875b8a9809ac9c3fa9a3fb6cdc85d5896a7f2540c62269"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:ce36e6fc8457a3c79eab29ad7ca86ebc9220056c443e15502eeab7ceeef8496f",
                                        "containerID": "containerd://647155c36b5537335a875b8a9809ac9c3fa9a3fb6cdc85d5896a7f2540c62269",
                                        "started": false
                                    }
                                ],
                                "containerStatuses": [
                                    {
                                        "name": "aws-eks-nodeagent",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T16:48:01Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent@sha256:f3280f090b6c5d3128357d8710db237931f5e1089e8017ab3d9cece429d77954",
                                        "containerID": "containerd://ce1a7334d1d20a932bec2a7727b4a5dbc789fe4ece8ebaa110ad124395e3f37e",
                                        "started": true
                                    },
                                    {
                                        "name": "aws-node",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T16:47:59Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:efada7e5222a3376dc170b43b569f4dea762fd58186467c233b512bd6ab5415b",
                                        "containerID": "containerd://688c1676403c8555d87f593b5122186af9a1fcbc089af03a1ba2bd96e96fdb34",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        },
                        "kube-system/kube-proxy-wnzgh": {
                            "metadata": {
                                "name": "kube-proxy-wnzgh",
                                "generateName": "kube-proxy-",
                                "namespace": "kube-system",
                                "uid": "356c0450-cf11-44cd-bcd6-28599040ed4b",
                                "resourceVersion": "1515",
                                "creationTimestamp": "2025-06-11T16:47:41Z",
                                "labels": {
                                    "controller-revision-hash": "65f976f6bf",
                                    "k8s-app": "kube-proxy",
                                    "pod-template-generation": "1"
                                },
                                "ownerReferences": [
                                    {
                                        "apiVersion": "apps/v1",
                                        "kind": "DaemonSet",
                                        "name": "kube-proxy",
                                        "uid": "e7a66e5c-c6ef-4024-8389-9861d4365da9",
                                        "controller": true,
                                        "blockOwnerDeletion": true
                                    }
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:41Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:generateName": {},
                                                "f:labels": {
                                                    ".": {},
                                                    "f:controller-revision-hash": {},
                                                    "f:k8s-app": {},
                                                    "f:pod-template-generation": {}
                                                },
                                                "f:ownerReferences": {
                                                    ".": {},
                                                    "k:{\"uid\":\"e7a66e5c-c6ef-4024-8389-9861d4365da9\"}": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:affinity": {
                                                    ".": {},
                                                    "f:nodeAffinity": {
                                                        ".": {},
                                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                    }
                                                },
                                                "f:containers": {
                                                    "k:{\"name\":\"kube-proxy\"}": {
                                                        ".": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/lib/modules\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/kube-proxy-config/\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/kube-proxy/\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:enableServiceLinks": {},
                                                "f:hostNetwork": {},
                                                "f:priorityClassName": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"config\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"kubeconfig\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"lib-modules\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlog\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"xtables-lock\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubelet",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:56Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    "k:{\"type\":\"ContainersReady\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Initialized\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    },
                                                    "k:{\"type\":\"Ready\"}": {
                                                        ".": {},
                                                        "f:lastProbeTime": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:containerStatuses": {},
                                                "f:hostIP": {},
                                                "f:hostIPs": {},
                                                "f:phase": {},
                                                "f:podIP": {},
                                                "f:podIPs": {
                                                    ".": {},
                                                    "k:{\"ip\":\"10.8.143.217\"}": {
                                                        ".": {},
                                                        "f:ip": {}
                                                    }
                                                },
                                                "f:startTime": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "varlog",
                                        "hostPath": {
                                            "path": "/var/log",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "hostPath": {
                                            "path": "/run/xtables.lock",
                                            "type": "FileOrCreate"
                                        }
                                    },
                                    {
                                        "name": "lib-modules",
                                        "hostPath": {
                                            "path": "/lib/modules",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "kubeconfig",
                                        "configMap": {
                                            "name": "kube-proxy",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "config",
                                        "configMap": {
                                            "name": "kube-proxy-config",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "kube-api-access-nd25v",
                                        "projected": {
                                            "sources": [
                                                {
                                                    "serviceAccountToken": {
                                                        "expirationSeconds": 3607,
                                                        "path": "token"
                                                    }
                                                },
                                                {
                                                    "configMap": {
                                                        "name": "kube-root-ca.crt",
                                                        "items": [
                                                            {
                                                                "key": "ca.crt",
                                                                "path": "ca.crt"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "path": "namespace",
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.namespace"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "kube-proxy",
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3",
                                        "command": [
                                            "kube-proxy",
                                            "--v=2",
                                            "--config=/var/lib/kube-proxy-config/config",
                                            "--hostname-override=$(NODE_NAME)"
                                        ],
                                        "env": [
                                            {
                                                "name": "NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "varlog",
                                                "mountPath": "/var/log"
                                            },
                                            {
                                                "name": "xtables-lock",
                                                "mountPath": "/run/xtables.lock"
                                            },
                                            {
                                                "name": "lib-modules",
                                                "readOnly": true,
                                                "mountPath": "/lib/modules"
                                            },
                                            {
                                                "name": "kubeconfig",
                                                "mountPath": "/var/lib/kube-proxy/"
                                            },
                                            {
                                                "name": "config",
                                                "mountPath": "/var/lib/kube-proxy-config/"
                                            },
                                            {
                                                "name": "kube-api-access-nd25v",
                                                "readOnly": true,
                                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "privileged": true
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "kube-proxy",
                                "serviceAccount": "kube-proxy",
                                "nodeName": "ip-10-8-143-217.ec2.internal",
                                "hostNetwork": true,
                                "securityContext": {},
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchFields": [
                                                        {
                                                            "key": "metadata.name",
                                                            "operator": "In",
                                                            "values": [
                                                                "ip-10-8-143-217.ec2.internal"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "operator": "Exists"
                                    },
                                    {
                                        "key": "node.kubernetes.io/not-ready",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unreachable",
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "key": "node.kubernetes.io/disk-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/memory-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/pid-pressure",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/unschedulable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    },
                                    {
                                        "key": "node.kubernetes.io/network-unavailable",
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    }
                                ],
                                "priorityClassName": "system-node-critical",
                                "priority": 2000001000,
                                "enableServiceLinks": true,
                                "preemptionPolicy": "PreemptLowerPriority"
                            },
                            "status": {
                                "phase": "Running",
                                "conditions": [
                                    {
                                        "type": "PodReadyToStartContainers",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:56Z"
                                    },
                                    {
                                        "type": "Initialized",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:42Z"
                                    },
                                    {
                                        "type": "Ready",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:56Z"
                                    },
                                    {
                                        "type": "ContainersReady",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:56Z"
                                    },
                                    {
                                        "type": "PodScheduled",
                                        "status": "True",
                                        "lastProbeTime": null,
                                        "lastTransitionTime": "2025-06-11T16:47:42Z"
                                    }
                                ],
                                "hostIP": "10.8.143.217",
                                "hostIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "podIP": "10.8.143.217",
                                "podIPs": [
                                    {
                                        "ip": "10.8.143.217"
                                    }
                                ],
                                "startTime": "2025-06-11T16:47:42Z",
                                "containerStatuses": [
                                    {
                                        "name": "kube-proxy",
                                        "state": {
                                            "running": {
                                                "startedAt": "2025-06-11T16:47:56Z"
                                            }
                                        },
                                        "lastState": {},
                                        "ready": true,
                                        "restartCount": 0,
                                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3",
                                        "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:5ed7b40f2b07b992318718d8264324747ecc24b4ea8fab26095b8e569980eff6",
                                        "containerID": "containerd://265ebd3cbd71186766df6b5356ad08075ec319280eb5218d11a6275480d05ac1",
                                        "started": true
                                    }
                                ],
                                "qosClass": "Burstable"
                            }
                        }
                    },
                    "hash": "8926268bfe4365cf4f56f975a2f5a9d1048464b94f518f64a8eb07fe6189e923"
                }
            },
            "namespaces": {
                "default": {
                    "namespace": {
                        "metadata": {
                            "name": "default",
                            "uid": "3e4ee7d7-18c5-4f1f-85a8-f700488febdd",
                            "resourceVersion": "36",
                            "creationTimestamp": "2025-06-11T16:40:59Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "default"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:40:59Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/metadata.name": {}
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "deployments": {
                        "nginx-deployment": {
                            "deployment": {
                                "metadata": {
                                    "name": "nginx-deployment",
                                    "namespace": "default",
                                    "uid": "9197dea7-3cb5-4aab-9b5c-6ed52bea1abf",
                                    "resourceVersion": "262118",
                                    "generation": 2,
                                    "creationTimestamp": "2025-06-12T15:10:31Z",
                                    "labels": {
                                        "app": "nginx"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "2",
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"nginx\"},\"name\":\"nginx-deployment\",\"namespace\":\"default\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"nginx\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"nginx\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.25\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"4000Mi\"},\"requests\":{\"cpu\":1,\"memory\":\"2000Mi\"}}}]}}}}\n"
                                    },
                                    "managedFields": [
                                        {
                                            "manager": "kubectl-client-side-apply",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T15:12:20Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:progressDeadlineSeconds": {},
                                                    "f:replicas": {},
                                                    "f:revisionHistoryLimit": {},
                                                    "f:selector": {},
                                                    "f:strategy": {
                                                        "f:rollingUpdate": {
                                                            ".": {},
                                                            "f:maxSurge": {},
                                                            "f:maxUnavailable": {}
                                                        },
                                                        "f:type": {}
                                                    },
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"nginx\"}": {
                                                                    ".": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:limits": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        },
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {}
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {},
                                                            "f:terminationGracePeriodSeconds": {}
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T15:12:29Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    }
                                                },
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:conditions": {
                                                        ".": {},
                                                        "k:{\"type\":\"Available\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        },
                                                        "k:{\"type\":\"Progressing\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        }
                                                    },
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {},
                                                    "f:updatedReplicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 2,
                                    "selector": {
                                        "matchLabels": {
                                            "app": "nginx"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app": "nginx"
                                            }
                                        },
                                        "spec": {
                                            "containers": [
                                                {
                                                    "name": "nginx",
                                                    "image": "nginx:1.25",
                                                    "ports": [
                                                        {
                                                            "containerPort": 80,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {
                                                        "limits": {
                                                            "cpu": "1",
                                                            "memory": "4000Mi"
                                                        },
                                                        "requests": {
                                                            "cpu": "1",
                                                            "memory": "2000Mi"
                                                        }
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent"
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "ClusterFirst",
                                            "securityContext": {},
                                            "schedulerName": "default-scheduler"
                                        }
                                    },
                                    "strategy": {
                                        "type": "RollingUpdate",
                                        "rollingUpdate": {
                                            "maxUnavailable": "25%",
                                            "maxSurge": "25%"
                                        }
                                    },
                                    "revisionHistoryLimit": 10,
                                    "progressDeadlineSeconds": 600
                                },
                                "status": {
                                    "observedGeneration": 2,
                                    "replicas": 2,
                                    "updatedReplicas": 2,
                                    "readyReplicas": 2,
                                    "availableReplicas": 2,
                                    "conditions": [
                                        {
                                            "type": "Available",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-12T15:12:28Z",
                                            "lastTransitionTime": "2025-06-12T15:12:28Z",
                                            "reason": "MinimumReplicasAvailable",
                                            "message": "Deployment has minimum availability."
                                        },
                                        {
                                            "type": "Progressing",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-12T15:12:29Z",
                                            "lastTransitionTime": "2025-06-12T15:10:31Z",
                                            "reason": "NewReplicaSetAvailable",
                                            "message": "ReplicaSet \"nginx-deployment-6c9b4ccd66\" has successfully progressed."
                                        }
                                    ]
                                }
                            },
                            "pods": {
                                "default/nginx-deployment-6c9b4ccd66-cpmfp": {
                                    "metadata": {
                                        "name": "nginx-deployment-6c9b4ccd66-cpmfp",
                                        "generateName": "nginx-deployment-6c9b4ccd66-",
                                        "namespace": "default",
                                        "uid": "d16d4300-c586-4f2d-aa73-5f137999f538",
                                        "resourceVersion": "262104",
                                        "creationTimestamp": "2025-06-12T15:12:25Z",
                                        "labels": {
                                            "app": "nginx",
                                            "pod-template-hash": "6c9b4ccd66"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "nginx-deployment-6c9b4ccd66",
                                                "uid": "62abfca4-bd72-4945-8cc2-b11909322e1a",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T15:12:25Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"62abfca4-bd72-4945-8cc2-b11909322e1a\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"nginx\"}": {
                                                                ".": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:limits": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    },
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {}
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:terminationGracePeriodSeconds": {}
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T15:12:28Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.98.217\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "kube-api-access-82msp",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "nginx",
                                                "image": "nginx:1.25",
                                                "ports": [
                                                    {
                                                        "containerPort": 80,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "limits": {
                                                        "cpu": "1",
                                                        "memory": "4000Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "1",
                                                        "memory": "2000Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "kube-api-access-82msp",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent"
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "default",
                                        "serviceAccount": "default",
                                        "nodeName": "ip-10-8-110-61.ec2.internal",
                                        "securityContext": {},
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:28Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:28Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:28Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            }
                                        ],
                                        "hostIP": "10.8.110.61",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "podIP": "10.8.98.217",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.98.217"
                                            }
                                        ],
                                        "startTime": "2025-06-12T15:12:25Z",
                                        "containerStatuses": [
                                            {
                                                "name": "nginx",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-12T15:12:28Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "docker.io/library/nginx:1.25",
                                                "imageID": "docker.io/library/nginx@sha256:a484819eb60211f5299034ac80f6a681b06f89e65866ce91f356ed7c72af059c",
                                                "containerID": "containerd://da20e45b640a1fa3cac0472590dba664c8736a4de7b6e33e9a6aad3de963eab4",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                },
                                "default/nginx-deployment-6c9b4ccd66-wkp5c": {
                                    "metadata": {
                                        "name": "nginx-deployment-6c9b4ccd66-wkp5c",
                                        "generateName": "nginx-deployment-6c9b4ccd66-",
                                        "namespace": "default",
                                        "uid": "6dd48da0-51d3-4829-9403-90fe2583df7e",
                                        "resourceVersion": "262063",
                                        "creationTimestamp": "2025-06-12T15:12:20Z",
                                        "labels": {
                                            "app": "nginx",
                                            "pod-template-hash": "6c9b4ccd66"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "nginx-deployment-6c9b4ccd66",
                                                "uid": "62abfca4-bd72-4945-8cc2-b11909322e1a",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T15:12:20Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"62abfca4-bd72-4945-8cc2-b11909322e1a\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"nginx\"}": {
                                                                ".": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:limits": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    },
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {}
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:terminationGracePeriodSeconds": {}
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T15:12:25Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.131.174\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "kube-api-access-mdvh9",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "nginx",
                                                "image": "nginx:1.25",
                                                "ports": [
                                                    {
                                                        "containerPort": 80,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "limits": {
                                                        "cpu": "1",
                                                        "memory": "4000Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "1",
                                                        "memory": "2000Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "kube-api-access-mdvh9",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent"
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "default",
                                        "serviceAccount": "default",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {},
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:20Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:20Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.131.174",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.131.174"
                                            }
                                        ],
                                        "startTime": "2025-06-12T15:12:20Z",
                                        "containerStatuses": [
                                            {
                                                "name": "nginx",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-12T15:12:24Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "docker.io/library/nginx:1.25",
                                                "imageID": "docker.io/library/nginx@sha256:a484819eb60211f5299034ac80f6a681b06f89e65866ce91f356ed7c72af059c",
                                                "containerID": "containerd://163cab7b12bfb25103ef0e12a0266a610fbfa900c6f8698a03d1a3c84fa94318",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "ac547e28be07b90e774e283413e3a978202992c9a2d9dd7cccc4e6f739ddb684"
                        }
                    },
                    "statefulSets": {},
                    "daemonSets": {},
                    "replicaSets": {
                        "nginx-deployment-6c9b4ccd66": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "nginx-deployment-6c9b4ccd66",
                                    "namespace": "default",
                                    "uid": "62abfca4-bd72-4945-8cc2-b11909322e1a",
                                    "resourceVersion": "262107",
                                    "generation": 2,
                                    "creationTimestamp": "2025-06-12T15:12:20Z",
                                    "labels": {
                                        "app": "nginx",
                                        "pod-template-hash": "6c9b4ccd66"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "2",
                                        "deployment.kubernetes.io/max-replicas": "3",
                                        "deployment.kubernetes.io/revision": "2"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "nginx-deployment",
                                            "uid": "9197dea7-3cb5-4aab-9b5c-6ed52bea1abf",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T15:12:25Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"9197dea7-3cb5-4aab-9b5c-6ed52bea1abf\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"nginx\"}": {
                                                                    ".": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:limits": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        },
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {}
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {},
                                                            "f:terminationGracePeriodSeconds": {}
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T15:12:28Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:fullyLabeledReplicas": {},
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 2,
                                    "selector": {
                                        "matchLabels": {
                                            "app": "nginx",
                                            "pod-template-hash": "6c9b4ccd66"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app": "nginx",
                                                "pod-template-hash": "6c9b4ccd66"
                                            }
                                        },
                                        "spec": {
                                            "containers": [
                                                {
                                                    "name": "nginx",
                                                    "image": "nginx:1.25",
                                                    "ports": [
                                                        {
                                                            "containerPort": 80,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {
                                                        "limits": {
                                                            "cpu": "1",
                                                            "memory": "4000Mi"
                                                        },
                                                        "requests": {
                                                            "cpu": "1",
                                                            "memory": "2000Mi"
                                                        }
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent"
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "ClusterFirst",
                                            "securityContext": {},
                                            "schedulerName": "default-scheduler"
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 2,
                                    "fullyLabeledReplicas": 2,
                                    "readyReplicas": 2,
                                    "availableReplicas": 2,
                                    "observedGeneration": 2
                                }
                            },
                            "pods": {
                                "default/nginx-deployment-6c9b4ccd66-cpmfp": {
                                    "metadata": {
                                        "name": "nginx-deployment-6c9b4ccd66-cpmfp",
                                        "generateName": "nginx-deployment-6c9b4ccd66-",
                                        "namespace": "default",
                                        "uid": "d16d4300-c586-4f2d-aa73-5f137999f538",
                                        "resourceVersion": "262104",
                                        "creationTimestamp": "2025-06-12T15:12:25Z",
                                        "labels": {
                                            "app": "nginx",
                                            "pod-template-hash": "6c9b4ccd66"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "nginx-deployment-6c9b4ccd66",
                                                "uid": "62abfca4-bd72-4945-8cc2-b11909322e1a",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T15:12:25Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"62abfca4-bd72-4945-8cc2-b11909322e1a\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"nginx\"}": {
                                                                ".": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:limits": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    },
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {}
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:terminationGracePeriodSeconds": {}
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T15:12:28Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.98.217\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "kube-api-access-82msp",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "nginx",
                                                "image": "nginx:1.25",
                                                "ports": [
                                                    {
                                                        "containerPort": 80,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "limits": {
                                                        "cpu": "1",
                                                        "memory": "4000Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "1",
                                                        "memory": "2000Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "kube-api-access-82msp",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent"
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "default",
                                        "serviceAccount": "default",
                                        "nodeName": "ip-10-8-110-61.ec2.internal",
                                        "securityContext": {},
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:28Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:28Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:28Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            }
                                        ],
                                        "hostIP": "10.8.110.61",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "podIP": "10.8.98.217",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.98.217"
                                            }
                                        ],
                                        "startTime": "2025-06-12T15:12:25Z",
                                        "containerStatuses": [
                                            {
                                                "name": "nginx",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-12T15:12:28Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "docker.io/library/nginx:1.25",
                                                "imageID": "docker.io/library/nginx@sha256:a484819eb60211f5299034ac80f6a681b06f89e65866ce91f356ed7c72af059c",
                                                "containerID": "containerd://da20e45b640a1fa3cac0472590dba664c8736a4de7b6e33e9a6aad3de963eab4",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                },
                                "default/nginx-deployment-6c9b4ccd66-wkp5c": {
                                    "metadata": {
                                        "name": "nginx-deployment-6c9b4ccd66-wkp5c",
                                        "generateName": "nginx-deployment-6c9b4ccd66-",
                                        "namespace": "default",
                                        "uid": "6dd48da0-51d3-4829-9403-90fe2583df7e",
                                        "resourceVersion": "262063",
                                        "creationTimestamp": "2025-06-12T15:12:20Z",
                                        "labels": {
                                            "app": "nginx",
                                            "pod-template-hash": "6c9b4ccd66"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "nginx-deployment-6c9b4ccd66",
                                                "uid": "62abfca4-bd72-4945-8cc2-b11909322e1a",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T15:12:20Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"62abfca4-bd72-4945-8cc2-b11909322e1a\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"nginx\"}": {
                                                                ".": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:limits": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    },
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {}
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:terminationGracePeriodSeconds": {}
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T15:12:25Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.131.174\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "kube-api-access-mdvh9",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "nginx",
                                                "image": "nginx:1.25",
                                                "ports": [
                                                    {
                                                        "containerPort": 80,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "limits": {
                                                        "cpu": "1",
                                                        "memory": "4000Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "1",
                                                        "memory": "2000Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "kube-api-access-mdvh9",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent"
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "default",
                                        "serviceAccount": "default",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {},
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:20Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:25Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T15:12:20Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.131.174",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.131.174"
                                            }
                                        ],
                                        "startTime": "2025-06-12T15:12:20Z",
                                        "containerStatuses": [
                                            {
                                                "name": "nginx",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-12T15:12:24Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "docker.io/library/nginx:1.25",
                                                "imageID": "docker.io/library/nginx@sha256:a484819eb60211f5299034ac80f6a681b06f89e65866ce91f356ed7c72af059c",
                                                "containerID": "containerd://163cab7b12bfb25103ef0e12a0266a610fbfa900c6f8698a03d1a3c84fa94318",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "b7b889b0a04069290124ec164287d8e6adb670a0847406097f585fb4ab57feb2"
                        },
                        "nginx-deployment-7b77d7b6b4": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "nginx-deployment-7b77d7b6b4",
                                    "namespace": "default",
                                    "uid": "e653547c-5c5a-4e8d-a759-3cc081e6631e",
                                    "resourceVersion": "262117",
                                    "generation": 3,
                                    "creationTimestamp": "2025-06-12T15:10:31Z",
                                    "labels": {
                                        "app": "nginx",
                                        "pod-template-hash": "7b77d7b6b4"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "2",
                                        "deployment.kubernetes.io/max-replicas": "3",
                                        "deployment.kubernetes.io/revision": "1"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "nginx-deployment",
                                            "uid": "9197dea7-3cb5-4aab-9b5c-6ed52bea1abf",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T15:12:28Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"9197dea7-3cb5-4aab-9b5c-6ed52bea1abf\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"nginx\"}": {
                                                                    ".": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:limits": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        },
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {}
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {},
                                                            "f:terminationGracePeriodSeconds": {}
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T15:12:29Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:observedGeneration": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 0,
                                    "selector": {
                                        "matchLabels": {
                                            "app": "nginx",
                                            "pod-template-hash": "7b77d7b6b4"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app": "nginx",
                                                "pod-template-hash": "7b77d7b6b4"
                                            }
                                        },
                                        "spec": {
                                            "containers": [
                                                {
                                                    "name": "nginx",
                                                    "image": "nginx:1.25",
                                                    "ports": [
                                                        {
                                                            "containerPort": 80,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {
                                                        "limits": {
                                                            "cpu": "3",
                                                            "memory": "8000Mi"
                                                        },
                                                        "requests": {
                                                            "cpu": "2",
                                                            "memory": "2000Mi"
                                                        }
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent"
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "ClusterFirst",
                                            "securityContext": {},
                                            "schedulerName": "default-scheduler"
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 0,
                                    "observedGeneration": 3
                                }
                            },
                            "pods": {},
                            "hash": "778b74a905af354dc856d409ab2bfc435676251855db463dd89a770345673e25"
                        }
                    },
                    "services": {
                        "kubernetes": {
                            "metadata": {
                                "name": "kubernetes",
                                "namespace": "default",
                                "uid": "b9b555ac-683a-40cb-a0b1-5840d376bed1",
                                "resourceVersion": "194",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "component": "apiserver",
                                    "provider": "kubernetes"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:component": {},
                                                    "f:provider": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:clusterIP": {},
                                                "f:internalTrafficPolicy": {},
                                                "f:ipFamilyPolicy": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {},
                                                        "f:targetPort": {}
                                                    }
                                                },
                                                "f:sessionAffinity": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "name": "https",
                                        "protocol": "TCP",
                                        "port": 443,
                                        "targetPort": 443
                                    }
                                ],
                                "clusterIP": "172.20.0.1",
                                "clusterIPs": [
                                    "172.20.0.1"
                                ],
                                "type": "ClusterIP",
                                "sessionAffinity": "None",
                                "ipFamilies": [
                                    "IPv4"
                                ],
                                "ipFamilyPolicy": "SingleStack",
                                "internalTrafficPolicy": "Cluster"
                            },
                            "status": {
                                "loadBalancer": {}
                            }
                        },
                        "nginx-service": {
                            "metadata": {
                                "name": "nginx-service",
                                "namespace": "default",
                                "uid": "6bf10f64-241d-40cf-a8ee-893228e09f69",
                                "resourceVersion": "261688",
                                "creationTimestamp": "2025-06-12T15:10:32Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-service\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"nginx\"},\"type\":\"LoadBalancer\"}}\n"
                                },
                                "finalizers": [
                                    "service.kubernetes.io/load-balancer-cleanup"
                                ],
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T15:10:32Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:allocateLoadBalancerNodePorts": {},
                                                "f:externalTrafficPolicy": {},
                                                "f:internalTrafficPolicy": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:port": {},
                                                        "f:protocol": {},
                                                        "f:targetPort": {}
                                                    }
                                                },
                                                "f:selector": {},
                                                "f:sessionAffinity": {},
                                                "f:type": {}
                                            }
                                        }
                                    },
                                    {
                                        "manager": "aws-cloud-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T15:10:35Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:finalizers": {
                                                    ".": {},
                                                    "v:\"service.kubernetes.io/load-balancer-cleanup\"": {}
                                                }
                                            },
                                            "f:status": {
                                                "f:loadBalancer": {
                                                    "f:ingress": {}
                                                }
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "protocol": "TCP",
                                        "port": 80,
                                        "targetPort": 80,
                                        "nodePort": 30451
                                    }
                                ],
                                "selector": {
                                    "app": "nginx"
                                },
                                "clusterIP": "172.20.64.71",
                                "clusterIPs": [
                                    "172.20.64.71"
                                ],
                                "type": "LoadBalancer",
                                "sessionAffinity": "None",
                                "externalTrafficPolicy": "Cluster",
                                "ipFamilies": [
                                    "IPv4"
                                ],
                                "ipFamilyPolicy": "SingleStack",
                                "allocateLoadBalancerNodePorts": true,
                                "internalTrafficPolicy": "Cluster"
                            },
                            "status": {
                                "loadBalancer": {
                                    "ingress": [
                                        {
                                            "hostname": "a6bf10f64241d40cfa8ee893228e09f6-1462400175.us-east-1.elb.amazonaws.com"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "configMaps": {
                        "kube-root-ca.crt": {
                            "metadata": {
                                "name": "kube-root-ca.crt",
                                "namespace": "default",
                                "uid": "aab48464-8734-4836-b727-4dd047c0a7b7",
                                "resourceVersion": "357",
                                "creationTimestamp": "2025-06-11T16:41:10Z",
                                "annotations": {
                                    "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:41:10Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:ca.crt": {}
                                            },
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubernetes.io/description": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIO+OU4Xabrp4wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA2MTExNjM1MzVaFw0zNTA2MDkxNjQwMzVaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDI7+77junoAgnZ0h49l//VPDVaFfNtSYh/4KwoXHVB1+riws7WEEASUQyp\nSf0zct9pgnYnPjyjxyeied/9nNHGTHmgDnO8bE17P9feNcpegUnmL7t9zsEKKa8s\n7Ln894Fqc//ZWhK3tBWdiXIUWuie9hQBb6xqNsNR4LxoUTUX51o9Rzrcj+Ob3jQ5\n5aaYw3i5vz6OV32dHvkP6VNPqyZBgb7EB/uVuodUTneb/dr58bSz/SP7E62tr8Rt\ncdSMnfjhX6JnbWtxjMNADm4ZI/IPjKbu/jlQBUpQqtzWcAwMgUrKgpzCTf+wAPWt\nAGE0fFt2v1YV6YESAZTw5XoxTD2TAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS829Z4biI4waliQiX2gPgUuzxZcjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBwIm3/EBtC\nmhZK+lHoBJCVr3rwWbwAk5q4Z2U47xmWLQuI9rCjOxfWbsX8pFFeTHBFp8AeOE95\nwAtWffbhs/qRZ1NwSfnOw19ybkLJL6c9jvqnoyiP6T7sCQF/cvCvaETyQhpsR9bP\nq2Ts9mlDWVOClMN/7YwQVWqNxc060aNnpXIkFf916N3GnlPRsodNIEpvk5cEhJrT\nEZMRPF4g6HGZcquMfWuXm6Dwwjf1wO7rwhdJmJQXXi5vEoVvYFEIfqCmnyzvdcCR\nP5x6zC5OIjSajIYLBI9DNP9e4uALamg5kRlaksDUEQt29WuaoJsS4J4/MucyE30M\n+OORV1wrz1HR\n-----END CERTIFICATE-----\n"
                            }
                        }
                    },
                    "secrets": {},
                    "pvcs": {},
                    "jobs": {},
                    "cronJobs": {},
                    "ingresses": {},
                    "networkPolicies": {},
                    "serviceAccounts": {
                        "default": {
                            "metadata": {
                                "name": "default",
                                "namespace": "default",
                                "uid": "972352d1-7ed1-49f5-9ff8-5b25390b98af",
                                "resourceVersion": "363",
                                "creationTimestamp": "2025-06-11T16:41:10Z"
                            }
                        }
                    },
                    "roles": {},
                    "roleBindings": {},
                    "podDisruptionBudgets": {},
                    "endpoints": {
                        "kubernetes": {
                            "metadata": {
                                "name": "kubernetes",
                                "namespace": "default",
                                "uid": "70cccc0c-ec92-4bdf-a669-35b44a1150e3",
                                "resourceVersion": "1336",
                                "creationTimestamp": "2025-06-11T16:41:02Z",
                                "labels": {
                                    "endpointslice.kubernetes.io/skip-mirror": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:26Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:endpointslice.kubernetes.io/skip-mirror": {}
                                                }
                                            },
                                            "f:subsets": {}
                                        }
                                    }
                                ]
                            },
                            "subsets": [
                                {
                                    "addresses": [
                                        {
                                            "ip": "10.8.124.238"
                                        },
                                        {
                                            "ip": "10.8.130.221"
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "name": "https",
                                            "port": 443,
                                            "protocol": "TCP"
                                        }
                                    ]
                                }
                            ]
                        },
                        "nginx-service": {
                            "metadata": {
                                "name": "nginx-service",
                                "namespace": "default",
                                "uid": "513574a2-979f-4f67-bbab-9a7bd9620a0f",
                                "resourceVersion": "262105",
                                "creationTimestamp": "2025-06-12T15:10:32Z",
                                "annotations": {
                                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-06-12T15:12:28Z"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T15:12:28Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                                }
                                            },
                                            "f:subsets": {}
                                        }
                                    }
                                ]
                            },
                            "subsets": [
                                {
                                    "addresses": [
                                        {
                                            "ip": "10.8.131.174",
                                            "nodeName": "ip-10-8-143-217.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "default",
                                                "name": "nginx-deployment-6c9b4ccd66-wkp5c",
                                                "uid": "6dd48da0-51d3-4829-9403-90fe2583df7e"
                                            }
                                        },
                                        {
                                            "ip": "10.8.98.217",
                                            "nodeName": "ip-10-8-110-61.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "default",
                                                "name": "nginx-deployment-6c9b4ccd66-cpmfp",
                                                "uid": "d16d4300-c586-4f2d-aa73-5f137999f538"
                                            }
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "port": 80,
                                            "protocol": "TCP"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "limitRanges": {},
                    "resourceQuotas": {},
                    "unscheduledPods": {},
                    "hash": "05dc1d49232761a59f251b12c76b262faa5dfc2586aec39d8542acaf193e4e4c"
                },
                "devzero-zxporter": {
                    "namespace": {
                        "metadata": {
                            "name": "devzero-zxporter",
                            "uid": "d5993907-8511-49aa-be17-37a3e538c12f",
                            "resourceVersion": "292970",
                            "creationTimestamp": "2025-06-11T17:21:24Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "kustomize",
                                "app.kubernetes.io/name": "devzero-zxporter",
                                "control-plane": "controller-manager",
                                "kubernetes.io/metadata.name": "devzero-zxporter"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/managed-by\":\"kustomize\",\"app.kubernetes.io/name\":\"devzero-zxporter\",\"control-plane\":\"controller-manager\"},\"name\":\"devzero-zxporter\"}}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-12T17:53:27Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:control-plane": {},
                                                "f:kubernetes.io/metadata.name": {}
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "deployments": {
                        "devzero-zxporter-controller-manager": {
                            "deployment": {
                                "metadata": {
                                    "name": "devzero-zxporter-controller-manager",
                                    "namespace": "devzero-zxporter",
                                    "uid": "9a3a463a-f767-487d-ab41-76cccfc8c2ae",
                                    "resourceVersion": "293051",
                                    "generation": 5,
                                    "creationTimestamp": "2025-06-11T19:21:43Z",
                                    "labels": {
                                        "app.kubernetes.io/managed-by": "kustomize",
                                        "app.kubernetes.io/name": "devzero-zxporter",
                                        "control-plane": "controller-manager"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "5",
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/managed-by\":\"kustomize\",\"app.kubernetes.io/name\":\"devzero-zxporter\",\"control-plane\":\"controller-manager\"},\"name\":\"devzero-zxporter-controller-manager\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"control-plane\":\"controller-manager\"}},\"template\":{\"metadata\":{\"annotations\":{\"kubectl.kubernetes.io/default-container\":\"manager\"},\"labels\":{\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--metrics-bind-address=:8443\",\"--leader-elect\",\"--health-probe-bind-address=:8081\"],\"image\":\"remontada007/zxporter:mev4\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8081},\"initialDelaySeconds\":15,\"periodSeconds\":20},\"name\":\"manager\",\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":8081},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"200m\",\"memory\":\"128Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"mountPath\":\"/etc/zxporter/config\",\"name\":\"config-volume\",\"readOnly\":true}]}],\"securityContext\":{\"runAsNonRoot\":true},\"serviceAccountName\":\"devzero-zxporter-controller-manager\",\"terminationGracePeriodSeconds\":10,\"volumes\":[{\"configMap\":{\"name\":\"devzero-zxporter-env-config\"},\"name\":\"config-volume\"}]}}}}\n"
                                    },
                                    "managedFields": [
                                        {
                                            "manager": "kubectl-client-side-apply",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T17:53:32Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app.kubernetes.io/managed-by": {},
                                                        "f:app.kubernetes.io/name": {},
                                                        "f:control-plane": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:progressDeadlineSeconds": {},
                                                    "f:replicas": {},
                                                    "f:revisionHistoryLimit": {},
                                                    "f:selector": {},
                                                    "f:strategy": {
                                                        "f:rollingUpdate": {
                                                            ".": {},
                                                            "f:maxSurge": {},
                                                            "f:maxUnavailable": {}
                                                        },
                                                        "f:type": {}
                                                    },
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:annotations": {
                                                                ".": {},
                                                                "f:kubectl.kubernetes.io/default-container": {}
                                                            },
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:control-plane": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"manager\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/etc/zxporter/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:runAsNonRoot": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        ".": {},
                                                                        "f:defaultMode": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T17:53:42Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    }
                                                },
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:conditions": {
                                                        ".": {},
                                                        "k:{\"type\":\"Available\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        },
                                                        "k:{\"type\":\"Progressing\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        }
                                                    },
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {},
                                                    "f:updatedReplicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 1,
                                    "selector": {
                                        "matchLabels": {
                                            "control-plane": "controller-manager"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "control-plane": "controller-manager"
                                            },
                                            "annotations": {
                                                "kubectl.kubernetes.io/default-container": "manager"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "devzero-zxporter-env-config",
                                                        "defaultMode": 420
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "manager",
                                                    "image": "remontada007/zxporter:mev4",
                                                    "args": [
                                                        "--metrics-bind-address=:8443",
                                                        "--leader-elect",
                                                        "--health-probe-bind-address=:8081"
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "200m",
                                                            "memory": "128Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/zxporter/config"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 15,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 20,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 10,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "devzero-zxporter-controller-manager",
                                            "serviceAccount": "devzero-zxporter-controller-manager",
                                            "securityContext": {
                                                "runAsNonRoot": true
                                            },
                                            "schedulerName": "default-scheduler"
                                        }
                                    },
                                    "strategy": {
                                        "type": "RollingUpdate",
                                        "rollingUpdate": {
                                            "maxUnavailable": "25%",
                                            "maxSurge": "25%"
                                        }
                                    },
                                    "revisionHistoryLimit": 10,
                                    "progressDeadlineSeconds": 600
                                },
                                "status": {
                                    "observedGeneration": 5,
                                    "replicas": 1,
                                    "updatedReplicas": 1,
                                    "readyReplicas": 1,
                                    "availableReplicas": 1,
                                    "conditions": [
                                        {
                                            "type": "Available",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-12T17:01:59Z",
                                            "lastTransitionTime": "2025-06-12T17:01:59Z",
                                            "reason": "MinimumReplicasAvailable",
                                            "message": "Deployment has minimum availability."
                                        },
                                        {
                                            "type": "Progressing",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-12T17:53:42Z",
                                            "lastTransitionTime": "2025-06-11T19:21:43Z",
                                            "reason": "NewReplicaSetAvailable",
                                            "message": "ReplicaSet \"devzero-zxporter-controller-manager-645c9b6d64\" has successfully progressed."
                                        }
                                    ]
                                }
                            },
                            "pods": {
                                "devzero-zxporter/devzero-zxporter-controller-manager-645c9b6d64-q2svb": {
                                    "metadata": {
                                        "name": "devzero-zxporter-controller-manager-645c9b6d64-q2svb",
                                        "generateName": "devzero-zxporter-controller-manager-645c9b6d64-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "6c089688-7e50-4672-8cd0-f6ac6e892c9e",
                                        "resourceVersion": "293037",
                                        "creationTimestamp": "2025-06-12T17:53:32Z",
                                        "labels": {
                                            "control-plane": "controller-manager",
                                            "pod-template-hash": "645c9b6d64"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/default-container": "manager"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "devzero-zxporter-controller-manager-645c9b6d64",
                                                "uid": "5d2dd27e-fa9e-4f4e-9c71-132a36957565",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T17:53:32Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:annotations": {
                                                            ".": {},
                                                            "f:kubectl.kubernetes.io/default-container": {}
                                                        },
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:control-plane": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"5d2dd27e-fa9e-4f4e-9c71-132a36957565\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"manager\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:drop": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/etc/zxporter/config\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:runAsNonRoot": {}
                                                        },
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config-volume\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T17:53:42Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.135.206\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "config-volume",
                                                "configMap": {
                                                    "name": "devzero-zxporter-env-config",
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-8ln2s",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "manager",
                                                "image": "remontada007/zxporter:mev4",
                                                "args": [
                                                    "--metrics-bind-address=:8443",
                                                    "--leader-elect",
                                                    "--health-probe-bind-address=:8081"
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "200m",
                                                        "memory": "128Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "readOnly": true,
                                                        "mountPath": "/etc/zxporter/config"
                                                    },
                                                    {
                                                        "name": "kube-api-access-8ln2s",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/healthz",
                                                        "port": 8081,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 15,
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 20,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/readyz",
                                                        "port": 8081,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 5,
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 10,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "devzero-zxporter-controller-manager",
                                        "serviceAccount": "devzero-zxporter-controller-manager",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {
                                            "runAsNonRoot": true
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:34Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:32Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:42Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:42Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:32Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.135.206",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.135.206"
                                            }
                                        ],
                                        "startTime": "2025-06-12T17:53:32Z",
                                        "containerStatuses": [
                                            {
                                                "name": "manager",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-12T17:53:34Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "docker.io/remontada007/zxporter:mev4",
                                                "imageID": "docker.io/remontada007/zxporter@sha256:2c97dc1b86765d03b4cd32548ab2a545d1fb943c3791335c6b1b90266a1b2f13",
                                                "containerID": "containerd://1bd953686b1c580506b764f9050d224109ed44744e6008063022dfeb391c5f9b",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "79a9f0bb328e1cb7e2ca8a276a0fe6de2271f8fa9334865492905fb6d30126e9"
                        },
                        "dz-metrics-server": {
                            "deployment": {
                                "metadata": {
                                    "name": "dz-metrics-server",
                                    "namespace": "devzero-zxporter",
                                    "uid": "ed3f3976-d55e-4997-a9bc-57b973521cb6",
                                    "resourceVersion": "30452",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T19:21:46Z",
                                    "labels": {
                                        "app.kubernetes.io/instance": "metrics-server",
                                        "app.kubernetes.io/managed-by": "Helm",
                                        "app.kubernetes.io/name": "dz-metrics-server",
                                        "app.kubernetes.io/version": "0.7.2",
                                        "helm.sh/chart": "metrics-server-3.12.2"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1",
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-metrics-server\",\"app.kubernetes.io/version\":\"0.7.2\",\"helm.sh/chart\":\"metrics-server-3.12.2\"},\"name\":\"dz-metrics-server\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/name\":\"dz-metrics-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/name\":\"dz-metrics-server\"}},\"spec\":{\"containers\":[{\"args\":[\"--secure-port=10250\",\"--cert-dir=/tmp\",\"--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\",\"--kubelet-use-node-status-port\",\"--metric-resolution=15s\",\"--kubelet-insecure-tls\"],\"image\":\"registry.k8s.io/metrics-server/metrics-server:v0.7.2\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":0,\"periodSeconds\":10},\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":10250,\"name\":\"https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":20,\"periodSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"dz-metrics-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n"
                                    },
                                    "managedFields": [
                                        {
                                            "manager": "kubectl-client-side-apply",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:46Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app.kubernetes.io/instance": {},
                                                        "f:app.kubernetes.io/managed-by": {},
                                                        "f:app.kubernetes.io/name": {},
                                                        "f:app.kubernetes.io/version": {},
                                                        "f:helm.sh/chart": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:progressDeadlineSeconds": {},
                                                    "f:replicas": {},
                                                    "f:revisionHistoryLimit": {},
                                                    "f:selector": {},
                                                    "f:strategy": {
                                                        "f:rollingUpdate": {
                                                            ".": {},
                                                            "f:maxSurge": {},
                                                            "f:maxUnavailable": {}
                                                        },
                                                        "f:type": {}
                                                    },
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app.kubernetes.io/instance": {},
                                                                "f:app.kubernetes.io/name": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"metrics-server\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        },
                                                                        "f:readOnlyRootFilesystem": {},
                                                                        "f:runAsNonRoot": {},
                                                                        "f:runAsUser": {},
                                                                        "f:seccompProfile": {
                                                                            ".": {},
                                                                            "f:type": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/tmp\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:priorityClassName": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {},
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"tmp\"}": {
                                                                    ".": {},
                                                                    "f:emptyDir": {},
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:22:07Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    }
                                                },
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:conditions": {
                                                        ".": {},
                                                        "k:{\"type\":\"Available\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        },
                                                        "k:{\"type\":\"Progressing\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        }
                                                    },
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {},
                                                    "f:updatedReplicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 1,
                                    "selector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/instance": "metrics-server",
                                            "app.kubernetes.io/name": "dz-metrics-server"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app.kubernetes.io/instance": "metrics-server",
                                                "app.kubernetes.io/name": "dz-metrics-server"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "tmp",
                                                    "emptyDir": {}
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "metrics-server",
                                                    "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2",
                                                    "args": [
                                                        "--secure-port=10250",
                                                        "--cert-dir=/tmp",
                                                        "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                                        "--kubelet-use-node-status-port",
                                                        "--metric-resolution=15s",
                                                        "--kubelet-insecure-tls"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "name": "https",
                                                            "containerPort": 10250,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "100m",
                                                            "memory": "200Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "tmp",
                                                            "mountPath": "/tmp"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/livez",
                                                            "port": "https",
                                                            "scheme": "HTTPS"
                                                        },
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": "https",
                                                            "scheme": "HTTPS"
                                                        },
                                                        "initialDelaySeconds": 20,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "runAsUser": 1000,
                                                        "runAsNonRoot": true,
                                                        "readOnlyRootFilesystem": true,
                                                        "allowPrivilegeEscalation": false,
                                                        "seccompProfile": {
                                                            "type": "RuntimeDefault"
                                                        }
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "dz-metrics-server",
                                            "serviceAccount": "dz-metrics-server",
                                            "securityContext": {},
                                            "schedulerName": "default-scheduler",
                                            "priorityClassName": "system-cluster-critical"
                                        }
                                    },
                                    "strategy": {
                                        "type": "RollingUpdate",
                                        "rollingUpdate": {
                                            "maxUnavailable": "25%",
                                            "maxSurge": "25%"
                                        }
                                    },
                                    "revisionHistoryLimit": 10,
                                    "progressDeadlineSeconds": 600
                                },
                                "status": {
                                    "observedGeneration": 1,
                                    "replicas": 1,
                                    "updatedReplicas": 1,
                                    "readyReplicas": 1,
                                    "availableReplicas": 1,
                                    "conditions": [
                                        {
                                            "type": "Available",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-11T19:22:07Z",
                                            "lastTransitionTime": "2025-06-11T19:22:07Z",
                                            "reason": "MinimumReplicasAvailable",
                                            "message": "Deployment has minimum availability."
                                        },
                                        {
                                            "type": "Progressing",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-11T19:22:07Z",
                                            "lastTransitionTime": "2025-06-11T19:21:46Z",
                                            "reason": "NewReplicaSetAvailable",
                                            "message": "ReplicaSet \"dz-metrics-server-7b7f7bf57b\" has successfully progressed."
                                        }
                                    ]
                                }
                            },
                            "pods": {
                                "devzero-zxporter/dz-metrics-server-7b7f7bf57b-vm88j": {
                                    "metadata": {
                                        "name": "dz-metrics-server-7b7f7bf57b-vm88j",
                                        "generateName": "dz-metrics-server-7b7f7bf57b-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "03a6b7dc-c1fb-46c8-84b6-4dd69778e1d5",
                                        "resourceVersion": "30448",
                                        "creationTimestamp": "2025-06-11T19:21:46Z",
                                        "labels": {
                                            "app.kubernetes.io/instance": "metrics-server",
                                            "app.kubernetes.io/name": "dz-metrics-server",
                                            "pod-template-hash": "7b7f7bf57b"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "dz-metrics-server-7b7f7bf57b",
                                                "uid": "ed8910e7-24ae-476d-92e4-9fa21d07dcd4",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:46Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"ed8910e7-24ae-476d-92e4-9fa21d07dcd4\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"metrics-server\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:drop": {}
                                                                    },
                                                                    "f:readOnlyRootFilesystem": {},
                                                                    "f:runAsNonRoot": {},
                                                                    "f:runAsUser": {},
                                                                    "f:seccompProfile": {
                                                                        ".": {},
                                                                        "f:type": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"tmp\"}": {
                                                                ".": {},
                                                                "f:emptyDir": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:22:07Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.131.66\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "tmp",
                                                "emptyDir": {}
                                            },
                                            {
                                                "name": "kube-api-access-jwzjp",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "metrics-server",
                                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2",
                                                "args": [
                                                    "--secure-port=10250",
                                                    "--cert-dir=/tmp",
                                                    "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                                    "--kubelet-use-node-status-port",
                                                    "--metric-resolution=15s",
                                                    "--kubelet-insecure-tls"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "https",
                                                        "containerPort": 10250,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "100m",
                                                        "memory": "200Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "tmp",
                                                        "mountPath": "/tmp"
                                                    },
                                                    {
                                                        "name": "kube-api-access-jwzjp",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/livez",
                                                        "port": "https",
                                                        "scheme": "HTTPS"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/readyz",
                                                        "port": "https",
                                                        "scheme": "HTTPS"
                                                    },
                                                    "initialDelaySeconds": 20,
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "runAsUser": 1000,
                                                    "runAsNonRoot": true,
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false,
                                                    "seccompProfile": {
                                                        "type": "RuntimeDefault"
                                                    }
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "dz-metrics-server",
                                        "serviceAccount": "dz-metrics-server",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {},
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priorityClassName": "system-cluster-critical",
                                        "priority": 2000000000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:48Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:46Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:22:07Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:22:07Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:46Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.131.66",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.131.66"
                                            }
                                        ],
                                        "startTime": "2025-06-11T19:21:46Z",
                                        "containerStatuses": [
                                            {
                                                "name": "metrics-server",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:47Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2",
                                                "imageID": "registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9",
                                                "containerID": "containerd://fd71891a678015268ba3f17ac18394fdc561d86ae8b789b586fab2d0327c5abf",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "cdc4486ed211ff4110322ed81b23398889e05c465c5fd0043ab85a2d696729e8"
                        },
                        "prometheus-dz-prometheus-server": {
                            "deployment": {
                                "metadata": {
                                    "name": "prometheus-dz-prometheus-server",
                                    "namespace": "devzero-zxporter",
                                    "uid": "5668c34f-3a2f-431a-9228-8671cad92340",
                                    "resourceVersion": "30462",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T19:21:33Z",
                                    "labels": {
                                        "app.kubernetes.io/component": "server",
                                        "app.kubernetes.io/instance": "prometheus",
                                        "app.kubernetes.io/name": "dz-prometheus",
                                        "app.kubernetes.io/part-of": "dz-prometheus",
                                        "app.kubernetes.io/version": "v3.4.1",
                                        "helm.sh/chart": "prometheus-27.20.0"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1",
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"dz-prometheus\",\"app.kubernetes.io/part-of\":\"dz-prometheus\",\"app.kubernetes.io/version\":\"v3.4.1\",\"helm.sh/chart\":\"prometheus-27.20.0\"},\"name\":\"prometheus-dz-prometheus-server\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"dz-prometheus\"}},\"strategy\":{\"rollingUpdate\":null,\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"dz-prometheus\",\"app.kubernetes.io/part-of\":\"dz-prometheus\",\"app.kubernetes.io/version\":\"v3.4.1\",\"helm.sh/chart\":\"prometheus-27.20.0\"}},\"spec\":{\"containers\":[{\"args\":[\"--watched-dir=/etc/config\",\"--listen-address=0.0.0.0:8080\",\"--reload-url=http://127.0.0.1:9090/-/reload\"],\"image\":\"quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"metrics\",\"scheme\":\"HTTP\"},\"initialDelaySeconds\":2,\"periodSeconds\":10},\"name\":\"dz-prometheus-server-configmap-reload\",\"ports\":[{\"containerPort\":8080,\"name\":\"metrics\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"metrics\",\"scheme\":\"HTTP\"},\"periodSeconds\":10},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"config-volume\",\"readOnly\":true}]},{\"args\":[\"--storage.tsdb.retention.time=15d\",\"--config.file=/etc/config/prometheus.yml\",\"--storage.tsdb.path=/data\",\"--web.console.libraries=/etc/prometheus/console_libraries\",\"--web.console.templates=/etc/prometheus/consoles\",\"--web.enable-lifecycle\"],\"image\":\"quay.io/prometheus/prometheus:v3.4.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/-/healthy\",\"port\":9090,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":10},\"name\":\"dz-prometheus-server\",\"ports\":[{\"containerPort\":9090}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/-/ready\",\"port\":9090,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":4},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"config-volume\"},{\"mountPath\":\"/data\",\"name\":\"storage-volume\",\"subPath\":\"\"}]}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"securityContext\":{\"fsGroup\":65534,\"runAsGroup\":65534,\"runAsNonRoot\":true,\"runAsUser\":65534},\"serviceAccountName\":\"prometheus-dz-prometheus-server\",\"terminationGracePeriodSeconds\":300,\"volumes\":[{\"configMap\":{\"name\":\"prometheus-dz-prometheus-server\"},\"name\":\"config-volume\"},{\"emptyDir\":{},\"name\":\"storage-volume\"}]}}}}\n"
                                    },
                                    "managedFields": [
                                        {
                                            "manager": "kubectl-client-side-apply",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:33Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app.kubernetes.io/component": {},
                                                        "f:app.kubernetes.io/instance": {},
                                                        "f:app.kubernetes.io/name": {},
                                                        "f:app.kubernetes.io/part-of": {},
                                                        "f:app.kubernetes.io/version": {},
                                                        "f:helm.sh/chart": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:progressDeadlineSeconds": {},
                                                    "f:replicas": {},
                                                    "f:revisionHistoryLimit": {},
                                                    "f:selector": {},
                                                    "f:strategy": {
                                                        "f:type": {}
                                                    },
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app.kubernetes.io/component": {},
                                                                "f:app.kubernetes.io/instance": {},
                                                                "f:app.kubernetes.io/name": {},
                                                                "f:app.kubernetes.io/part-of": {},
                                                                "f:app.kubernetes.io/version": {},
                                                                "f:helm.sh/chart": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"dz-prometheus-server\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":9090,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {},
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/data\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/etc/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        }
                                                                    }
                                                                },
                                                                "k:{\"name\":\"dz-prometheus-server-configmap-reload\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {},
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/etc/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:enableServiceLinks": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:fsGroup": {},
                                                                "f:runAsGroup": {},
                                                                "f:runAsNonRoot": {},
                                                                "f:runAsUser": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        ".": {},
                                                                        "f:defaultMode": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"storage-volume\"}": {
                                                                    ".": {},
                                                                    "f:emptyDir": {},
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:22:08Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    }
                                                },
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:conditions": {
                                                        ".": {},
                                                        "k:{\"type\":\"Available\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        },
                                                        "k:{\"type\":\"Progressing\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        }
                                                    },
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {},
                                                    "f:updatedReplicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 1,
                                    "selector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/component": "server",
                                            "app.kubernetes.io/instance": "prometheus",
                                            "app.kubernetes.io/name": "dz-prometheus"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app.kubernetes.io/component": "server",
                                                "app.kubernetes.io/instance": "prometheus",
                                                "app.kubernetes.io/name": "dz-prometheus",
                                                "app.kubernetes.io/part-of": "dz-prometheus",
                                                "app.kubernetes.io/version": "v3.4.1",
                                                "helm.sh/chart": "prometheus-27.20.0"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "prometheus-dz-prometheus-server",
                                                        "defaultMode": 420
                                                    }
                                                },
                                                {
                                                    "name": "storage-volume",
                                                    "emptyDir": {}
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "dz-prometheus-server-configmap-reload",
                                                    "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0",
                                                    "args": [
                                                        "--watched-dir=/etc/config",
                                                        "--listen-address=0.0.0.0:8080",
                                                        "--reload-url=http://127.0.0.1:9090/-/reload"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "name": "metrics",
                                                            "containerPort": 8080,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {},
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/config"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": "metrics",
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 2,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": "metrics",
                                                            "scheme": "HTTP"
                                                        },
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent"
                                                },
                                                {
                                                    "name": "dz-prometheus-server",
                                                    "image": "quay.io/prometheus/prometheus:v3.4.1",
                                                    "args": [
                                                        "--storage.tsdb.retention.time=15d",
                                                        "--config.file=/etc/config/prometheus.yml",
                                                        "--storage.tsdb.path=/data",
                                                        "--web.console.libraries=/etc/prometheus/console_libraries",
                                                        "--web.console.templates=/etc/prometheus/consoles",
                                                        "--web.enable-lifecycle"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "containerPort": 9090,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {},
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "mountPath": "/etc/config"
                                                        },
                                                        {
                                                            "name": "storage-volume",
                                                            "mountPath": "/data"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/-/healthy",
                                                            "port": 9090,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 30,
                                                        "timeoutSeconds": 10,
                                                        "periodSeconds": 15,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/-/ready",
                                                            "port": 9090,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 30,
                                                        "timeoutSeconds": 4,
                                                        "periodSeconds": 5,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent"
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 300,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "prometheus-dz-prometheus-server",
                                            "serviceAccount": "prometheus-dz-prometheus-server",
                                            "securityContext": {
                                                "runAsUser": 65534,
                                                "runAsGroup": 65534,
                                                "runAsNonRoot": true,
                                                "fsGroup": 65534
                                            },
                                            "schedulerName": "default-scheduler",
                                            "enableServiceLinks": true
                                        }
                                    },
                                    "strategy": {
                                        "type": "Recreate"
                                    },
                                    "revisionHistoryLimit": 10,
                                    "progressDeadlineSeconds": 600
                                },
                                "status": {
                                    "observedGeneration": 1,
                                    "replicas": 1,
                                    "updatedReplicas": 1,
                                    "readyReplicas": 1,
                                    "availableReplicas": 1,
                                    "conditions": [
                                        {
                                            "type": "Available",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-11T19:22:08Z",
                                            "lastTransitionTime": "2025-06-11T19:22:08Z",
                                            "reason": "MinimumReplicasAvailable",
                                            "message": "Deployment has minimum availability."
                                        },
                                        {
                                            "type": "Progressing",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-11T19:22:08Z",
                                            "lastTransitionTime": "2025-06-11T19:21:33Z",
                                            "reason": "NewReplicaSetAvailable",
                                            "message": "ReplicaSet \"prometheus-dz-prometheus-server-5cc6d954cd\" has successfully progressed."
                                        }
                                    ]
                                }
                            },
                            "pods": {
                                "devzero-zxporter/prometheus-dz-prometheus-server-5cc6d954cd-vpp6q": {
                                    "metadata": {
                                        "name": "prometheus-dz-prometheus-server-5cc6d954cd-vpp6q",
                                        "generateName": "prometheus-dz-prometheus-server-5cc6d954cd-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "be6a8344-1fe6-491c-8964-81f29d2c9157",
                                        "resourceVersion": "30457",
                                        "creationTimestamp": "2025-06-11T19:21:33Z",
                                        "labels": {
                                            "app.kubernetes.io/component": "server",
                                            "app.kubernetes.io/instance": "prometheus",
                                            "app.kubernetes.io/name": "dz-prometheus",
                                            "app.kubernetes.io/part-of": "dz-prometheus",
                                            "app.kubernetes.io/version": "v3.4.1",
                                            "helm.sh/chart": "prometheus-27.20.0",
                                            "pod-template-hash": "5cc6d954cd"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "prometheus-dz-prometheus-server-5cc6d954cd",
                                                "uid": "c2cf5038-ff1d-4259-bfab-f26ceba89449",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:33Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/component": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:app.kubernetes.io/part-of": {},
                                                            "f:app.kubernetes.io/version": {},
                                                            "f:helm.sh/chart": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"c2cf5038-ff1d-4259-bfab-f26ceba89449\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"dz-prometheus-server\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":9090,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {},
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/data\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/etc/config\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"dz-prometheus-server-configmap-reload\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {},
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/etc/config\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:fsGroup": {},
                                                            "f:runAsGroup": {},
                                                            "f:runAsNonRoot": {},
                                                            "f:runAsUser": {}
                                                        },
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config-volume\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"storage-volume\"}": {
                                                                ".": {},
                                                                "f:emptyDir": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:22:08Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.136.124\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "config-volume",
                                                "configMap": {
                                                    "name": "prometheus-dz-prometheus-server",
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "storage-volume",
                                                "emptyDir": {}
                                            },
                                            {
                                                "name": "kube-api-access-qm9zv",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "dz-prometheus-server-configmap-reload",
                                                "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0",
                                                "args": [
                                                    "--watched-dir=/etc/config",
                                                    "--listen-address=0.0.0.0:8080",
                                                    "--reload-url=http://127.0.0.1:9090/-/reload"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "metrics",
                                                        "containerPort": 8080,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {},
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "readOnly": true,
                                                        "mountPath": "/etc/config"
                                                    },
                                                    {
                                                        "name": "kube-api-access-qm9zv",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/healthz",
                                                        "port": "metrics",
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 2,
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/healthz",
                                                        "port": "metrics",
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent"
                                            },
                                            {
                                                "name": "dz-prometheus-server",
                                                "image": "quay.io/prometheus/prometheus:v3.4.1",
                                                "args": [
                                                    "--storage.tsdb.retention.time=15d",
                                                    "--config.file=/etc/config/prometheus.yml",
                                                    "--storage.tsdb.path=/data",
                                                    "--web.console.libraries=/etc/prometheus/console_libraries",
                                                    "--web.console.templates=/etc/prometheus/consoles",
                                                    "--web.enable-lifecycle"
                                                ],
                                                "ports": [
                                                    {
                                                        "containerPort": 9090,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {},
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "mountPath": "/etc/config"
                                                    },
                                                    {
                                                        "name": "storage-volume",
                                                        "mountPath": "/data"
                                                    },
                                                    {
                                                        "name": "kube-api-access-qm9zv",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/-/healthy",
                                                        "port": 9090,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 30,
                                                    "timeoutSeconds": 10,
                                                    "periodSeconds": 15,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/-/ready",
                                                        "port": 9090,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 30,
                                                    "timeoutSeconds": 4,
                                                    "periodSeconds": 5,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent"
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 300,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "prometheus-dz-prometheus-server",
                                        "serviceAccount": "prometheus-dz-prometheus-server",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {
                                            "runAsUser": 65534,
                                            "runAsGroup": 65534,
                                            "runAsNonRoot": true,
                                            "fsGroup": 65534
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:34Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:33Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:22:08Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:22:08Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:33Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.136.124",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.136.124"
                                            }
                                        ],
                                        "startTime": "2025-06-11T19:21:33Z",
                                        "containerStatuses": [
                                            {
                                                "name": "dz-prometheus-server",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:34Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "quay.io/prometheus/prometheus:v3.4.1",
                                                "imageID": "quay.io/prometheus/prometheus@sha256:9abc6cf6aea7710d163dbb28d8eeb7dc5baef01e38fa4cd146a406dd9f07f70d",
                                                "containerID": "containerd://769012eac4912054933443b45b45343eca722e3ff6b61a84cc060a79fd4986f6",
                                                "started": true
                                            },
                                            {
                                                "name": "dz-prometheus-server-configmap-reload",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:33Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0",
                                                "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:78aec597d87aa2b4ba947ab9190538dae93a58a67b8e930aefea1086534b02ef",
                                                "containerID": "containerd://9972216f1ff2538758f7983c33bdba51c84cd470e5399847143e8f3d7380d8d1",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "BestEffort"
                                    }
                                }
                            },
                            "hash": "cd1c76de68f29c97299aa4bc47da0d01ce12526d2e7e9f10d8a43f8149c3a31b"
                        },
                        "prometheus-kube-state-metrics": {
                            "deployment": {
                                "metadata": {
                                    "name": "prometheus-kube-state-metrics",
                                    "namespace": "devzero-zxporter",
                                    "uid": "3499f592-ad96-4660-9084-bf534fc296fb",
                                    "resourceVersion": "30315",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T19:21:32Z",
                                    "labels": {
                                        "app.kubernetes.io/component": "metrics",
                                        "app.kubernetes.io/instance": "prometheus",
                                        "app.kubernetes.io/managed-by": "Helm",
                                        "app.kubernetes.io/name": "kube-state-metrics",
                                        "app.kubernetes.io/part-of": "kube-state-metrics",
                                        "app.kubernetes.io/version": "2.15.0",
                                        "helm.sh/chart": "kube-state-metrics-5.33.2"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1",
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"kube-state-metrics\",\"app.kubernetes.io/part-of\":\"kube-state-metrics\",\"app.kubernetes.io/version\":\"2.15.0\",\"helm.sh/chart\":\"kube-state-metrics-5.33.2\"},\"name\":\"prometheus-kube-state-metrics\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"kube-state-metrics\"}},\"strategy\":{\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"kube-state-metrics\",\"app.kubernetes.io/part-of\":\"kube-state-metrics\",\"app.kubernetes.io/version\":\"2.15.0\",\"helm.sh/chart\":\"kube-state-metrics-5.33.2\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"args\":[\"--port=8080\",\"--resources=nodes\"],\"image\":\"registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"httpHeaders\":null,\"path\":\"/livez\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"kube-state-metrics\",\"ports\":[{\"containerPort\":8080,\"name\":\"http\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"httpHeaders\":null,\"path\":\"/readyz\",\"port\":8081,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true}}],\"dnsPolicy\":\"ClusterFirst\",\"hostNetwork\":false,\"securityContext\":{\"fsGroup\":65534,\"runAsGroup\":65534,\"runAsNonRoot\":true,\"runAsUser\":65534,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"prometheus-kube-state-metrics\"}}}}\n"
                                    },
                                    "managedFields": [
                                        {
                                            "manager": "kubectl-client-side-apply",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:32Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app.kubernetes.io/component": {},
                                                        "f:app.kubernetes.io/instance": {},
                                                        "f:app.kubernetes.io/managed-by": {},
                                                        "f:app.kubernetes.io/name": {},
                                                        "f:app.kubernetes.io/part-of": {},
                                                        "f:app.kubernetes.io/version": {},
                                                        "f:helm.sh/chart": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:progressDeadlineSeconds": {},
                                                    "f:replicas": {},
                                                    "f:revisionHistoryLimit": {},
                                                    "f:selector": {},
                                                    "f:strategy": {
                                                        "f:rollingUpdate": {
                                                            ".": {},
                                                            "f:maxSurge": {},
                                                            "f:maxUnavailable": {}
                                                        },
                                                        "f:type": {}
                                                    },
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app.kubernetes.io/component": {},
                                                                "f:app.kubernetes.io/instance": {},
                                                                "f:app.kubernetes.io/managed-by": {},
                                                                "f:app.kubernetes.io/name": {},
                                                                "f:app.kubernetes.io/part-of": {},
                                                                "f:app.kubernetes.io/version": {},
                                                                "f:helm.sh/chart": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:automountServiceAccountToken": {},
                                                            "f:containers": {
                                                                "k:{\"name\":\"kube-state-metrics\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {},
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        },
                                                                        "f:readOnlyRootFilesystem": {}
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {}
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:fsGroup": {},
                                                                "f:runAsGroup": {},
                                                                "f:runAsNonRoot": {},
                                                                "f:runAsUser": {},
                                                                "f:seccompProfile": {
                                                                    ".": {},
                                                                    "f:type": {}
                                                                }
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {}
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:42Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    }
                                                },
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:conditions": {
                                                        ".": {},
                                                        "k:{\"type\":\"Available\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        },
                                                        "k:{\"type\":\"Progressing\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        }
                                                    },
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {},
                                                    "f:updatedReplicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 1,
                                    "selector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/instance": "prometheus",
                                            "app.kubernetes.io/name": "kube-state-metrics"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app.kubernetes.io/component": "metrics",
                                                "app.kubernetes.io/instance": "prometheus",
                                                "app.kubernetes.io/managed-by": "Helm",
                                                "app.kubernetes.io/name": "kube-state-metrics",
                                                "app.kubernetes.io/part-of": "kube-state-metrics",
                                                "app.kubernetes.io/version": "2.15.0",
                                                "helm.sh/chart": "kube-state-metrics-5.33.2"
                                            }
                                        },
                                        "spec": {
                                            "containers": [
                                                {
                                                    "name": "kube-state-metrics",
                                                    "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0",
                                                    "args": [
                                                        "--port=8080",
                                                        "--resources=nodes"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "name": "http",
                                                            "containerPort": 8080,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {},
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/livez",
                                                            "port": 8080,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 5,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 5,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "readOnlyRootFilesystem": true,
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "prometheus-kube-state-metrics",
                                            "serviceAccount": "prometheus-kube-state-metrics",
                                            "automountServiceAccountToken": true,
                                            "securityContext": {
                                                "runAsUser": 65534,
                                                "runAsGroup": 65534,
                                                "runAsNonRoot": true,
                                                "fsGroup": 65534,
                                                "seccompProfile": {
                                                    "type": "RuntimeDefault"
                                                }
                                            },
                                            "schedulerName": "default-scheduler"
                                        }
                                    },
                                    "strategy": {
                                        "type": "RollingUpdate",
                                        "rollingUpdate": {
                                            "maxUnavailable": "25%",
                                            "maxSurge": "25%"
                                        }
                                    },
                                    "revisionHistoryLimit": 10,
                                    "progressDeadlineSeconds": 600
                                },
                                "status": {
                                    "observedGeneration": 1,
                                    "replicas": 1,
                                    "updatedReplicas": 1,
                                    "readyReplicas": 1,
                                    "availableReplicas": 1,
                                    "conditions": [
                                        {
                                            "type": "Available",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-11T19:21:42Z",
                                            "lastTransitionTime": "2025-06-11T19:21:42Z",
                                            "reason": "MinimumReplicasAvailable",
                                            "message": "Deployment has minimum availability."
                                        },
                                        {
                                            "type": "Progressing",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-11T19:21:42Z",
                                            "lastTransitionTime": "2025-06-11T19:21:32Z",
                                            "reason": "NewReplicaSetAvailable",
                                            "message": "ReplicaSet \"prometheus-kube-state-metrics-57554884b\" has successfully progressed."
                                        }
                                    ]
                                }
                            },
                            "pods": {
                                "devzero-zxporter/prometheus-kube-state-metrics-57554884b-mgs5b": {
                                    "metadata": {
                                        "name": "prometheus-kube-state-metrics-57554884b-mgs5b",
                                        "generateName": "prometheus-kube-state-metrics-57554884b-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "0d5fcb4d-3be1-49cb-9e5f-4bedd0468073",
                                        "resourceVersion": "30311",
                                        "creationTimestamp": "2025-06-11T19:21:32Z",
                                        "labels": {
                                            "app.kubernetes.io/component": "metrics",
                                            "app.kubernetes.io/instance": "prometheus",
                                            "app.kubernetes.io/managed-by": "Helm",
                                            "app.kubernetes.io/name": "kube-state-metrics",
                                            "app.kubernetes.io/part-of": "kube-state-metrics",
                                            "app.kubernetes.io/version": "2.15.0",
                                            "helm.sh/chart": "kube-state-metrics-5.33.2",
                                            "pod-template-hash": "57554884b"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "prometheus-kube-state-metrics-57554884b",
                                                "uid": "33984339-e1c9-4a92-8b2e-4b3c829ee2a2",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:32Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/component": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/managed-by": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:app.kubernetes.io/part-of": {},
                                                            "f:app.kubernetes.io/version": {},
                                                            "f:helm.sh/chart": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"33984339-e1c9-4a92-8b2e-4b3c829ee2a2\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:automountServiceAccountToken": {},
                                                        "f:containers": {
                                                            "k:{\"name\":\"kube-state-metrics\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {},
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:drop": {}
                                                                    },
                                                                    "f:readOnlyRootFilesystem": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {}
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:fsGroup": {},
                                                            "f:runAsGroup": {},
                                                            "f:runAsNonRoot": {},
                                                            "f:runAsUser": {},
                                                            "f:seccompProfile": {
                                                                ".": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {}
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:42Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.137.201\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "kube-api-access-j78c8",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "kube-state-metrics",
                                                "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0",
                                                "args": [
                                                    "--port=8080",
                                                    "--resources=nodes"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "http",
                                                        "containerPort": 8080,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {},
                                                "volumeMounts": [
                                                    {
                                                        "name": "kube-api-access-j78c8",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/livez",
                                                        "port": 8080,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 5,
                                                    "timeoutSeconds": 5,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/readyz",
                                                        "port": 8081,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 5,
                                                    "timeoutSeconds": 5,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "prometheus-kube-state-metrics",
                                        "serviceAccount": "prometheus-kube-state-metrics",
                                        "automountServiceAccountToken": true,
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {
                                            "runAsUser": 65534,
                                            "runAsGroup": 65534,
                                            "runAsNonRoot": true,
                                            "fsGroup": 65534,
                                            "seccompProfile": {
                                                "type": "RuntimeDefault"
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:34Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:32Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:42Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:42Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:32Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.137.201",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.137.201"
                                            }
                                        ],
                                        "startTime": "2025-06-11T19:21:32Z",
                                        "containerStatuses": [
                                            {
                                                "name": "kube-state-metrics",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:33Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0",
                                                "imageID": "registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:db384bf43222b066c378e77027a675d4cd9911107adba46c2922b3a55e10d6fb",
                                                "containerID": "containerd://c1585c6ac7a65a5cbafca65fd83bfc3d830ea4c0e15eb795b6659ffe62f4373c",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "BestEffort"
                                    }
                                }
                            },
                            "hash": "c2843308d361cdb470a5b9637f6b91dcfe500a7116f40e290b824ae376ccc748"
                        }
                    },
                    "statefulSets": {},
                    "daemonSets": {
                        "dz-prometheus-node-exporter": {
                            "daemonSet": {
                                "metadata": {
                                    "name": "dz-prometheus-node-exporter",
                                    "namespace": "devzero-zxporter",
                                    "uid": "b8cee21f-6011-4558-8552-3dd63c82463e",
                                    "resourceVersion": "30288",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T19:21:35Z",
                                    "labels": {
                                        "app.kubernetes.io/component": "metrics",
                                        "app.kubernetes.io/instance": "node-exporter",
                                        "app.kubernetes.io/managed-by": "Helm",
                                        "app.kubernetes.io/name": "dz-prometheus-node-exporter",
                                        "app.kubernetes.io/part-of": "dz-prometheus-node-exporter",
                                        "app.kubernetes.io/version": "1.9.1",
                                        "helm.sh/chart": "prometheus-node-exporter-4.47.0"
                                    },
                                    "annotations": {
                                        "deprecated.daemonset.template.generation": "1",
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"node-exporter\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-prometheus-node-exporter\",\"app.kubernetes.io/part-of\":\"dz-prometheus-node-exporter\",\"app.kubernetes.io/version\":\"1.9.1\",\"helm.sh/chart\":\"prometheus-node-exporter-4.47.0\"},\"name\":\"dz-prometheus-node-exporter\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"node-exporter\",\"app.kubernetes.io/name\":\"dz-prometheus-node-exporter\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\",\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"9101\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"node-exporter\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-prometheus-node-exporter\",\"app.kubernetes.io/part-of\":\"dz-prometheus-node-exporter\",\"app.kubernetes.io/version\":\"1.9.1\",\"helm.sh/chart\":\"prometheus-node-exporter-4.47.0\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"eks.amazonaws.com/compute-type\",\"operator\":\"NotIn\",\"values\":[\"fargate\"]},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]}]}]}}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"--path.procfs=/host/proc\",\"--path.sysfs=/host/sys\",\"--path.rootfs=/host/root\",\"--path.udev.data=/host/root/run/udev/data\",\"--web.listen-address=[$(HOST_IP)]:9101\"],\"env\":[{\"name\":\"HOST_IP\",\"value\":\"0.0.0.0\"}],\"image\":\"quay.io/prometheus/node-exporter:v1.9.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"httpHeaders\":null,\"path\":\"/\",\"port\":9101,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":0,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"node-exporter\",\"ports\":[{\"containerPort\":9101,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"httpHeaders\":null,\"path\":\"/\",\"port\":9101,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":0,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/host/proc\",\"name\":\"proc\",\"readOnly\":true},{\"mountPath\":\"/host/sys\",\"name\":\"sys\",\"readOnly\":true},{\"mountPath\":\"/host/root\",\"mountPropagation\":\"HostToContainer\",\"name\":\"root\",\"readOnly\":true}]}],\"hostIPC\":false,\"hostNetwork\":true,\"hostPID\":true,\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"fsGroup\":65534,\"runAsGroup\":65534,\"runAsNonRoot\":true,\"runAsUser\":65534},\"serviceAccountName\":\"dz-prometheus-node-exporter\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/proc\"},\"name\":\"proc\"},{\"hostPath\":{\"path\":\"/sys\"},\"name\":\"sys\"},{\"hostPath\":{\"path\":\"/\"},\"name\":\"root\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                                    },
                                    "managedFields": [
                                        {
                                            "manager": "kubectl-client-side-apply",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:35Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deprecated.daemonset.template.generation": {},
                                                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app.kubernetes.io/component": {},
                                                        "f:app.kubernetes.io/instance": {},
                                                        "f:app.kubernetes.io/managed-by": {},
                                                        "f:app.kubernetes.io/name": {},
                                                        "f:app.kubernetes.io/part-of": {},
                                                        "f:app.kubernetes.io/version": {},
                                                        "f:helm.sh/chart": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:revisionHistoryLimit": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:annotations": {
                                                                ".": {},
                                                                "f:cluster-autoscaler.kubernetes.io/safe-to-evict": {},
                                                                "f:prometheus.io/path": {},
                                                                "f:prometheus.io/port": {},
                                                                "f:prometheus.io/scrape": {}
                                                            },
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app.kubernetes.io/component": {},
                                                                "f:app.kubernetes.io/instance": {},
                                                                "f:app.kubernetes.io/managed-by": {},
                                                                "f:app.kubernetes.io/name": {},
                                                                "f:app.kubernetes.io/part-of": {},
                                                                "f:app.kubernetes.io/version": {},
                                                                "f:helm.sh/chart": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:affinity": {
                                                                ".": {},
                                                                "f:nodeAffinity": {
                                                                    ".": {},
                                                                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                                }
                                                            },
                                                            "f:automountServiceAccountToken": {},
                                                            "f:containers": {
                                                                "k:{\"name\":\"node-exporter\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:env": {
                                                                        ".": {},
                                                                        "k:{\"name\":\"HOST_IP\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        }
                                                                    },
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {},
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:readOnlyRootFilesystem": {}
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/host/proc\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/host/root\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:mountPropagation": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/host/sys\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:hostNetwork": {},
                                                            "f:hostPID": {},
                                                            "f:nodeSelector": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:fsGroup": {},
                                                                "f:runAsGroup": {},
                                                                "f:runAsNonRoot": {},
                                                                "f:runAsUser": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:tolerations": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"proc\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:type": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"root\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:type": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"sys\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:type": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "f:updateStrategy": {
                                                        "f:rollingUpdate": {
                                                            ".": {},
                                                            "f:maxSurge": {},
                                                            "f:maxUnavailable": {}
                                                        },
                                                        "f:type": {}
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:36Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:currentNumberScheduled": {},
                                                    "f:desiredNumberScheduled": {},
                                                    "f:numberAvailable": {},
                                                    "f:numberReady": {},
                                                    "f:observedGeneration": {},
                                                    "f:updatedNumberScheduled": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "selector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/instance": "node-exporter",
                                            "app.kubernetes.io/name": "dz-prometheus-node-exporter"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app.kubernetes.io/component": "metrics",
                                                "app.kubernetes.io/instance": "node-exporter",
                                                "app.kubernetes.io/managed-by": "Helm",
                                                "app.kubernetes.io/name": "dz-prometheus-node-exporter",
                                                "app.kubernetes.io/part-of": "dz-prometheus-node-exporter",
                                                "app.kubernetes.io/version": "1.9.1",
                                                "helm.sh/chart": "prometheus-node-exporter-4.47.0"
                                            },
                                            "annotations": {
                                                "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                                "prometheus.io/path": "/metrics",
                                                "prometheus.io/port": "9101",
                                                "prometheus.io/scrape": "true"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "proc",
                                                    "hostPath": {
                                                        "path": "/proc",
                                                        "type": ""
                                                    }
                                                },
                                                {
                                                    "name": "sys",
                                                    "hostPath": {
                                                        "path": "/sys",
                                                        "type": ""
                                                    }
                                                },
                                                {
                                                    "name": "root",
                                                    "hostPath": {
                                                        "path": "/",
                                                        "type": ""
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "node-exporter",
                                                    "image": "quay.io/prometheus/node-exporter:v1.9.1",
                                                    "args": [
                                                        "--path.procfs=/host/proc",
                                                        "--path.sysfs=/host/sys",
                                                        "--path.rootfs=/host/root",
                                                        "--path.udev.data=/host/root/run/udev/data",
                                                        "--web.listen-address=[$(HOST_IP)]:9101"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "name": "metrics",
                                                            "containerPort": 9101,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "env": [
                                                        {
                                                            "name": "HOST_IP",
                                                            "value": "0.0.0.0"
                                                        }
                                                    ],
                                                    "resources": {},
                                                    "volumeMounts": [
                                                        {
                                                            "name": "proc",
                                                            "readOnly": true,
                                                            "mountPath": "/host/proc"
                                                        },
                                                        {
                                                            "name": "sys",
                                                            "readOnly": true,
                                                            "mountPath": "/host/sys"
                                                        },
                                                        {
                                                            "name": "root",
                                                            "readOnly": true,
                                                            "mountPath": "/host/root",
                                                            "mountPropagation": "HostToContainer"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/",
                                                            "port": 9101,
                                                            "scheme": "HTTP"
                                                        },
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/",
                                                            "port": 9101,
                                                            "scheme": "HTTP"
                                                        },
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "readOnlyRootFilesystem": true,
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "ClusterFirst",
                                            "nodeSelector": {
                                                "kubernetes.io/os": "linux"
                                            },
                                            "serviceAccountName": "dz-prometheus-node-exporter",
                                            "serviceAccount": "dz-prometheus-node-exporter",
                                            "automountServiceAccountToken": false,
                                            "hostNetwork": true,
                                            "hostPID": true,
                                            "securityContext": {
                                                "runAsUser": 65534,
                                                "runAsGroup": 65534,
                                                "runAsNonRoot": true,
                                                "fsGroup": 65534
                                            },
                                            "affinity": {
                                                "nodeAffinity": {
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                        "nodeSelectorTerms": [
                                                            {
                                                                "matchExpressions": [
                                                                    {
                                                                        "key": "eks.amazonaws.com/compute-type",
                                                                        "operator": "NotIn",
                                                                        "values": [
                                                                            "fargate"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "key": "type",
                                                                        "operator": "NotIn",
                                                                        "values": [
                                                                            "virtual-kubelet"
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "schedulerName": "default-scheduler",
                                            "tolerations": [
                                                {
                                                    "operator": "Exists",
                                                    "effect": "NoSchedule"
                                                }
                                            ]
                                        }
                                    },
                                    "updateStrategy": {
                                        "type": "RollingUpdate",
                                        "rollingUpdate": {
                                            "maxUnavailable": 1,
                                            "maxSurge": 0
                                        }
                                    },
                                    "revisionHistoryLimit": 10
                                },
                                "status": {
                                    "currentNumberScheduled": 2,
                                    "numberMisscheduled": 0,
                                    "desiredNumberScheduled": 2,
                                    "numberReady": 2,
                                    "observedGeneration": 1,
                                    "updatedNumberScheduled": 2,
                                    "numberAvailable": 2
                                }
                            },
                            "pods": {
                                "devzero-zxporter/dz-prometheus-node-exporter-7z6wq": {
                                    "metadata": {
                                        "name": "dz-prometheus-node-exporter-7z6wq",
                                        "generateName": "dz-prometheus-node-exporter-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "9862d88d-a28c-46ec-a980-c393c5d23854",
                                        "resourceVersion": "30285",
                                        "creationTimestamp": "2025-06-11T19:21:35Z",
                                        "labels": {
                                            "app.kubernetes.io/component": "metrics",
                                            "app.kubernetes.io/instance": "node-exporter",
                                            "app.kubernetes.io/managed-by": "Helm",
                                            "app.kubernetes.io/name": "dz-prometheus-node-exporter",
                                            "app.kubernetes.io/part-of": "dz-prometheus-node-exporter",
                                            "app.kubernetes.io/version": "1.9.1",
                                            "controller-revision-hash": "bdd7b4c8",
                                            "helm.sh/chart": "prometheus-node-exporter-4.47.0",
                                            "pod-template-generation": "1"
                                        },
                                        "annotations": {
                                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                            "prometheus.io/path": "/metrics",
                                            "prometheus.io/port": "9101",
                                            "prometheus.io/scrape": "true"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "DaemonSet",
                                                "name": "dz-prometheus-node-exporter",
                                                "uid": "b8cee21f-6011-4558-8552-3dd63c82463e",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:35Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:annotations": {
                                                            ".": {},
                                                            "f:cluster-autoscaler.kubernetes.io/safe-to-evict": {},
                                                            "f:prometheus.io/path": {},
                                                            "f:prometheus.io/port": {},
                                                            "f:prometheus.io/scrape": {}
                                                        },
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/component": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/managed-by": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:app.kubernetes.io/part-of": {},
                                                            "f:app.kubernetes.io/version": {},
                                                            "f:controller-revision-hash": {},
                                                            "f:helm.sh/chart": {},
                                                            "f:pod-template-generation": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"b8cee21f-6011-4558-8552-3dd63c82463e\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:automountServiceAccountToken": {},
                                                        "f:containers": {
                                                            "k:{\"name\":\"node-exporter\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"HOST_IP\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:hostPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {},
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:readOnlyRootFilesystem": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/host/proc\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/host/root\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:mountPropagation": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/host/sys\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:hostNetwork": {},
                                                        "f:hostPID": {},
                                                        "f:nodeSelector": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:fsGroup": {},
                                                            "f:runAsGroup": {},
                                                            "f:runAsNonRoot": {},
                                                            "f:runAsUser": {}
                                                        },
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"proc\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"root\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"sys\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:36Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.143.217\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "proc",
                                                "hostPath": {
                                                    "path": "/proc",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "sys",
                                                "hostPath": {
                                                    "path": "/sys",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "root",
                                                "hostPath": {
                                                    "path": "/",
                                                    "type": ""
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "node-exporter",
                                                "image": "quay.io/prometheus/node-exporter:v1.9.1",
                                                "args": [
                                                    "--path.procfs=/host/proc",
                                                    "--path.sysfs=/host/sys",
                                                    "--path.rootfs=/host/root",
                                                    "--path.udev.data=/host/root/run/udev/data",
                                                    "--web.listen-address=[$(HOST_IP)]:9101"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "metrics",
                                                        "hostPort": 9101,
                                                        "containerPort": 9101,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "env": [
                                                    {
                                                        "name": "HOST_IP",
                                                        "value": "0.0.0.0"
                                                    }
                                                ],
                                                "resources": {},
                                                "volumeMounts": [
                                                    {
                                                        "name": "proc",
                                                        "readOnly": true,
                                                        "mountPath": "/host/proc"
                                                    },
                                                    {
                                                        "name": "sys",
                                                        "readOnly": true,
                                                        "mountPath": "/host/sys"
                                                    },
                                                    {
                                                        "name": "root",
                                                        "readOnly": true,
                                                        "mountPath": "/host/root",
                                                        "mountPropagation": "HostToContainer"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/",
                                                        "port": 9101,
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/",
                                                        "port": 9101,
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "nodeSelector": {
                                            "kubernetes.io/os": "linux"
                                        },
                                        "serviceAccountName": "dz-prometheus-node-exporter",
                                        "serviceAccount": "dz-prometheus-node-exporter",
                                        "automountServiceAccountToken": false,
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "hostNetwork": true,
                                        "hostPID": true,
                                        "securityContext": {
                                            "runAsUser": 65534,
                                            "runAsGroup": 65534,
                                            "runAsNonRoot": true,
                                            "fsGroup": 65534
                                        },
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchFields": [
                                                                {
                                                                    "key": "metadata.name",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "ip-10-8-143-217.ec2.internal"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/disk-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/memory-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/pid-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unschedulable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/network-unavailable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:36Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:35Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:36Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:36Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:35Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.143.217",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "startTime": "2025-06-11T19:21:35Z",
                                        "containerStatuses": [
                                            {
                                                "name": "node-exporter",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:35Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "quay.io/prometheus/node-exporter:v1.9.1",
                                                "imageID": "quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a",
                                                "containerID": "containerd://12b4bc7fabef1051c071562512e6b0fba70d376b306aa6e8c879638751655e67",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "BestEffort"
                                    }
                                },
                                "devzero-zxporter/dz-prometheus-node-exporter-gcnbc": {
                                    "metadata": {
                                        "name": "dz-prometheus-node-exporter-gcnbc",
                                        "generateName": "dz-prometheus-node-exporter-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "bb133697-685e-4035-b2bf-fd83fa7d4760",
                                        "resourceVersion": "30280",
                                        "creationTimestamp": "2025-06-11T19:21:35Z",
                                        "labels": {
                                            "app.kubernetes.io/component": "metrics",
                                            "app.kubernetes.io/instance": "node-exporter",
                                            "app.kubernetes.io/managed-by": "Helm",
                                            "app.kubernetes.io/name": "dz-prometheus-node-exporter",
                                            "app.kubernetes.io/part-of": "dz-prometheus-node-exporter",
                                            "app.kubernetes.io/version": "1.9.1",
                                            "controller-revision-hash": "bdd7b4c8",
                                            "helm.sh/chart": "prometheus-node-exporter-4.47.0",
                                            "pod-template-generation": "1"
                                        },
                                        "annotations": {
                                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                                            "prometheus.io/path": "/metrics",
                                            "prometheus.io/port": "9101",
                                            "prometheus.io/scrape": "true"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "DaemonSet",
                                                "name": "dz-prometheus-node-exporter",
                                                "uid": "b8cee21f-6011-4558-8552-3dd63c82463e",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:35Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:annotations": {
                                                            ".": {},
                                                            "f:cluster-autoscaler.kubernetes.io/safe-to-evict": {},
                                                            "f:prometheus.io/path": {},
                                                            "f:prometheus.io/port": {},
                                                            "f:prometheus.io/scrape": {}
                                                        },
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/component": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/managed-by": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:app.kubernetes.io/part-of": {},
                                                            "f:app.kubernetes.io/version": {},
                                                            "f:controller-revision-hash": {},
                                                            "f:helm.sh/chart": {},
                                                            "f:pod-template-generation": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"b8cee21f-6011-4558-8552-3dd63c82463e\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:automountServiceAccountToken": {},
                                                        "f:containers": {
                                                            "k:{\"name\":\"node-exporter\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"HOST_IP\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":9101,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:hostPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {},
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:readOnlyRootFilesystem": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/host/proc\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/host/root\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:mountPropagation": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/host/sys\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:hostNetwork": {},
                                                        "f:hostPID": {},
                                                        "f:nodeSelector": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:fsGroup": {},
                                                            "f:runAsGroup": {},
                                                            "f:runAsNonRoot": {},
                                                            "f:runAsUser": {}
                                                        },
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"proc\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"root\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"sys\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:36Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.110.61\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "proc",
                                                "hostPath": {
                                                    "path": "/proc",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "sys",
                                                "hostPath": {
                                                    "path": "/sys",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "root",
                                                "hostPath": {
                                                    "path": "/",
                                                    "type": ""
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "node-exporter",
                                                "image": "quay.io/prometheus/node-exporter:v1.9.1",
                                                "args": [
                                                    "--path.procfs=/host/proc",
                                                    "--path.sysfs=/host/sys",
                                                    "--path.rootfs=/host/root",
                                                    "--path.udev.data=/host/root/run/udev/data",
                                                    "--web.listen-address=[$(HOST_IP)]:9101"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "metrics",
                                                        "hostPort": 9101,
                                                        "containerPort": 9101,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "env": [
                                                    {
                                                        "name": "HOST_IP",
                                                        "value": "0.0.0.0"
                                                    }
                                                ],
                                                "resources": {},
                                                "volumeMounts": [
                                                    {
                                                        "name": "proc",
                                                        "readOnly": true,
                                                        "mountPath": "/host/proc"
                                                    },
                                                    {
                                                        "name": "sys",
                                                        "readOnly": true,
                                                        "mountPath": "/host/sys"
                                                    },
                                                    {
                                                        "name": "root",
                                                        "readOnly": true,
                                                        "mountPath": "/host/root",
                                                        "mountPropagation": "HostToContainer"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/",
                                                        "port": 9101,
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/",
                                                        "port": 9101,
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "nodeSelector": {
                                            "kubernetes.io/os": "linux"
                                        },
                                        "serviceAccountName": "dz-prometheus-node-exporter",
                                        "serviceAccount": "dz-prometheus-node-exporter",
                                        "automountServiceAccountToken": false,
                                        "nodeName": "ip-10-8-110-61.ec2.internal",
                                        "hostNetwork": true,
                                        "hostPID": true,
                                        "securityContext": {
                                            "runAsUser": 65534,
                                            "runAsGroup": 65534,
                                            "runAsNonRoot": true,
                                            "fsGroup": 65534
                                        },
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchFields": [
                                                                {
                                                                    "key": "metadata.name",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "ip-10-8-110-61.ec2.internal"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/disk-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/memory-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/pid-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unschedulable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/network-unavailable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:36Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:35Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:36Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:36Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:35Z"
                                            }
                                        ],
                                        "hostIP": "10.8.110.61",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "podIP": "10.8.110.61",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "startTime": "2025-06-11T19:21:35Z",
                                        "containerStatuses": [
                                            {
                                                "name": "node-exporter",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:36Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "quay.io/prometheus/node-exporter:v1.9.1",
                                                "imageID": "quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a",
                                                "containerID": "containerd://83d59f318756030982bb0603f578882c58fb4d90e7ae09e78ad32a93a91adfe7",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "BestEffort"
                                    }
                                }
                            },
                            "hash": "a831f61b98369d668146966ea3e2c088c3cf2f6d847dddcd1d5480a6348ebc1a"
                        }
                    },
                    "replicaSets": {
                        "devzero-zxporter-controller-manager-56b569d88": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "devzero-zxporter-controller-manager-56b569d88",
                                    "namespace": "devzero-zxporter",
                                    "uid": "5449663b-b45b-415f-a947-55a0c464f4df",
                                    "resourceVersion": "272397",
                                    "generation": 2,
                                    "creationTimestamp": "2025-06-11T19:21:43Z",
                                    "labels": {
                                        "control-plane": "controller-manager",
                                        "pod-template-hash": "56b569d88"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "1",
                                        "deployment.kubernetes.io/max-replicas": "2",
                                        "deployment.kubernetes.io/revision": "1"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "devzero-zxporter-controller-manager",
                                            "uid": "9a3a463a-f767-487d-ab41-76cccfc8c2ae",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T16:05:07Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:control-plane": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"9a3a463a-f767-487d-ab41-76cccfc8c2ae\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:annotations": {
                                                                ".": {},
                                                                "f:kubectl.kubernetes.io/default-container": {}
                                                            },
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:control-plane": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"manager\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/etc/zxporter/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:runAsNonRoot": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        ".": {},
                                                                        "f:defaultMode": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T16:05:08Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:observedGeneration": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 0,
                                    "selector": {
                                        "matchLabels": {
                                            "control-plane": "controller-manager",
                                            "pod-template-hash": "56b569d88"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "control-plane": "controller-manager",
                                                "pod-template-hash": "56b569d88"
                                            },
                                            "annotations": {
                                                "kubectl.kubernetes.io/default-container": "manager"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "devzero-zxporter-env-config",
                                                        "defaultMode": 420
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "manager",
                                                    "image": "remontada007/zxporter:mev",
                                                    "args": [
                                                        "--metrics-bind-address=:8443",
                                                        "--leader-elect",
                                                        "--health-probe-bind-address=:8081"
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "200m",
                                                            "memory": "128Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/zxporter/config"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 15,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 20,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 10,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "devzero-zxporter-controller-manager",
                                            "serviceAccount": "devzero-zxporter-controller-manager",
                                            "securityContext": {
                                                "runAsNonRoot": true
                                            },
                                            "schedulerName": "default-scheduler"
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 0,
                                    "observedGeneration": 2
                                }
                            },
                            "pods": {},
                            "hash": "ef532145972f20a36afd41a74786c66077084609c8040e3d63a90c345f860142"
                        },
                        "devzero-zxporter-controller-manager-645c9b6d64": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "devzero-zxporter-controller-manager-645c9b6d64",
                                    "namespace": "devzero-zxporter",
                                    "uid": "5d2dd27e-fa9e-4f4e-9c71-132a36957565",
                                    "resourceVersion": "293040",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-12T17:53:32Z",
                                    "labels": {
                                        "control-plane": "controller-manager",
                                        "pod-template-hash": "645c9b6d64"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "1",
                                        "deployment.kubernetes.io/max-replicas": "2",
                                        "deployment.kubernetes.io/revision": "5"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "devzero-zxporter-controller-manager",
                                            "uid": "9a3a463a-f767-487d-ab41-76cccfc8c2ae",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T17:53:32Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:control-plane": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"9a3a463a-f767-487d-ab41-76cccfc8c2ae\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:annotations": {
                                                                ".": {},
                                                                "f:kubectl.kubernetes.io/default-container": {}
                                                            },
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:control-plane": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"manager\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/etc/zxporter/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:runAsNonRoot": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        ".": {},
                                                                        "f:defaultMode": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T17:53:42Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:fullyLabeledReplicas": {},
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 1,
                                    "selector": {
                                        "matchLabels": {
                                            "control-plane": "controller-manager",
                                            "pod-template-hash": "645c9b6d64"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "control-plane": "controller-manager",
                                                "pod-template-hash": "645c9b6d64"
                                            },
                                            "annotations": {
                                                "kubectl.kubernetes.io/default-container": "manager"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "devzero-zxporter-env-config",
                                                        "defaultMode": 420
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "manager",
                                                    "image": "remontada007/zxporter:mev4",
                                                    "args": [
                                                        "--metrics-bind-address=:8443",
                                                        "--leader-elect",
                                                        "--health-probe-bind-address=:8081"
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "200m",
                                                            "memory": "128Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/zxporter/config"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 15,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 20,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 10,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "devzero-zxporter-controller-manager",
                                            "serviceAccount": "devzero-zxporter-controller-manager",
                                            "securityContext": {
                                                "runAsNonRoot": true
                                            },
                                            "schedulerName": "default-scheduler"
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 1,
                                    "fullyLabeledReplicas": 1,
                                    "readyReplicas": 1,
                                    "availableReplicas": 1,
                                    "observedGeneration": 1
                                }
                            },
                            "pods": {
                                "devzero-zxporter/devzero-zxporter-controller-manager-645c9b6d64-q2svb": {
                                    "metadata": {
                                        "name": "devzero-zxporter-controller-manager-645c9b6d64-q2svb",
                                        "generateName": "devzero-zxporter-controller-manager-645c9b6d64-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "6c089688-7e50-4672-8cd0-f6ac6e892c9e",
                                        "resourceVersion": "293037",
                                        "creationTimestamp": "2025-06-12T17:53:32Z",
                                        "labels": {
                                            "control-plane": "controller-manager",
                                            "pod-template-hash": "645c9b6d64"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/default-container": "manager"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "devzero-zxporter-controller-manager-645c9b6d64",
                                                "uid": "5d2dd27e-fa9e-4f4e-9c71-132a36957565",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T17:53:32Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:annotations": {
                                                            ".": {},
                                                            "f:kubectl.kubernetes.io/default-container": {}
                                                        },
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:control-plane": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"5d2dd27e-fa9e-4f4e-9c71-132a36957565\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"manager\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:drop": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/etc/zxporter/config\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:runAsNonRoot": {}
                                                        },
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config-volume\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-12T17:53:42Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.135.206\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "config-volume",
                                                "configMap": {
                                                    "name": "devzero-zxporter-env-config",
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-8ln2s",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "manager",
                                                "image": "remontada007/zxporter:mev4",
                                                "args": [
                                                    "--metrics-bind-address=:8443",
                                                    "--leader-elect",
                                                    "--health-probe-bind-address=:8081"
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "200m",
                                                        "memory": "128Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "readOnly": true,
                                                        "mountPath": "/etc/zxporter/config"
                                                    },
                                                    {
                                                        "name": "kube-api-access-8ln2s",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/healthz",
                                                        "port": 8081,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 15,
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 20,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/readyz",
                                                        "port": 8081,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 5,
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 10,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "devzero-zxporter-controller-manager",
                                        "serviceAccount": "devzero-zxporter-controller-manager",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {
                                            "runAsNonRoot": true
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:34Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:32Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:42Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:42Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-12T17:53:32Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.135.206",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.135.206"
                                            }
                                        ],
                                        "startTime": "2025-06-12T17:53:32Z",
                                        "containerStatuses": [
                                            {
                                                "name": "manager",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-12T17:53:34Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "docker.io/remontada007/zxporter:mev4",
                                                "imageID": "docker.io/remontada007/zxporter@sha256:2c97dc1b86765d03b4cd32548ab2a545d1fb943c3791335c6b1b90266a1b2f13",
                                                "containerID": "containerd://1bd953686b1c580506b764f9050d224109ed44744e6008063022dfeb391c5f9b",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "e227c7e7226e99eda8b83654fda032edb4e0669adb3f77d07c08f82884350177"
                        },
                        "devzero-zxporter-controller-manager-65f85f8cd9": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "devzero-zxporter-controller-manager-65f85f8cd9",
                                    "namespace": "devzero-zxporter",
                                    "uid": "20e34d29-1a25-49fd-92a4-746a04b119ad",
                                    "resourceVersion": "293050",
                                    "generation": 2,
                                    "creationTimestamp": "2025-06-12T16:59:59Z",
                                    "labels": {
                                        "control-plane": "controller-manager",
                                        "pod-template-hash": "65f85f8cd9"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "1",
                                        "deployment.kubernetes.io/max-replicas": "2",
                                        "deployment.kubernetes.io/revision": "4"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "devzero-zxporter-controller-manager",
                                            "uid": "9a3a463a-f767-487d-ab41-76cccfc8c2ae",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T17:53:42Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:control-plane": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"9a3a463a-f767-487d-ab41-76cccfc8c2ae\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:annotations": {
                                                                ".": {},
                                                                "f:kubectl.kubernetes.io/default-container": {}
                                                            },
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:control-plane": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"manager\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/etc/zxporter/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:runAsNonRoot": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        ".": {},
                                                                        "f:defaultMode": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T17:53:42Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:observedGeneration": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 0,
                                    "selector": {
                                        "matchLabels": {
                                            "control-plane": "controller-manager",
                                            "pod-template-hash": "65f85f8cd9"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "control-plane": "controller-manager",
                                                "pod-template-hash": "65f85f8cd9"
                                            },
                                            "annotations": {
                                                "kubectl.kubernetes.io/default-container": "manager"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "devzero-zxporter-env-config",
                                                        "defaultMode": 420
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "manager",
                                                    "image": "remontada007/zxporter:mev3",
                                                    "args": [
                                                        "--metrics-bind-address=:8443",
                                                        "--leader-elect",
                                                        "--health-probe-bind-address=:8081"
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "200m",
                                                            "memory": "128Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/zxporter/config"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 15,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 20,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 10,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "devzero-zxporter-controller-manager",
                                            "serviceAccount": "devzero-zxporter-controller-manager",
                                            "securityContext": {
                                                "runAsNonRoot": true
                                            },
                                            "schedulerName": "default-scheduler"
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 0,
                                    "observedGeneration": 2
                                }
                            },
                            "pods": {},
                            "hash": "899e88528bf6ef5e0d2091e1f254d10e6182141a2426884dd1c6aeb39066e706"
                        },
                        "devzero-zxporter-controller-manager-795dfd5858": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "devzero-zxporter-controller-manager-795dfd5858",
                                    "namespace": "devzero-zxporter",
                                    "uid": "4bf1cba9-7efd-4ab7-8d19-caee883c0506",
                                    "resourceVersion": "282562",
                                    "generation": 2,
                                    "creationTimestamp": "2025-06-12T16:34:36Z",
                                    "labels": {
                                        "control-plane": "controller-manager",
                                        "pod-template-hash": "795dfd5858"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "1",
                                        "deployment.kubernetes.io/max-replicas": "2",
                                        "deployment.kubernetes.io/revision": "3"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "devzero-zxporter-controller-manager",
                                            "uid": "9a3a463a-f767-487d-ab41-76cccfc8c2ae",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T17:00:09Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:control-plane": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"9a3a463a-f767-487d-ab41-76cccfc8c2ae\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:annotations": {
                                                                ".": {},
                                                                "f:kubectl.kubernetes.io/default-container": {}
                                                            },
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:control-plane": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"manager\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/etc/zxporter/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:runAsNonRoot": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        ".": {},
                                                                        "f:defaultMode": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T17:00:09Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:observedGeneration": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 0,
                                    "selector": {
                                        "matchLabels": {
                                            "control-plane": "controller-manager",
                                            "pod-template-hash": "795dfd5858"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "control-plane": "controller-manager",
                                                "pod-template-hash": "795dfd5858"
                                            },
                                            "annotations": {
                                                "kubectl.kubernetes.io/default-container": "manager"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "devzero-zxporter-env-config",
                                                        "defaultMode": 420
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "manager",
                                                    "image": "remontada007/zxporter:mev2",
                                                    "args": [
                                                        "--metrics-bind-address=:8443",
                                                        "--leader-elect",
                                                        "--health-probe-bind-address=:8081"
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "200m",
                                                            "memory": "128Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/zxporter/config"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 15,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 20,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 10,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "devzero-zxporter-controller-manager",
                                            "serviceAccount": "devzero-zxporter-controller-manager",
                                            "securityContext": {
                                                "runAsNonRoot": true
                                            },
                                            "schedulerName": "default-scheduler"
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 0,
                                    "observedGeneration": 2
                                }
                            },
                            "pods": {},
                            "hash": "14f29fef3609fd2a7cf4ec94afc547c3c2bbfa45006e3caec67217d8d3a7d6b5"
                        },
                        "devzero-zxporter-controller-manager-f896bf559": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "devzero-zxporter-controller-manager-f896bf559",
                                    "namespace": "devzero-zxporter",
                                    "uid": "51599bd5-dbe2-4cfe-8328-5caedad5c1d7",
                                    "resourceVersion": "277585",
                                    "generation": 2,
                                    "creationTimestamp": "2025-06-12T16:04:57Z",
                                    "labels": {
                                        "control-plane": "controller-manager",
                                        "pod-template-hash": "f896bf559"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "1",
                                        "deployment.kubernetes.io/max-replicas": "2",
                                        "deployment.kubernetes.io/revision": "2"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "devzero-zxporter-controller-manager",
                                            "uid": "9a3a463a-f767-487d-ab41-76cccfc8c2ae",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T16:34:46Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:control-plane": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"9a3a463a-f767-487d-ab41-76cccfc8c2ae\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:annotations": {
                                                                ".": {},
                                                                "f:kubectl.kubernetes.io/default-container": {}
                                                            },
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:control-plane": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"manager\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/etc/zxporter/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:runAsNonRoot": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        ".": {},
                                                                        "f:defaultMode": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-12T16:34:46Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:observedGeneration": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 0,
                                    "selector": {
                                        "matchLabels": {
                                            "control-plane": "controller-manager",
                                            "pod-template-hash": "f896bf559"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "control-plane": "controller-manager",
                                                "pod-template-hash": "f896bf559"
                                            },
                                            "annotations": {
                                                "kubectl.kubernetes.io/default-container": "manager"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "devzero-zxporter-env-config",
                                                        "defaultMode": 420
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "manager",
                                                    "image": "remontada007/zxporter:mev1",
                                                    "args": [
                                                        "--metrics-bind-address=:8443",
                                                        "--leader-elect",
                                                        "--health-probe-bind-address=:8081"
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "200m",
                                                            "memory": "128Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/zxporter/config"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 15,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 20,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 10,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "devzero-zxporter-controller-manager",
                                            "serviceAccount": "devzero-zxporter-controller-manager",
                                            "securityContext": {
                                                "runAsNonRoot": true
                                            },
                                            "schedulerName": "default-scheduler"
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 0,
                                    "observedGeneration": 2
                                }
                            },
                            "pods": {},
                            "hash": "823da1f1cd747b83e56ce7d210017184c4b1b5ec9fbf5a132df46e01bee895b1"
                        },
                        "dz-metrics-server-7b7f7bf57b": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "dz-metrics-server-7b7f7bf57b",
                                    "namespace": "devzero-zxporter",
                                    "uid": "ed8910e7-24ae-476d-92e4-9fa21d07dcd4",
                                    "resourceVersion": "30451",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T19:21:46Z",
                                    "labels": {
                                        "app.kubernetes.io/instance": "metrics-server",
                                        "app.kubernetes.io/name": "dz-metrics-server",
                                        "pod-template-hash": "7b7f7bf57b"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "1",
                                        "deployment.kubernetes.io/max-replicas": "2",
                                        "deployment.kubernetes.io/revision": "1"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "dz-metrics-server",
                                            "uid": "ed3f3976-d55e-4997-a9bc-57b973521cb6",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:46Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app.kubernetes.io/instance": {},
                                                        "f:app.kubernetes.io/name": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"ed3f3976-d55e-4997-a9bc-57b973521cb6\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app.kubernetes.io/instance": {},
                                                                "f:app.kubernetes.io/name": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"metrics-server\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        },
                                                                        "f:readOnlyRootFilesystem": {},
                                                                        "f:runAsNonRoot": {},
                                                                        "f:runAsUser": {},
                                                                        "f:seccompProfile": {
                                                                            ".": {},
                                                                            "f:type": {}
                                                                        }
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/tmp\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:priorityClassName": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {},
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"tmp\"}": {
                                                                    ".": {},
                                                                    "f:emptyDir": {},
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:22:07Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:fullyLabeledReplicas": {},
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 1,
                                    "selector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/instance": "metrics-server",
                                            "app.kubernetes.io/name": "dz-metrics-server",
                                            "pod-template-hash": "7b7f7bf57b"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app.kubernetes.io/instance": "metrics-server",
                                                "app.kubernetes.io/name": "dz-metrics-server",
                                                "pod-template-hash": "7b7f7bf57b"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "tmp",
                                                    "emptyDir": {}
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "metrics-server",
                                                    "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2",
                                                    "args": [
                                                        "--secure-port=10250",
                                                        "--cert-dir=/tmp",
                                                        "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                                        "--kubelet-use-node-status-port",
                                                        "--metric-resolution=15s",
                                                        "--kubelet-insecure-tls"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "name": "https",
                                                            "containerPort": 10250,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "100m",
                                                            "memory": "200Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "tmp",
                                                            "mountPath": "/tmp"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/livez",
                                                            "port": "https",
                                                            "scheme": "HTTPS"
                                                        },
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": "https",
                                                            "scheme": "HTTPS"
                                                        },
                                                        "initialDelaySeconds": 20,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "runAsUser": 1000,
                                                        "runAsNonRoot": true,
                                                        "readOnlyRootFilesystem": true,
                                                        "allowPrivilegeEscalation": false,
                                                        "seccompProfile": {
                                                            "type": "RuntimeDefault"
                                                        }
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "dz-metrics-server",
                                            "serviceAccount": "dz-metrics-server",
                                            "securityContext": {},
                                            "schedulerName": "default-scheduler",
                                            "priorityClassName": "system-cluster-critical"
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 1,
                                    "fullyLabeledReplicas": 1,
                                    "readyReplicas": 1,
                                    "availableReplicas": 1,
                                    "observedGeneration": 1
                                }
                            },
                            "pods": {
                                "devzero-zxporter/dz-metrics-server-7b7f7bf57b-vm88j": {
                                    "metadata": {
                                        "name": "dz-metrics-server-7b7f7bf57b-vm88j",
                                        "generateName": "dz-metrics-server-7b7f7bf57b-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "03a6b7dc-c1fb-46c8-84b6-4dd69778e1d5",
                                        "resourceVersion": "30448",
                                        "creationTimestamp": "2025-06-11T19:21:46Z",
                                        "labels": {
                                            "app.kubernetes.io/instance": "metrics-server",
                                            "app.kubernetes.io/name": "dz-metrics-server",
                                            "pod-template-hash": "7b7f7bf57b"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "dz-metrics-server-7b7f7bf57b",
                                                "uid": "ed8910e7-24ae-476d-92e4-9fa21d07dcd4",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:46Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"ed8910e7-24ae-476d-92e4-9fa21d07dcd4\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"metrics-server\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:drop": {}
                                                                    },
                                                                    "f:readOnlyRootFilesystem": {},
                                                                    "f:runAsNonRoot": {},
                                                                    "f:runAsUser": {},
                                                                    "f:seccompProfile": {
                                                                        ".": {},
                                                                        "f:type": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"tmp\"}": {
                                                                ".": {},
                                                                "f:emptyDir": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:22:07Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.131.66\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "tmp",
                                                "emptyDir": {}
                                            },
                                            {
                                                "name": "kube-api-access-jwzjp",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "metrics-server",
                                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2",
                                                "args": [
                                                    "--secure-port=10250",
                                                    "--cert-dir=/tmp",
                                                    "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                                    "--kubelet-use-node-status-port",
                                                    "--metric-resolution=15s",
                                                    "--kubelet-insecure-tls"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "https",
                                                        "containerPort": 10250,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "100m",
                                                        "memory": "200Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "tmp",
                                                        "mountPath": "/tmp"
                                                    },
                                                    {
                                                        "name": "kube-api-access-jwzjp",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/livez",
                                                        "port": "https",
                                                        "scheme": "HTTPS"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/readyz",
                                                        "port": "https",
                                                        "scheme": "HTTPS"
                                                    },
                                                    "initialDelaySeconds": 20,
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "runAsUser": 1000,
                                                    "runAsNonRoot": true,
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false,
                                                    "seccompProfile": {
                                                        "type": "RuntimeDefault"
                                                    }
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "dz-metrics-server",
                                        "serviceAccount": "dz-metrics-server",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {},
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priorityClassName": "system-cluster-critical",
                                        "priority": 2000000000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:48Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:46Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:22:07Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:22:07Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:46Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.131.66",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.131.66"
                                            }
                                        ],
                                        "startTime": "2025-06-11T19:21:46Z",
                                        "containerStatuses": [
                                            {
                                                "name": "metrics-server",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:47Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.7.2",
                                                "imageID": "registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9",
                                                "containerID": "containerd://fd71891a678015268ba3f17ac18394fdc561d86ae8b789b586fab2d0327c5abf",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "8b8618824c569505d3afe97c4d2a6dad10f50cf33540d8336d6ce5968f0c48ab"
                        },
                        "prometheus-dz-prometheus-server-5cc6d954cd": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "prometheus-dz-prometheus-server-5cc6d954cd",
                                    "namespace": "devzero-zxporter",
                                    "uid": "c2cf5038-ff1d-4259-bfab-f26ceba89449",
                                    "resourceVersion": "30460",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T19:21:33Z",
                                    "labels": {
                                        "app.kubernetes.io/component": "server",
                                        "app.kubernetes.io/instance": "prometheus",
                                        "app.kubernetes.io/name": "dz-prometheus",
                                        "app.kubernetes.io/part-of": "dz-prometheus",
                                        "app.kubernetes.io/version": "v3.4.1",
                                        "helm.sh/chart": "prometheus-27.20.0",
                                        "pod-template-hash": "5cc6d954cd"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "1",
                                        "deployment.kubernetes.io/max-replicas": "1",
                                        "deployment.kubernetes.io/revision": "1"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "prometheus-dz-prometheus-server",
                                            "uid": "5668c34f-3a2f-431a-9228-8671cad92340",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:33Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app.kubernetes.io/component": {},
                                                        "f:app.kubernetes.io/instance": {},
                                                        "f:app.kubernetes.io/name": {},
                                                        "f:app.kubernetes.io/part-of": {},
                                                        "f:app.kubernetes.io/version": {},
                                                        "f:helm.sh/chart": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"5668c34f-3a2f-431a-9228-8671cad92340\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app.kubernetes.io/component": {},
                                                                "f:app.kubernetes.io/instance": {},
                                                                "f:app.kubernetes.io/name": {},
                                                                "f:app.kubernetes.io/part-of": {},
                                                                "f:app.kubernetes.io/version": {},
                                                                "f:helm.sh/chart": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:containers": {
                                                                "k:{\"name\":\"dz-prometheus-server\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":9090,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {},
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/data\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/etc/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        }
                                                                    }
                                                                },
                                                                "k:{\"name\":\"dz-prometheus-server-configmap-reload\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {},
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/etc/config\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:enableServiceLinks": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:fsGroup": {},
                                                                "f:runAsGroup": {},
                                                                "f:runAsNonRoot": {},
                                                                "f:runAsUser": {}
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        ".": {},
                                                                        "f:defaultMode": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"storage-volume\"}": {
                                                                    ".": {},
                                                                    "f:emptyDir": {},
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:22:08Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:fullyLabeledReplicas": {},
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 1,
                                    "selector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/component": "server",
                                            "app.kubernetes.io/instance": "prometheus",
                                            "app.kubernetes.io/name": "dz-prometheus",
                                            "pod-template-hash": "5cc6d954cd"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app.kubernetes.io/component": "server",
                                                "app.kubernetes.io/instance": "prometheus",
                                                "app.kubernetes.io/name": "dz-prometheus",
                                                "app.kubernetes.io/part-of": "dz-prometheus",
                                                "app.kubernetes.io/version": "v3.4.1",
                                                "helm.sh/chart": "prometheus-27.20.0",
                                                "pod-template-hash": "5cc6d954cd"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "prometheus-dz-prometheus-server",
                                                        "defaultMode": 420
                                                    }
                                                },
                                                {
                                                    "name": "storage-volume",
                                                    "emptyDir": {}
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "dz-prometheus-server-configmap-reload",
                                                    "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0",
                                                    "args": [
                                                        "--watched-dir=/etc/config",
                                                        "--listen-address=0.0.0.0:8080",
                                                        "--reload-url=http://127.0.0.1:9090/-/reload"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "name": "metrics",
                                                            "containerPort": 8080,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {},
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/config"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": "metrics",
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 2,
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/healthz",
                                                            "port": "metrics",
                                                            "scheme": "HTTP"
                                                        },
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent"
                                                },
                                                {
                                                    "name": "dz-prometheus-server",
                                                    "image": "quay.io/prometheus/prometheus:v3.4.1",
                                                    "args": [
                                                        "--storage.tsdb.retention.time=15d",
                                                        "--config.file=/etc/config/prometheus.yml",
                                                        "--storage.tsdb.path=/data",
                                                        "--web.console.libraries=/etc/prometheus/console_libraries",
                                                        "--web.console.templates=/etc/prometheus/consoles",
                                                        "--web.enable-lifecycle"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "containerPort": 9090,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {},
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "mountPath": "/etc/config"
                                                        },
                                                        {
                                                            "name": "storage-volume",
                                                            "mountPath": "/data"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/-/healthy",
                                                            "port": 9090,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 30,
                                                        "timeoutSeconds": 10,
                                                        "periodSeconds": 15,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/-/ready",
                                                            "port": 9090,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 30,
                                                        "timeoutSeconds": 4,
                                                        "periodSeconds": 5,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent"
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 300,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "prometheus-dz-prometheus-server",
                                            "serviceAccount": "prometheus-dz-prometheus-server",
                                            "securityContext": {
                                                "runAsUser": 65534,
                                                "runAsGroup": 65534,
                                                "runAsNonRoot": true,
                                                "fsGroup": 65534
                                            },
                                            "schedulerName": "default-scheduler",
                                            "enableServiceLinks": true
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 1,
                                    "fullyLabeledReplicas": 1,
                                    "readyReplicas": 1,
                                    "availableReplicas": 1,
                                    "observedGeneration": 1
                                }
                            },
                            "pods": {
                                "devzero-zxporter/prometheus-dz-prometheus-server-5cc6d954cd-vpp6q": {
                                    "metadata": {
                                        "name": "prometheus-dz-prometheus-server-5cc6d954cd-vpp6q",
                                        "generateName": "prometheus-dz-prometheus-server-5cc6d954cd-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "be6a8344-1fe6-491c-8964-81f29d2c9157",
                                        "resourceVersion": "30457",
                                        "creationTimestamp": "2025-06-11T19:21:33Z",
                                        "labels": {
                                            "app.kubernetes.io/component": "server",
                                            "app.kubernetes.io/instance": "prometheus",
                                            "app.kubernetes.io/name": "dz-prometheus",
                                            "app.kubernetes.io/part-of": "dz-prometheus",
                                            "app.kubernetes.io/version": "v3.4.1",
                                            "helm.sh/chart": "prometheus-27.20.0",
                                            "pod-template-hash": "5cc6d954cd"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "prometheus-dz-prometheus-server-5cc6d954cd",
                                                "uid": "c2cf5038-ff1d-4259-bfab-f26ceba89449",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:33Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/component": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:app.kubernetes.io/part-of": {},
                                                            "f:app.kubernetes.io/version": {},
                                                            "f:helm.sh/chart": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"c2cf5038-ff1d-4259-bfab-f26ceba89449\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"dz-prometheus-server\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":9090,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {},
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/data\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/etc/config\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"dz-prometheus-server-configmap-reload\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {},
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/etc/config\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:fsGroup": {},
                                                            "f:runAsGroup": {},
                                                            "f:runAsNonRoot": {},
                                                            "f:runAsUser": {}
                                                        },
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config-volume\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"storage-volume\"}": {
                                                                ".": {},
                                                                "f:emptyDir": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:22:08Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.136.124\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "config-volume",
                                                "configMap": {
                                                    "name": "prometheus-dz-prometheus-server",
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "storage-volume",
                                                "emptyDir": {}
                                            },
                                            {
                                                "name": "kube-api-access-qm9zv",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "dz-prometheus-server-configmap-reload",
                                                "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0",
                                                "args": [
                                                    "--watched-dir=/etc/config",
                                                    "--listen-address=0.0.0.0:8080",
                                                    "--reload-url=http://127.0.0.1:9090/-/reload"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "metrics",
                                                        "containerPort": 8080,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {},
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "readOnly": true,
                                                        "mountPath": "/etc/config"
                                                    },
                                                    {
                                                        "name": "kube-api-access-qm9zv",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/healthz",
                                                        "port": "metrics",
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 2,
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/healthz",
                                                        "port": "metrics",
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent"
                                            },
                                            {
                                                "name": "dz-prometheus-server",
                                                "image": "quay.io/prometheus/prometheus:v3.4.1",
                                                "args": [
                                                    "--storage.tsdb.retention.time=15d",
                                                    "--config.file=/etc/config/prometheus.yml",
                                                    "--storage.tsdb.path=/data",
                                                    "--web.console.libraries=/etc/prometheus/console_libraries",
                                                    "--web.console.templates=/etc/prometheus/consoles",
                                                    "--web.enable-lifecycle"
                                                ],
                                                "ports": [
                                                    {
                                                        "containerPort": 9090,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {},
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "mountPath": "/etc/config"
                                                    },
                                                    {
                                                        "name": "storage-volume",
                                                        "mountPath": "/data"
                                                    },
                                                    {
                                                        "name": "kube-api-access-qm9zv",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/-/healthy",
                                                        "port": 9090,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 30,
                                                    "timeoutSeconds": 10,
                                                    "periodSeconds": 15,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/-/ready",
                                                        "port": 9090,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 30,
                                                    "timeoutSeconds": 4,
                                                    "periodSeconds": 5,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent"
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 300,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "prometheus-dz-prometheus-server",
                                        "serviceAccount": "prometheus-dz-prometheus-server",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {
                                            "runAsUser": 65534,
                                            "runAsGroup": 65534,
                                            "runAsNonRoot": true,
                                            "fsGroup": 65534
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:34Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:33Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:22:08Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:22:08Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:33Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.136.124",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.136.124"
                                            }
                                        ],
                                        "startTime": "2025-06-11T19:21:33Z",
                                        "containerStatuses": [
                                            {
                                                "name": "dz-prometheus-server",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:34Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "quay.io/prometheus/prometheus:v3.4.1",
                                                "imageID": "quay.io/prometheus/prometheus@sha256:9abc6cf6aea7710d163dbb28d8eeb7dc5baef01e38fa4cd146a406dd9f07f70d",
                                                "containerID": "containerd://769012eac4912054933443b45b45343eca722e3ff6b61a84cc060a79fd4986f6",
                                                "started": true
                                            },
                                            {
                                                "name": "dz-prometheus-server-configmap-reload",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:33Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.83.0",
                                                "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:78aec597d87aa2b4ba947ab9190538dae93a58a67b8e930aefea1086534b02ef",
                                                "containerID": "containerd://9972216f1ff2538758f7983c33bdba51c84cd470e5399847143e8f3d7380d8d1",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "BestEffort"
                                    }
                                }
                            },
                            "hash": "31d6207f5448d6f19aeac0ba9ecadd6792f01688b9595547a9a45bb7e5a98473"
                        },
                        "prometheus-kube-state-metrics-57554884b": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "prometheus-kube-state-metrics-57554884b",
                                    "namespace": "devzero-zxporter",
                                    "uid": "33984339-e1c9-4a92-8b2e-4b3c829ee2a2",
                                    "resourceVersion": "30314",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T19:21:32Z",
                                    "labels": {
                                        "app.kubernetes.io/component": "metrics",
                                        "app.kubernetes.io/instance": "prometheus",
                                        "app.kubernetes.io/managed-by": "Helm",
                                        "app.kubernetes.io/name": "kube-state-metrics",
                                        "app.kubernetes.io/part-of": "kube-state-metrics",
                                        "app.kubernetes.io/version": "2.15.0",
                                        "helm.sh/chart": "kube-state-metrics-5.33.2",
                                        "pod-template-hash": "57554884b"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "1",
                                        "deployment.kubernetes.io/max-replicas": "2",
                                        "deployment.kubernetes.io/revision": "1"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "prometheus-kube-state-metrics",
                                            "uid": "3499f592-ad96-4660-9084-bf534fc296fb",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:32Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:app.kubernetes.io/component": {},
                                                        "f:app.kubernetes.io/instance": {},
                                                        "f:app.kubernetes.io/managed-by": {},
                                                        "f:app.kubernetes.io/name": {},
                                                        "f:app.kubernetes.io/part-of": {},
                                                        "f:app.kubernetes.io/version": {},
                                                        "f:helm.sh/chart": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"3499f592-ad96-4660-9084-bf534fc296fb\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:app.kubernetes.io/component": {},
                                                                "f:app.kubernetes.io/instance": {},
                                                                "f:app.kubernetes.io/managed-by": {},
                                                                "f:app.kubernetes.io/name": {},
                                                                "f:app.kubernetes.io/part-of": {},
                                                                "f:app.kubernetes.io/version": {},
                                                                "f:helm.sh/chart": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:automountServiceAccountToken": {},
                                                            "f:containers": {
                                                                "k:{\"name\":\"kube-state-metrics\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {},
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:drop": {}
                                                                        },
                                                                        "f:readOnlyRootFilesystem": {}
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {}
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {
                                                                ".": {},
                                                                "f:fsGroup": {},
                                                                "f:runAsGroup": {},
                                                                "f:runAsNonRoot": {},
                                                                "f:runAsUser": {},
                                                                "f:seccompProfile": {
                                                                    ".": {},
                                                                    "f:type": {}
                                                                }
                                                            },
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {}
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T19:21:42Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:fullyLabeledReplicas": {},
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 1,
                                    "selector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/instance": "prometheus",
                                            "app.kubernetes.io/name": "kube-state-metrics",
                                            "pod-template-hash": "57554884b"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app.kubernetes.io/component": "metrics",
                                                "app.kubernetes.io/instance": "prometheus",
                                                "app.kubernetes.io/managed-by": "Helm",
                                                "app.kubernetes.io/name": "kube-state-metrics",
                                                "app.kubernetes.io/part-of": "kube-state-metrics",
                                                "app.kubernetes.io/version": "2.15.0",
                                                "helm.sh/chart": "kube-state-metrics-5.33.2",
                                                "pod-template-hash": "57554884b"
                                            }
                                        },
                                        "spec": {
                                            "containers": [
                                                {
                                                    "name": "kube-state-metrics",
                                                    "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0",
                                                    "args": [
                                                        "--port=8080",
                                                        "--resources=nodes"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "name": "http",
                                                            "containerPort": 8080,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {},
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/livez",
                                                            "port": 8080,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 5,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/readyz",
                                                            "port": 8081,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 5,
                                                        "timeoutSeconds": 5,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "readOnlyRootFilesystem": true,
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "prometheus-kube-state-metrics",
                                            "serviceAccount": "prometheus-kube-state-metrics",
                                            "automountServiceAccountToken": true,
                                            "securityContext": {
                                                "runAsUser": 65534,
                                                "runAsGroup": 65534,
                                                "runAsNonRoot": true,
                                                "fsGroup": 65534,
                                                "seccompProfile": {
                                                    "type": "RuntimeDefault"
                                                }
                                            },
                                            "schedulerName": "default-scheduler"
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 1,
                                    "fullyLabeledReplicas": 1,
                                    "readyReplicas": 1,
                                    "availableReplicas": 1,
                                    "observedGeneration": 1
                                }
                            },
                            "pods": {
                                "devzero-zxporter/prometheus-kube-state-metrics-57554884b-mgs5b": {
                                    "metadata": {
                                        "name": "prometheus-kube-state-metrics-57554884b-mgs5b",
                                        "generateName": "prometheus-kube-state-metrics-57554884b-",
                                        "namespace": "devzero-zxporter",
                                        "uid": "0d5fcb4d-3be1-49cb-9e5f-4bedd0468073",
                                        "resourceVersion": "30311",
                                        "creationTimestamp": "2025-06-11T19:21:32Z",
                                        "labels": {
                                            "app.kubernetes.io/component": "metrics",
                                            "app.kubernetes.io/instance": "prometheus",
                                            "app.kubernetes.io/managed-by": "Helm",
                                            "app.kubernetes.io/name": "kube-state-metrics",
                                            "app.kubernetes.io/part-of": "kube-state-metrics",
                                            "app.kubernetes.io/version": "2.15.0",
                                            "helm.sh/chart": "kube-state-metrics-5.33.2",
                                            "pod-template-hash": "57554884b"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "prometheus-kube-state-metrics-57554884b",
                                                "uid": "33984339-e1c9-4a92-8b2e-4b3c829ee2a2",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:32Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/component": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/managed-by": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:app.kubernetes.io/part-of": {},
                                                            "f:app.kubernetes.io/version": {},
                                                            "f:helm.sh/chart": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"33984339-e1c9-4a92-8b2e-4b3c829ee2a2\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:automountServiceAccountToken": {},
                                                        "f:containers": {
                                                            "k:{\"name\":\"kube-state-metrics\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {},
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:drop": {}
                                                                    },
                                                                    "f:readOnlyRootFilesystem": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {}
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:fsGroup": {},
                                                            "f:runAsGroup": {},
                                                            "f:runAsNonRoot": {},
                                                            "f:runAsUser": {},
                                                            "f:seccompProfile": {
                                                                ".": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {}
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T19:21:42Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.137.201\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "kube-api-access-j78c8",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "kube-state-metrics",
                                                "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0",
                                                "args": [
                                                    "--port=8080",
                                                    "--resources=nodes"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "http",
                                                        "containerPort": 8080,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {},
                                                "volumeMounts": [
                                                    {
                                                        "name": "kube-api-access-j78c8",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/livez",
                                                        "port": 8080,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 5,
                                                    "timeoutSeconds": 5,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/readyz",
                                                        "port": 8081,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 5,
                                                    "timeoutSeconds": 5,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "prometheus-kube-state-metrics",
                                        "serviceAccount": "prometheus-kube-state-metrics",
                                        "automountServiceAccountToken": true,
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "securityContext": {
                                            "runAsUser": 65534,
                                            "runAsGroup": 65534,
                                            "runAsNonRoot": true,
                                            "fsGroup": 65534,
                                            "seccompProfile": {
                                                "type": "RuntimeDefault"
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priority": 0,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:34Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:32Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:42Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:42Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T19:21:32Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.137.201",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.137.201"
                                            }
                                        ],
                                        "startTime": "2025-06-11T19:21:32Z",
                                        "containerStatuses": [
                                            {
                                                "name": "kube-state-metrics",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T19:21:33Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0",
                                                "imageID": "registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:db384bf43222b066c378e77027a675d4cd9911107adba46c2922b3a55e10d6fb",
                                                "containerID": "containerd://c1585c6ac7a65a5cbafca65fd83bfc3d830ea4c0e15eb795b6659ffe62f4373c",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "BestEffort"
                                    }
                                }
                            },
                            "hash": "c3d6ab983ed3e9d7c7e328ae226b200cf8372417a44ef376bec9c96601fda6d3"
                        }
                    },
                    "services": {
                        "devzero-zxporter-controller-manager-metrics-service": {
                            "metadata": {
                                "name": "devzero-zxporter-controller-manager-metrics-service",
                                "namespace": "devzero-zxporter",
                                "uid": "67ded199-62d1-4f72-9d19-bf9078af5368",
                                "resourceVersion": "30304",
                                "creationTimestamp": "2025-06-11T19:21:41Z",
                                "labels": {
                                    "app.kubernetes.io/managed-by": "kustomize",
                                    "app.kubernetes.io/name": "devzero-zxporter",
                                    "control-plane": "controller-manager"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/managed-by\":\"kustomize\",\"app.kubernetes.io/name\":\"devzero-zxporter\",\"control-plane\":\"controller-manager\"},\"name\":\"devzero-zxporter-controller-manager-metrics-service\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":8443,\"protocol\":\"TCP\",\"targetPort\":8443}],\"selector\":{\"control-plane\":\"controller-manager\"}}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:41Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:control-plane": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:internalTrafficPolicy": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"port\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {},
                                                        "f:targetPort": {}
                                                    }
                                                },
                                                "f:selector": {},
                                                "f:sessionAffinity": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "name": "https",
                                        "protocol": "TCP",
                                        "port": 8443,
                                        "targetPort": 8443
                                    }
                                ],
                                "selector": {
                                    "control-plane": "controller-manager"
                                },
                                "clusterIP": "172.20.36.211",
                                "clusterIPs": [
                                    "172.20.36.211"
                                ],
                                "type": "ClusterIP",
                                "sessionAffinity": "None",
                                "ipFamilies": [
                                    "IPv4"
                                ],
                                "ipFamilyPolicy": "SingleStack",
                                "internalTrafficPolicy": "Cluster"
                            },
                            "status": {
                                "loadBalancer": {}
                            }
                        },
                        "dz-metrics-server": {
                            "metadata": {
                                "name": "dz-metrics-server",
                                "namespace": "devzero-zxporter",
                                "uid": "19e87528-d790-4f94-b6d7-dfdda8f64667",
                                "resourceVersion": "30352",
                                "creationTimestamp": "2025-06-11T19:21:46Z",
                                "labels": {
                                    "app.kubernetes.io/instance": "metrics-server",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "dz-metrics-server",
                                    "app.kubernetes.io/version": "0.7.2",
                                    "helm.sh/chart": "metrics-server-3.12.2"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-metrics-server\",\"app.kubernetes.io/version\":\"0.7.2\",\"helm.sh/chart\":\"metrics-server-3.12.2\"},\"name\":\"dz-metrics-server\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"ports\":[{\"appProtocol\":\"https\",\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/name\":\"dz-metrics-server\"},\"type\":\"ClusterIP\"}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:46Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:internalTrafficPolicy": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:appProtocol": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {},
                                                        "f:targetPort": {}
                                                    }
                                                },
                                                "f:selector": {},
                                                "f:sessionAffinity": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "name": "https",
                                        "protocol": "TCP",
                                        "appProtocol": "https",
                                        "port": 443,
                                        "targetPort": "https"
                                    }
                                ],
                                "selector": {
                                    "app.kubernetes.io/instance": "metrics-server",
                                    "app.kubernetes.io/name": "dz-metrics-server"
                                },
                                "clusterIP": "172.20.240.125",
                                "clusterIPs": [
                                    "172.20.240.125"
                                ],
                                "type": "ClusterIP",
                                "sessionAffinity": "None",
                                "ipFamilies": [
                                    "IPv4"
                                ],
                                "ipFamilyPolicy": "SingleStack",
                                "internalTrafficPolicy": "Cluster"
                            },
                            "status": {
                                "loadBalancer": {}
                            }
                        },
                        "dz-prometheus-node-exporter": {
                            "metadata": {
                                "name": "dz-prometheus-node-exporter",
                                "namespace": "devzero-zxporter",
                                "uid": "7fbdd745-f2b6-4076-bdd7-54874dd43139",
                                "resourceVersion": "30247",
                                "creationTimestamp": "2025-06-11T19:21:34Z",
                                "labels": {
                                    "app.kubernetes.io/component": "metrics",
                                    "app.kubernetes.io/instance": "node-exporter",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/part-of": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/version": "1.9.1",
                                    "helm.sh/chart": "prometheus-node-exporter-4.47.0"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"node-exporter\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-prometheus-node-exporter\",\"app.kubernetes.io/part-of\":\"dz-prometheus-node-exporter\",\"app.kubernetes.io/version\":\"1.9.1\",\"helm.sh/chart\":\"prometheus-node-exporter-4.47.0\"},\"name\":\"dz-prometheus-node-exporter\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"ports\":[{\"name\":\"metrics\",\"port\":9101,\"protocol\":\"TCP\",\"targetPort\":9101}],\"selector\":{\"app.kubernetes.io/instance\":\"node-exporter\",\"app.kubernetes.io/name\":\"dz-prometheus-node-exporter\"},\"type\":\"ClusterIP\"}}\n",
                                    "prometheus.io/scrape": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:34Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:internalTrafficPolicy": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"port\":9101,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {},
                                                        "f:targetPort": {}
                                                    }
                                                },
                                                "f:selector": {},
                                                "f:sessionAffinity": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "protocol": "TCP",
                                        "port": 9101,
                                        "targetPort": 9101
                                    }
                                ],
                                "selector": {
                                    "app.kubernetes.io/instance": "node-exporter",
                                    "app.kubernetes.io/name": "dz-prometheus-node-exporter"
                                },
                                "clusterIP": "172.20.217.147",
                                "clusterIPs": [
                                    "172.20.217.147"
                                ],
                                "type": "ClusterIP",
                                "sessionAffinity": "None",
                                "ipFamilies": [
                                    "IPv4"
                                ],
                                "ipFamilyPolicy": "SingleStack",
                                "internalTrafficPolicy": "Cluster"
                            },
                            "status": {
                                "loadBalancer": {}
                            }
                        },
                        "prometheus-dz-prometheus-server": {
                            "metadata": {
                                "name": "prometheus-dz-prometheus-server",
                                "namespace": "devzero-zxporter",
                                "uid": "3464c347-7cf2-45f1-b14f-b4c8f2b03137",
                                "resourceVersion": "30192",
                                "creationTimestamp": "2025-06-11T19:21:31Z",
                                "labels": {
                                    "app.kubernetes.io/component": "server",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/name": "dz-prometheus",
                                    "app.kubernetes.io/part-of": "dz-prometheus",
                                    "app.kubernetes.io/version": "v3.4.1",
                                    "helm.sh/chart": "prometheus-27.20.0"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"dz-prometheus\",\"app.kubernetes.io/part-of\":\"dz-prometheus\",\"app.kubernetes.io/version\":\"v3.4.1\",\"helm.sh/chart\":\"prometheus-27.20.0\"},\"name\":\"prometheus-dz-prometheus-server\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":9090}],\"selector\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"dz-prometheus\"},\"sessionAffinity\":\"None\",\"type\":\"ClusterIP\"}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:31Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:internalTrafficPolicy": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {},
                                                        "f:targetPort": {}
                                                    }
                                                },
                                                "f:selector": {},
                                                "f:sessionAffinity": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "name": "http",
                                        "protocol": "TCP",
                                        "port": 80,
                                        "targetPort": 9090
                                    }
                                ],
                                "selector": {
                                    "app.kubernetes.io/component": "server",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/name": "dz-prometheus"
                                },
                                "clusterIP": "172.20.14.250",
                                "clusterIPs": [
                                    "172.20.14.250"
                                ],
                                "type": "ClusterIP",
                                "sessionAffinity": "None",
                                "ipFamilies": [
                                    "IPv4"
                                ],
                                "ipFamilyPolicy": "SingleStack",
                                "internalTrafficPolicy": "Cluster"
                            },
                            "status": {
                                "loadBalancer": {}
                            }
                        },
                        "prometheus-kube-state-metrics": {
                            "metadata": {
                                "name": "prometheus-kube-state-metrics",
                                "namespace": "devzero-zxporter",
                                "uid": "e28f7ebe-8be7-4e70-98ea-3a746e909d6a",
                                "resourceVersion": "30187",
                                "creationTimestamp": "2025-06-11T19:21:30Z",
                                "labels": {
                                    "app.kubernetes.io/component": "metrics",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "kube-state-metrics",
                                    "app.kubernetes.io/part-of": "kube-state-metrics",
                                    "app.kubernetes.io/version": "2.15.0",
                                    "helm.sh/chart": "kube-state-metrics-5.33.2"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"kube-state-metrics\",\"app.kubernetes.io/part-of\":\"kube-state-metrics\",\"app.kubernetes.io/version\":\"2.15.0\",\"helm.sh/chart\":\"kube-state-metrics-5.33.2\"},\"name\":\"prometheus-kube-state-metrics\",\"namespace\":\"devzero-zxporter\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":8080,\"protocol\":\"TCP\",\"targetPort\":8080}],\"selector\":{\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"kube-state-metrics\"},\"type\":\"ClusterIP\"}}\n",
                                    "prometheus.io/scrape": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:30Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:internalTrafficPolicy": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"port\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {},
                                                        "f:targetPort": {}
                                                    }
                                                },
                                                "f:selector": {},
                                                "f:sessionAffinity": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "name": "http",
                                        "protocol": "TCP",
                                        "port": 8080,
                                        "targetPort": 8080
                                    }
                                ],
                                "selector": {
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/name": "kube-state-metrics"
                                },
                                "clusterIP": "172.20.130.72",
                                "clusterIPs": [
                                    "172.20.130.72"
                                ],
                                "type": "ClusterIP",
                                "sessionAffinity": "None",
                                "ipFamilies": [
                                    "IPv4"
                                ],
                                "ipFamilyPolicy": "SingleStack",
                                "internalTrafficPolicy": "Cluster"
                            },
                            "status": {
                                "loadBalancer": {}
                            }
                        }
                    },
                    "configMaps": {
                        "devzero-zxporter-env-config": {
                            "metadata": {
                                "name": "devzero-zxporter-env-config",
                                "namespace": "devzero-zxporter",
                                "uid": "c92375da-0dbf-484d-bf3f-4d95370d8d45",
                                "resourceVersion": "282810",
                                "creationTimestamp": "2025-06-11T17:21:48Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"BUFFER_SIZE\":\"\",\"CLUSTER_TOKEN\":\"dakr-9vF4pj1hc96WvEnpQkFxDnLGHAV07kH6mNjmmULHT1Y=\",\"COLLECTION_FREQUENCY\":\"\",\"DAKR_URL\":\"https://api.devzero.dev/dakr\",\"DISABLED_COLLECTORS\":\"\",\"DISABLE_NETWORK_IO_METRICS\":\"\",\"EXCLUDED_CLUSTERROLEBINDINGS\":\"\",\"EXCLUDED_CLUSTERROLES\":\"\",\"EXCLUDED_CRDGROUPS\":\"\",\"EXCLUDED_CRDS\":\"\",\"EXCLUDED_CRONJOBS\":\"\",\"EXCLUDED_DAEMONSETS\":\"\",\"EXCLUDED_DEPLOYMENTS\":\"\",\"EXCLUDED_ENDPOINTS\":\"\",\"EXCLUDED_EVENTS\":\"\",\"EXCLUDED_HPAS\":\"\",\"EXCLUDED_INGRESSCLASSES\":\"\",\"EXCLUDED_INGRESSES\":\"\",\"EXCLUDED_JOBS\":\"\",\"EXCLUDED_LIMITRANGES\":\"\",\"EXCLUDED_NAMESPACES\":\"\",\"EXCLUDED_NETWORKPOLICIES\":\"\",\"EXCLUDED_NODES\":\"\",\"EXCLUDED_PDBS\":\"\",\"EXCLUDED_PODS\":\"\",\"EXCLUDED_PSPS\":\"\",\"EXCLUDED_PVCS\":\"\",\"EXCLUDED_PVS\":\"\",\"EXCLUDED_REPLICATIONCONTROLLERS\":\"\",\"EXCLUDED_RESOURCEQUOTAS\":\"\",\"EXCLUDED_ROLEBINDINGS\":\"\",\"EXCLUDED_ROLES\":\"\",\"EXCLUDED_SERVICEACCOUNTS\":\"\",\"EXCLUDED_SERVICES\":\"\",\"EXCLUDED_STATEFULSETS\":\"\",\"EXCLUDED_STORAGECLASSES\":\"\",\"EXCLUDED_VPAS\":\"\",\"K8S_PROVIDER\":\"aws\",\"KUBE_CONTEXT_NAME\":\"upprom-test-ph\",\"MASK_SECRET_DATA\":\"\",\"NODE_METRICS_INTERVAL\":\"\",\"PROMETHEUS_URL\":\"http://prometheus-dz-prometheus-server.devzero-zxporter.svc.cluster.local:80\",\"TARGET_NAMESPACES\":\"\",\"WATCHED_CRDS\":\"\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"name\":\"devzero-zxporter-env-config\",\"namespace\":\"devzero-zxporter\"}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:39Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:BUFFER_SIZE": {},
                                                "f:CLUSTER_TOKEN": {},
                                                "f:COLLECTION_FREQUENCY": {},
                                                "f:DISABLED_COLLECTORS": {},
                                                "f:DISABLE_NETWORK_IO_METRICS": {},
                                                "f:EXCLUDED_CLUSTERROLEBINDINGS": {},
                                                "f:EXCLUDED_CLUSTERROLES": {},
                                                "f:EXCLUDED_CRDGROUPS": {},
                                                "f:EXCLUDED_CRDS": {},
                                                "f:EXCLUDED_CRONJOBS": {},
                                                "f:EXCLUDED_DAEMONSETS": {},
                                                "f:EXCLUDED_DEPLOYMENTS": {},
                                                "f:EXCLUDED_ENDPOINTS": {},
                                                "f:EXCLUDED_EVENTS": {},
                                                "f:EXCLUDED_HPAS": {},
                                                "f:EXCLUDED_INGRESSCLASSES": {},
                                                "f:EXCLUDED_INGRESSES": {},
                                                "f:EXCLUDED_JOBS": {},
                                                "f:EXCLUDED_LIMITRANGES": {},
                                                "f:EXCLUDED_NAMESPACES": {},
                                                "f:EXCLUDED_NETWORKPOLICIES": {},
                                                "f:EXCLUDED_NODES": {},
                                                "f:EXCLUDED_PDBS": {},
                                                "f:EXCLUDED_PODS": {},
                                                "f:EXCLUDED_PSPS": {},
                                                "f:EXCLUDED_PVCS": {},
                                                "f:EXCLUDED_PVS": {},
                                                "f:EXCLUDED_REPLICATIONCONTROLLERS": {},
                                                "f:EXCLUDED_RESOURCEQUOTAS": {},
                                                "f:EXCLUDED_ROLEBINDINGS": {},
                                                "f:EXCLUDED_ROLES": {},
                                                "f:EXCLUDED_SERVICEACCOUNTS": {},
                                                "f:EXCLUDED_SERVICES": {},
                                                "f:EXCLUDED_STATEFULSETS": {},
                                                "f:EXCLUDED_STORAGECLASSES": {},
                                                "f:EXCLUDED_VPAS": {},
                                                "f:K8S_PROVIDER": {},
                                                "f:KUBE_CONTEXT_NAME": {},
                                                "f:MASK_SECRET_DATA": {},
                                                "f:NODE_METRICS_INTERVAL": {},
                                                "f:PROMETHEUS_URL": {},
                                                "f:TARGET_NAMESPACES": {},
                                                "f:WATCHED_CRDS": {}
                                            },
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kubectl-patch",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T17:01:25Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                "f:DAKR_URL": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "BUFFER_SIZE": "",
                                "CLUSTER_TOKEN": "dakr-9vF4pj1hc96WvEnpQkFxDnLGHAV07kH6mNjmmULHT1Y=",
                                "COLLECTION_FREQUENCY": "",
                                "DAKR_URL": "",
                                "DISABLED_COLLECTORS": "",
                                "DISABLE_NETWORK_IO_METRICS": "",
                                "EXCLUDED_CLUSTERROLEBINDINGS": "",
                                "EXCLUDED_CLUSTERROLES": "",
                                "EXCLUDED_CRDGROUPS": "",
                                "EXCLUDED_CRDS": "",
                                "EXCLUDED_CRONJOBS": "",
                                "EXCLUDED_DAEMONSETS": "",
                                "EXCLUDED_DEPLOYMENTS": "",
                                "EXCLUDED_ENDPOINTS": "",
                                "EXCLUDED_EVENTS": "",
                                "EXCLUDED_HPAS": "",
                                "EXCLUDED_INGRESSCLASSES": "",
                                "EXCLUDED_INGRESSES": "",
                                "EXCLUDED_JOBS": "",
                                "EXCLUDED_LIMITRANGES": "",
                                "EXCLUDED_NAMESPACES": "",
                                "EXCLUDED_NETWORKPOLICIES": "",
                                "EXCLUDED_NODES": "",
                                "EXCLUDED_PDBS": "",
                                "EXCLUDED_PODS": "",
                                "EXCLUDED_PSPS": "",
                                "EXCLUDED_PVCS": "",
                                "EXCLUDED_PVS": "",
                                "EXCLUDED_REPLICATIONCONTROLLERS": "",
                                "EXCLUDED_RESOURCEQUOTAS": "",
                                "EXCLUDED_ROLEBINDINGS": "",
                                "EXCLUDED_ROLES": "",
                                "EXCLUDED_SERVICEACCOUNTS": "",
                                "EXCLUDED_SERVICES": "",
                                "EXCLUDED_STATEFULSETS": "",
                                "EXCLUDED_STORAGECLASSES": "",
                                "EXCLUDED_VPAS": "",
                                "K8S_PROVIDER": "aws",
                                "KUBE_CONTEXT_NAME": "upprom-test-ph",
                                "MASK_SECRET_DATA": "",
                                "NODE_METRICS_INTERVAL": "",
                                "PROMETHEUS_URL": "http://prometheus-dz-prometheus-server.devzero-zxporter.svc.cluster.local:80",
                                "TARGET_NAMESPACES": "",
                                "WATCHED_CRDS": ""
                            }
                        },
                        "kube-root-ca.crt": {
                            "metadata": {
                                "name": "kube-root-ca.crt",
                                "namespace": "devzero-zxporter",
                                "uid": "a4a6e7a6-fec8-40f3-a98c-8b9e14ec504d",
                                "resourceVersion": "7142",
                                "creationTimestamp": "2025-06-11T17:21:24Z",
                                "annotations": {
                                    "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T17:21:24Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:ca.crt": {}
                                            },
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubernetes.io/description": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIO+OU4Xabrp4wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA2MTExNjM1MzVaFw0zNTA2MDkxNjQwMzVaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDI7+77junoAgnZ0h49l//VPDVaFfNtSYh/4KwoXHVB1+riws7WEEASUQyp\nSf0zct9pgnYnPjyjxyeied/9nNHGTHmgDnO8bE17P9feNcpegUnmL7t9zsEKKa8s\n7Ln894Fqc//ZWhK3tBWdiXIUWuie9hQBb6xqNsNR4LxoUTUX51o9Rzrcj+Ob3jQ5\n5aaYw3i5vz6OV32dHvkP6VNPqyZBgb7EB/uVuodUTneb/dr58bSz/SP7E62tr8Rt\ncdSMnfjhX6JnbWtxjMNADm4ZI/IPjKbu/jlQBUpQqtzWcAwMgUrKgpzCTf+wAPWt\nAGE0fFt2v1YV6YESAZTw5XoxTD2TAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS829Z4biI4waliQiX2gPgUuzxZcjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBwIm3/EBtC\nmhZK+lHoBJCVr3rwWbwAk5q4Z2U47xmWLQuI9rCjOxfWbsX8pFFeTHBFp8AeOE95\nwAtWffbhs/qRZ1NwSfnOw19ybkLJL6c9jvqnoyiP6T7sCQF/cvCvaETyQhpsR9bP\nq2Ts9mlDWVOClMN/7YwQVWqNxc060aNnpXIkFf916N3GnlPRsodNIEpvk5cEhJrT\nEZMRPF4g6HGZcquMfWuXm6Dwwjf1wO7rwhdJmJQXXi5vEoVvYFEIfqCmnyzvdcCR\nP5x6zC5OIjSajIYLBI9DNP9e4uALamg5kRlaksDUEQt29WuaoJsS4J4/MucyE30M\n+OORV1wrz1HR\n-----END CERTIFICATE-----\n"
                            }
                        },
                        "prometheus-dz-prometheus-server": {
                            "metadata": {
                                "name": "prometheus-dz-prometheus-server",
                                "namespace": "devzero-zxporter",
                                "uid": "6358a5bb-e6bd-420b-aa6a-efcb6efb98f3",
                                "resourceVersion": "7154",
                                "creationTimestamp": "2025-06-11T17:21:27Z",
                                "labels": {
                                    "app.kubernetes.io/component": "server",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/name": "dz-prometheus",
                                    "app.kubernetes.io/part-of": "dz-prometheus",
                                    "app.kubernetes.io/version": "v3.4.1",
                                    "helm.sh/chart": "prometheus-27.20.0"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"alerting_rules.yml\":\"{}\\n\",\"alerts\":\"{}\\n\",\"allow-snippet-annotations\":\"false\",\"prometheus.yml\":\"global:\\n  evaluation_interval: 1m\\n  scrape_interval: 1m\\n  scrape_timeout: 10s\\nrule_files:\\n- /etc/config/recording_rules.yml\\n- /etc/config/alerting_rules.yml\\n- /etc/config/rules\\n- /etc/config/alerts\\nscrape_configs:\\n- job_name: prometheus\\n  static_configs:\\n  - targets:\\n    - localhost:9090\\n- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n  job_name: kubernetes-nodes\\n  kubernetes_sd_configs:\\n  - role: node\\n  relabel_configs:\\n  - action: labelmap\\n    regex: __meta_kubernetes_node_label_(.+)\\n  - replacement: kubernetes.default.svc:443\\n    target_label: __address__\\n  - regex: (.+)\\n    replacement: /api/v1/nodes/$1/proxy/metrics\\n    source_labels:\\n    - __meta_kubernetes_node_name\\n    target_label: __metrics_path__\\n  scheme: https\\n  tls_config:\\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n  job_name: kubernetes-nodes-cadvisor\\n  kubernetes_sd_configs:\\n  - role: node\\n  relabel_configs:\\n  - action: labelmap\\n    regex: __meta_kubernetes_node_label_(.+)\\n  - replacement: kubernetes.default.svc:443\\n    target_label: __address__\\n  - regex: (.+)\\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\\n    source_labels:\\n    - __meta_kubernetes_node_name\\n    target_label: __metrics_path__\\n  scheme: https\\n  tls_config:\\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n- honor_labels: true\\n  job_name: kubernetes-pods\\n  kubernetes_sd_configs:\\n  - role: pod\\n  relabel_configs:\\n  - action: keep\\n    regex: true\\n    source_labels:\\n    - __meta_kubernetes_pod_annotation_prometheus_io_scrape\\n  - action: drop\\n    regex: true\\n    source_labels:\\n    - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\\n  - action: replace\\n    regex: (https?)\\n    source_labels:\\n    - __meta_kubernetes_pod_annotation_prometheus_io_scheme\\n    target_label: __scheme__\\n  - action: replace\\n    regex: (.+)\\n    source_labels:\\n    - __meta_kubernetes_pod_annotation_prometheus_io_path\\n    target_label: __metrics_path__\\n  - action: replace\\n    regex: (\\\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\\n    replacement: '[$2]:$1'\\n    source_labels:\\n    - __meta_kubernetes_pod_annotation_prometheus_io_port\\n    - __meta_kubernetes_pod_ip\\n    target_label: __address__\\n  - action: replace\\n    regex: (\\\\d+);((([0-9]+?)(\\\\.|$)){4})\\n    replacement: $2:$1\\n    source_labels:\\n    - __meta_kubernetes_pod_annotation_prometheus_io_port\\n    - __meta_kubernetes_pod_ip\\n    target_label: __address__\\n  - action: labelmap\\n    regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\\n    replacement: __param_$1\\n  - action: labelmap\\n    regex: __meta_kubernetes_pod_label_(.+)\\n  - action: replace\\n    source_labels:\\n    - __meta_kubernetes_namespace\\n    target_label: namespace\\n  - action: replace\\n    source_labels:\\n    - __meta_kubernetes_pod_name\\n    target_label: pod\\n  - action: drop\\n    regex: Pending|Succeeded|Failed|Completed\\n    source_labels:\\n    - __meta_kubernetes_pod_phase\\n  - action: replace\\n    source_labels:\\n    - __meta_kubernetes_pod_node_name\\n    target_label: node\\n\",\"recording_rules.yml\":\"{}\\n\",\"rules\":\"{}\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"dz-prometheus\",\"app.kubernetes.io/part-of\":\"dz-prometheus\",\"app.kubernetes.io/version\":\"v3.4.1\",\"helm.sh/chart\":\"prometheus-27.20.0\"},\"name\":\"prometheus-dz-prometheus-server\",\"namespace\":\"devzero-zxporter\"}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T17:21:27Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:alerting_rules.yml": {},
                                                "f:alerts": {},
                                                "f:allow-snippet-annotations": {},
                                                "f:prometheus.yml": {},
                                                "f:recording_rules.yml": {},
                                                "f:rules": {}
                                            },
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "alerting_rules.yml": "{}\n",
                                "alerts": "{}\n",
                                "allow-snippet-annotations": "false",
                                "prometheus.yml": "global:\n  evaluation_interval: 1m\n  scrape_interval: 1m\n  scrape_timeout: 10s\nrule_files:\n- /etc/config/recording_rules.yml\n- /etc/config/alerting_rules.yml\n- /etc/config/rules\n- /etc/config/alerts\nscrape_configs:\n- job_name: prometheus\n  static_configs:\n  - targets:\n    - localhost:9090\n- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  job_name: kubernetes-nodes\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - replacement: kubernetes.default.svc:443\n    target_label: __address__\n  - regex: (.+)\n    replacement: /api/v1/nodes/$1/proxy/metrics\n    source_labels:\n    - __meta_kubernetes_node_name\n    target_label: __metrics_path__\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  job_name: kubernetes-nodes-cadvisor\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - replacement: kubernetes.default.svc:443\n    target_label: __address__\n  - regex: (.+)\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n    source_labels:\n    - __meta_kubernetes_node_name\n    target_label: __metrics_path__\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n- honor_labels: true\n  job_name: kubernetes-pods\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_scrape\n  - action: drop\n    regex: true\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\n  - action: replace\n    regex: (https?)\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_scheme\n    target_label: __scheme__\n  - action: replace\n    regex: (.+)\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_path\n    target_label: __metrics_path__\n  - action: replace\n    regex: (\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\n    replacement: '[$2]:$1'\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_port\n    - __meta_kubernetes_pod_ip\n    target_label: __address__\n  - action: replace\n    regex: (\\d+);((([0-9]+?)(\\.|$)){4})\n    replacement: $2:$1\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_port\n    - __meta_kubernetes_pod_ip\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\n    replacement: __param_$1\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: namespace\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_name\n    target_label: pod\n  - action: drop\n    regex: Pending|Succeeded|Failed|Completed\n    source_labels:\n    - __meta_kubernetes_pod_phase\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_node_name\n    target_label: node\n",
                                "recording_rules.yml": "{}\n",
                                "rules": "{}\n"
                            }
                        }
                    },
                    "secrets": {},
                    "pvcs": {},
                    "jobs": {},
                    "cronJobs": {},
                    "ingresses": {},
                    "networkPolicies": {},
                    "serviceAccounts": {
                        "default": {
                            "metadata": {
                                "name": "default",
                                "namespace": "devzero-zxporter",
                                "uid": "1b0a2f67-6d32-467c-bde7-c88eda579ef6",
                                "resourceVersion": "7141",
                                "creationTimestamp": "2025-06-11T17:21:24Z"
                            }
                        },
                        "devzero-zxporter-controller-manager": {
                            "metadata": {
                                "name": "devzero-zxporter-controller-manager",
                                "namespace": "devzero-zxporter",
                                "uid": "46ab67f6-92ab-4a3f-84fa-050f4bfdd1a0",
                                "resourceVersion": "7322",
                                "creationTimestamp": "2025-06-11T17:21:42Z",
                                "labels": {
                                    "app.kubernetes.io/managed-by": "kustomize",
                                    "app.kubernetes.io/name": "devzero-zxporter"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/managed-by\":\"kustomize\",\"app.kubernetes.io/name\":\"devzero-zxporter\"},\"name\":\"devzero-zxporter-controller-manager\",\"namespace\":\"devzero-zxporter\"}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T17:21:42Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "dz-metrics-server": {
                            "metadata": {
                                "name": "dz-metrics-server",
                                "namespace": "devzero-zxporter",
                                "uid": "005ea78f-106a-4896-a816-a65d7607214f",
                                "resourceVersion": "30344",
                                "creationTimestamp": "2025-06-11T17:21:35Z",
                                "labels": {
                                    "app.kubernetes.io/instance": "metrics-server",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "dz-metrics-server",
                                    "app.kubernetes.io/version": "0.7.2",
                                    "helm.sh/chart": "metrics-server-3.12.2"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-metrics-server\",\"app.kubernetes.io/version\":\"0.7.2\",\"helm.sh/chart\":\"metrics-server-3.12.2\"},\"name\":\"dz-metrics-server\",\"namespace\":\"devzero-zxporter\"}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:46Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "dz-prometheus-node-exporter": {
                            "metadata": {
                                "name": "dz-prometheus-node-exporter",
                                "namespace": "devzero-zxporter",
                                "uid": "7cf1a1ac-0d21-45a2-85b3-c66add8f3b5c",
                                "resourceVersion": "7212",
                                "creationTimestamp": "2025-06-11T17:21:33Z",
                                "labels": {
                                    "app.kubernetes.io/component": "metrics",
                                    "app.kubernetes.io/instance": "node-exporter",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/part-of": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/version": "1.9.1",
                                    "helm.sh/chart": "prometheus-node-exporter-4.47.0"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"automountServiceAccountToken\":false,\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"node-exporter\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-prometheus-node-exporter\",\"app.kubernetes.io/part-of\":\"dz-prometheus-node-exporter\",\"app.kubernetes.io/version\":\"1.9.1\",\"helm.sh/chart\":\"prometheus-node-exporter-4.47.0\"},\"name\":\"dz-prometheus-node-exporter\",\"namespace\":\"devzero-zxporter\"}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T17:21:33Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:automountServiceAccountToken": {},
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "automountServiceAccountToken": false
                        },
                        "prometheus-dz-prometheus-server": {
                            "metadata": {
                                "name": "prometheus-dz-prometheus-server",
                                "namespace": "devzero-zxporter",
                                "uid": "56d19428-2207-40b0-8659-aefb1b26bc8d",
                                "resourceVersion": "7148",
                                "creationTimestamp": "2025-06-11T17:21:25Z",
                                "labels": {
                                    "app.kubernetes.io/component": "server",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/name": "dz-prometheus",
                                    "app.kubernetes.io/part-of": "dz-prometheus",
                                    "app.kubernetes.io/version": "v3.4.1",
                                    "helm.sh/chart": "prometheus-27.20.0"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"dz-prometheus\",\"app.kubernetes.io/part-of\":\"dz-prometheus\",\"app.kubernetes.io/version\":\"v3.4.1\",\"helm.sh/chart\":\"prometheus-27.20.0\"},\"name\":\"prometheus-dz-prometheus-server\",\"namespace\":\"devzero-zxporter\"}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T17:21:25Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "prometheus-kube-state-metrics": {
                            "metadata": {
                                "name": "prometheus-kube-state-metrics",
                                "namespace": "devzero-zxporter",
                                "uid": "e425be38-578a-4b6c-a8b4-2f37cccccc03",
                                "resourceVersion": "7145",
                                "creationTimestamp": "2025-06-11T17:21:24Z",
                                "labels": {
                                    "app.kubernetes.io/component": "metrics",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "kube-state-metrics",
                                    "app.kubernetes.io/part-of": "kube-state-metrics",
                                    "app.kubernetes.io/version": "2.15.0",
                                    "helm.sh/chart": "kube-state-metrics-5.33.2"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"automountServiceAccountToken\":true,\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"kube-state-metrics\",\"app.kubernetes.io/part-of\":\"kube-state-metrics\",\"app.kubernetes.io/version\":\"2.15.0\",\"helm.sh/chart\":\"kube-state-metrics-5.33.2\"},\"name\":\"prometheus-kube-state-metrics\",\"namespace\":\"devzero-zxporter\"}}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T17:21:24Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:automountServiceAccountToken": {},
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "automountServiceAccountToken": true
                        }
                    },
                    "roles": {
                        "devzero-zxporter-leader-election-role": {
                            "metadata": {
                                "name": "devzero-zxporter-leader-election-role",
                                "namespace": "devzero-zxporter",
                                "uid": "92bca2f8-16fd-4129-87ff-a25500a58636",
                                "resourceVersion": "7332",
                                "creationTimestamp": "2025-06-11T17:21:42Z",
                                "labels": {
                                    "app.kubernetes.io/managed-by": "kustomize",
                                    "app.kubernetes.io/name": "devzero-zxporter"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/managed-by\":\"kustomize\",\"app.kubernetes.io/name\":\"devzero-zxporter\"},\"name\":\"devzero-zxporter-leader-election-role\",\"namespace\":\"devzero-zxporter\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"deployments\",\"serviceaccounts\",\"services\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"rolebindings\",\"roles\",\"clusterrolebindings\",\"clusterroles\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T17:21:42Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch",
                                        "create",
                                        "update",
                                        "patch",
                                        "delete"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps",
                                        "deployments",
                                        "serviceaccounts",
                                        "services"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch",
                                        "create",
                                        "update",
                                        "patch",
                                        "delete"
                                    ],
                                    "apiGroups": [
                                        "apps"
                                    ],
                                    "resources": [
                                        "deployments"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch",
                                        "create",
                                        "update",
                                        "patch",
                                        "delete"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "patch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "events"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "delete",
                                        "get",
                                        "list",
                                        "patch",
                                        "update",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        "rbac.authorization.k8s.io"
                                    ],
                                    "resources": [
                                        "rolebindings",
                                        "roles",
                                        "clusterrolebindings",
                                        "clusterroles"
                                    ]
                                }
                            ]
                        }
                    },
                    "roleBindings": {
                        "devzero-zxporter-leader-election-rolebinding": {
                            "metadata": {
                                "name": "devzero-zxporter-leader-election-rolebinding",
                                "namespace": "devzero-zxporter",
                                "uid": "81318c8e-4221-4ef1-89e9-90f5a6243706",
                                "resourceVersion": "7352",
                                "creationTimestamp": "2025-06-11T17:21:46Z",
                                "labels": {
                                    "app.kubernetes.io/managed-by": "kustomize",
                                    "app.kubernetes.io/name": "devzero-zxporter"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/managed-by\":\"kustomize\",\"app.kubernetes.io/name\":\"devzero-zxporter\"},\"name\":\"devzero-zxporter-leader-election-rolebinding\",\"namespace\":\"devzero-zxporter\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"devzero-zxporter-leader-election-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"devzero-zxporter-controller-manager\",\"namespace\":\"devzero-zxporter\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T17:21:46Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "ServiceAccount",
                                    "name": "devzero-zxporter-controller-manager",
                                    "namespace": "devzero-zxporter"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "devzero-zxporter-leader-election-role"
                            }
                        }
                    },
                    "podDisruptionBudgets": {},
                    "endpoints": {
                        "devzero-zxporter-controller-manager-metrics-service": {
                            "metadata": {
                                "name": "devzero-zxporter-controller-manager-metrics-service",
                                "namespace": "devzero-zxporter",
                                "uid": "c70914dd-5652-45f8-8c7d-db6606482181",
                                "resourceVersion": "293049",
                                "creationTimestamp": "2025-06-11T19:21:41Z",
                                "labels": {
                                    "app.kubernetes.io/managed-by": "kustomize",
                                    "app.kubernetes.io/name": "devzero-zxporter",
                                    "control-plane": "controller-manager"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-12T17:53:42Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:control-plane": {}
                                                }
                                            },
                                            "f:subsets": {}
                                        }
                                    }
                                ]
                            },
                            "subsets": [
                                {
                                    "addresses": [
                                        {
                                            "ip": "10.8.135.206",
                                            "nodeName": "ip-10-8-143-217.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "devzero-zxporter",
                                                "name": "devzero-zxporter-controller-manager-645c9b6d64-q2svb",
                                                "uid": "6c089688-7e50-4672-8cd0-f6ac6e892c9e"
                                            }
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "name": "https",
                                            "port": 8443,
                                            "protocol": "TCP"
                                        }
                                    ]
                                }
                            ]
                        },
                        "dz-metrics-server": {
                            "metadata": {
                                "name": "dz-metrics-server",
                                "namespace": "devzero-zxporter",
                                "uid": "030d733e-7401-400c-9154-5ec8febb96e5",
                                "resourceVersion": "30450",
                                "creationTimestamp": "2025-06-11T19:21:46Z",
                                "labels": {
                                    "app.kubernetes.io/instance": "metrics-server",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "dz-metrics-server",
                                    "app.kubernetes.io/version": "0.7.2",
                                    "helm.sh/chart": "metrics-server-3.12.2"
                                },
                                "annotations": {
                                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-06-11T19:22:07Z"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:22:07Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            },
                                            "f:subsets": {}
                                        }
                                    }
                                ]
                            },
                            "subsets": [
                                {
                                    "addresses": [
                                        {
                                            "ip": "10.8.131.66",
                                            "nodeName": "ip-10-8-143-217.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "devzero-zxporter",
                                                "name": "dz-metrics-server-7b7f7bf57b-vm88j",
                                                "uid": "03a6b7dc-c1fb-46c8-84b6-4dd69778e1d5"
                                            }
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "name": "https",
                                            "port": 10250,
                                            "protocol": "TCP",
                                            "appProtocol": "https"
                                        }
                                    ]
                                }
                            ]
                        },
                        "dz-prometheus-node-exporter": {
                            "metadata": {
                                "name": "dz-prometheus-node-exporter",
                                "namespace": "devzero-zxporter",
                                "uid": "26299f11-76d8-480b-b454-d3ab69f14006",
                                "resourceVersion": "30286",
                                "creationTimestamp": "2025-06-11T19:21:34Z",
                                "labels": {
                                    "app.kubernetes.io/component": "metrics",
                                    "app.kubernetes.io/instance": "node-exporter",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/part-of": "dz-prometheus-node-exporter",
                                    "app.kubernetes.io/version": "1.9.1",
                                    "helm.sh/chart": "prometheus-node-exporter-4.47.0"
                                },
                                "annotations": {
                                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-06-11T19:21:36Z"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:36Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            },
                                            "f:subsets": {}
                                        }
                                    }
                                ]
                            },
                            "subsets": [
                                {
                                    "addresses": [
                                        {
                                            "ip": "10.8.110.61",
                                            "nodeName": "ip-10-8-110-61.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "devzero-zxporter",
                                                "name": "dz-prometheus-node-exporter-gcnbc",
                                                "uid": "bb133697-685e-4035-b2bf-fd83fa7d4760"
                                            }
                                        },
                                        {
                                            "ip": "10.8.143.217",
                                            "nodeName": "ip-10-8-143-217.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "devzero-zxporter",
                                                "name": "dz-prometheus-node-exporter-7z6wq",
                                                "uid": "9862d88d-a28c-46ec-a980-c393c5d23854"
                                            }
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics",
                                            "port": 9101,
                                            "protocol": "TCP"
                                        }
                                    ]
                                }
                            ]
                        },
                        "prometheus-dz-prometheus-server": {
                            "metadata": {
                                "name": "prometheus-dz-prometheus-server",
                                "namespace": "devzero-zxporter",
                                "uid": "a5e660e9-3db7-4107-b401-d1b58886ef68",
                                "resourceVersion": "30458",
                                "creationTimestamp": "2025-06-11T19:21:31Z",
                                "labels": {
                                    "app.kubernetes.io/component": "server",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/name": "dz-prometheus",
                                    "app.kubernetes.io/part-of": "dz-prometheus",
                                    "app.kubernetes.io/version": "v3.4.1",
                                    "helm.sh/chart": "prometheus-27.20.0"
                                },
                                "annotations": {
                                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-06-11T19:22:08Z"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:22:08Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            },
                                            "f:subsets": {}
                                        }
                                    }
                                ]
                            },
                            "subsets": [
                                {
                                    "addresses": [
                                        {
                                            "ip": "10.8.136.124",
                                            "nodeName": "ip-10-8-143-217.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "devzero-zxporter",
                                                "name": "prometheus-dz-prometheus-server-5cc6d954cd-vpp6q",
                                                "uid": "be6a8344-1fe6-491c-8964-81f29d2c9157"
                                            }
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "name": "http",
                                            "port": 9090,
                                            "protocol": "TCP"
                                        }
                                    ]
                                }
                            ]
                        },
                        "prometheus-kube-state-metrics": {
                            "metadata": {
                                "name": "prometheus-kube-state-metrics",
                                "namespace": "devzero-zxporter",
                                "uid": "15184dff-7f54-484d-b43f-acbf2518db8d",
                                "resourceVersion": "30313",
                                "creationTimestamp": "2025-06-11T19:21:30Z",
                                "labels": {
                                    "app.kubernetes.io/component": "metrics",
                                    "app.kubernetes.io/instance": "prometheus",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "kube-state-metrics",
                                    "app.kubernetes.io/part-of": "kube-state-metrics",
                                    "app.kubernetes.io/version": "2.15.0",
                                    "helm.sh/chart": "kube-state-metrics-5.33.2"
                                },
                                "annotations": {
                                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-06-11T19:21:42Z"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T19:21:42Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            },
                                            "f:subsets": {}
                                        }
                                    }
                                ]
                            },
                            "subsets": [
                                {
                                    "addresses": [
                                        {
                                            "ip": "10.8.137.201",
                                            "nodeName": "ip-10-8-143-217.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "devzero-zxporter",
                                                "name": "prometheus-kube-state-metrics-57554884b-mgs5b",
                                                "uid": "0d5fcb4d-3be1-49cb-9e5f-4bedd0468073"
                                            }
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "name": "http",
                                            "port": 8080,
                                            "protocol": "TCP"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "limitRanges": {},
                    "resourceQuotas": {},
                    "unscheduledPods": {},
                    "hash": "2345229be824fcc687c6f678a38de3414050252348e72b5064eeea472f2dfbdf"
                },
                "kube-node-lease": {
                    "namespace": {
                        "metadata": {
                            "name": "kube-node-lease",
                            "uid": "159fe362-dd91-4cdc-b5ee-eb137606502b",
                            "resourceVersion": "30",
                            "creationTimestamp": "2025-06-11T16:40:59Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "kube-node-lease"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:40:59Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/metadata.name": {}
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "deployments": {},
                    "statefulSets": {},
                    "daemonSets": {},
                    "replicaSets": {},
                    "services": {},
                    "configMaps": {
                        "kube-root-ca.crt": {
                            "metadata": {
                                "name": "kube-root-ca.crt",
                                "namespace": "kube-node-lease",
                                "uid": "7b2773a5-b511-48ea-9ba1-4d076e834d52",
                                "resourceVersion": "358",
                                "creationTimestamp": "2025-06-11T16:41:10Z",
                                "annotations": {
                                    "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:41:10Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:ca.crt": {}
                                            },
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubernetes.io/description": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIO+OU4Xabrp4wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA2MTExNjM1MzVaFw0zNTA2MDkxNjQwMzVaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDI7+77junoAgnZ0h49l//VPDVaFfNtSYh/4KwoXHVB1+riws7WEEASUQyp\nSf0zct9pgnYnPjyjxyeied/9nNHGTHmgDnO8bE17P9feNcpegUnmL7t9zsEKKa8s\n7Ln894Fqc//ZWhK3tBWdiXIUWuie9hQBb6xqNsNR4LxoUTUX51o9Rzrcj+Ob3jQ5\n5aaYw3i5vz6OV32dHvkP6VNPqyZBgb7EB/uVuodUTneb/dr58bSz/SP7E62tr8Rt\ncdSMnfjhX6JnbWtxjMNADm4ZI/IPjKbu/jlQBUpQqtzWcAwMgUrKgpzCTf+wAPWt\nAGE0fFt2v1YV6YESAZTw5XoxTD2TAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS829Z4biI4waliQiX2gPgUuzxZcjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBwIm3/EBtC\nmhZK+lHoBJCVr3rwWbwAk5q4Z2U47xmWLQuI9rCjOxfWbsX8pFFeTHBFp8AeOE95\nwAtWffbhs/qRZ1NwSfnOw19ybkLJL6c9jvqnoyiP6T7sCQF/cvCvaETyQhpsR9bP\nq2Ts9mlDWVOClMN/7YwQVWqNxc060aNnpXIkFf916N3GnlPRsodNIEpvk5cEhJrT\nEZMRPF4g6HGZcquMfWuXm6Dwwjf1wO7rwhdJmJQXXi5vEoVvYFEIfqCmnyzvdcCR\nP5x6zC5OIjSajIYLBI9DNP9e4uALamg5kRlaksDUEQt29WuaoJsS4J4/MucyE30M\n+OORV1wrz1HR\n-----END CERTIFICATE-----\n"
                            }
                        }
                    },
                    "secrets": {},
                    "pvcs": {},
                    "jobs": {},
                    "cronJobs": {},
                    "ingresses": {},
                    "networkPolicies": {},
                    "serviceAccounts": {
                        "default": {
                            "metadata": {
                                "name": "default",
                                "namespace": "kube-node-lease",
                                "uid": "94905a4c-e998-4e8c-8506-39858607744f",
                                "resourceVersion": "364",
                                "creationTimestamp": "2025-06-11T16:41:10Z"
                            }
                        }
                    },
                    "roles": {},
                    "roleBindings": {},
                    "podDisruptionBudgets": {},
                    "endpoints": {},
                    "limitRanges": {},
                    "resourceQuotas": {},
                    "unscheduledPods": {},
                    "hash": "0354d945aeb90c25dc4ccab82f918f90ae53ba8b9681d3da4435f7f307e11dee"
                },
                "kube-public": {
                    "namespace": {
                        "metadata": {
                            "name": "kube-public",
                            "uid": "e20aabb1-9f06-4073-b5f2-a8af26c69076",
                            "resourceVersion": "21",
                            "creationTimestamp": "2025-06-11T16:40:59Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "kube-public"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:40:59Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/metadata.name": {}
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "deployments": {},
                    "statefulSets": {},
                    "daemonSets": {},
                    "replicaSets": {},
                    "services": {},
                    "configMaps": {
                        "kube-root-ca.crt": {
                            "metadata": {
                                "name": "kube-root-ca.crt",
                                "namespace": "kube-public",
                                "uid": "aadc7094-d47e-4567-a434-25b32307d189",
                                "resourceVersion": "360",
                                "creationTimestamp": "2025-06-11T16:41:10Z",
                                "annotations": {
                                    "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:41:10Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:ca.crt": {}
                                            },
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubernetes.io/description": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIO+OU4Xabrp4wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA2MTExNjM1MzVaFw0zNTA2MDkxNjQwMzVaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDI7+77junoAgnZ0h49l//VPDVaFfNtSYh/4KwoXHVB1+riws7WEEASUQyp\nSf0zct9pgnYnPjyjxyeied/9nNHGTHmgDnO8bE17P9feNcpegUnmL7t9zsEKKa8s\n7Ln894Fqc//ZWhK3tBWdiXIUWuie9hQBb6xqNsNR4LxoUTUX51o9Rzrcj+Ob3jQ5\n5aaYw3i5vz6OV32dHvkP6VNPqyZBgb7EB/uVuodUTneb/dr58bSz/SP7E62tr8Rt\ncdSMnfjhX6JnbWtxjMNADm4ZI/IPjKbu/jlQBUpQqtzWcAwMgUrKgpzCTf+wAPWt\nAGE0fFt2v1YV6YESAZTw5XoxTD2TAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS829Z4biI4waliQiX2gPgUuzxZcjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBwIm3/EBtC\nmhZK+lHoBJCVr3rwWbwAk5q4Z2U47xmWLQuI9rCjOxfWbsX8pFFeTHBFp8AeOE95\nwAtWffbhs/qRZ1NwSfnOw19ybkLJL6c9jvqnoyiP6T7sCQF/cvCvaETyQhpsR9bP\nq2Ts9mlDWVOClMN/7YwQVWqNxc060aNnpXIkFf916N3GnlPRsodNIEpvk5cEhJrT\nEZMRPF4g6HGZcquMfWuXm6Dwwjf1wO7rwhdJmJQXXi5vEoVvYFEIfqCmnyzvdcCR\nP5x6zC5OIjSajIYLBI9DNP9e4uALamg5kRlaksDUEQt29WuaoJsS4J4/MucyE30M\n+OORV1wrz1HR\n-----END CERTIFICATE-----\n"
                            }
                        }
                    },
                    "secrets": {},
                    "pvcs": {},
                    "jobs": {},
                    "cronJobs": {},
                    "ingresses": {},
                    "networkPolicies": {},
                    "serviceAccounts": {
                        "default": {
                            "metadata": {
                                "name": "default",
                                "namespace": "kube-public",
                                "uid": "e35028ef-9296-47ae-b601-e70b36ce574a",
                                "resourceVersion": "365",
                                "creationTimestamp": "2025-06-11T16:41:10Z"
                            }
                        }
                    },
                    "roles": {
                        "system:controller:bootstrap-signer": {
                            "metadata": {
                                "name": "system:controller:bootstrap-signer",
                                "namespace": "kube-public",
                                "uid": "9e9da4ea-5224-44e3-bd45-194740241694",
                                "resourceVersion": "185",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "update"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "cluster-info"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "patch",
                                        "update"
                                    ],
                                    "apiGroups": [
                                        "",
                                        "events.k8s.io"
                                    ],
                                    "resources": [
                                        "events"
                                    ]
                                }
                            ]
                        }
                    },
                    "roleBindings": {
                        "system:controller:bootstrap-signer": {
                            "metadata": {
                                "name": "system:controller:bootstrap-signer",
                                "namespace": "kube-public",
                                "uid": "db48abdf-8042-489d-af65-1cdd6ecbb425",
                                "resourceVersion": "192",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "ServiceAccount",
                                    "name": "bootstrap-signer",
                                    "namespace": "kube-system"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "system:controller:bootstrap-signer"
                            }
                        }
                    },
                    "podDisruptionBudgets": {},
                    "endpoints": {},
                    "limitRanges": {},
                    "resourceQuotas": {},
                    "unscheduledPods": {},
                    "hash": "0b1097f0600858b7b525e53bef0317009367da08892daebc3dcd3b90320624aa"
                },
                "kube-system": {
                    "namespace": {
                        "metadata": {
                            "name": "kube-system",
                            "uid": "33caca01-36b9-4641-a8e9-b5e03f74670a",
                            "resourceVersion": "4",
                            "creationTimestamp": "2025-06-11T16:40:59Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "kube-system"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "v1",
                                    "time": "2025-06-11T16:40:59Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/metadata.name": {}
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "deployments": {
                        "coredns": {
                            "deployment": {
                                "metadata": {
                                    "name": "coredns",
                                    "namespace": "kube-system",
                                    "uid": "27c3de7d-c5c0-42f1-8b69-5e1f11c9cfe4",
                                    "resourceVersion": "1605",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T16:42:45Z",
                                    "labels": {
                                        "eks.amazonaws.com/component": "coredns",
                                        "k8s-app": "kube-dns",
                                        "kubernetes.io/name": "CoreDNS"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1"
                                    },
                                    "managedFields": [
                                        {
                                            "manager": "eks",
                                            "operation": "Apply",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T16:42:45Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:labels": {
                                                        "f:eks.amazonaws.com/component": {},
                                                        "f:k8s-app": {},
                                                        "f:kubernetes.io/name": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:strategy": {
                                                        "f:rollingUpdate": {
                                                            "f:maxUnavailable": {}
                                                        },
                                                        "f:type": {}
                                                    },
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                "f:eks.amazonaws.com/component": {},
                                                                "f:k8s-app": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:affinity": {
                                                                "f:nodeAffinity": {
                                                                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                                },
                                                                "f:podAntiAffinity": {
                                                                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                                                }
                                                            },
                                                            "f:containers": {
                                                                "k:{\"name\":\"coredns\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        },
                                                                        "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        },
                                                                        "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        "f:httpGet": {
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        }
                                                                    },
                                                                    "f:resources": {
                                                                        "f:limits": {
                                                                            "f:memory": {}
                                                                        },
                                                                        "f:requests": {
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            "f:add": {},
                                                                            "f:drop": {}
                                                                        },
                                                                        "f:readOnlyRootFilesystem": {}
                                                                    },
                                                                    "f:volumeMounts": {
                                                                        "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:priorityClassName": {},
                                                            "f:serviceAccountName": {},
                                                            "f:tolerations": {},
                                                            "f:topologySpreadConstraints": {
                                                                "k:{\"topologyKey\":\"topology.kubernetes.io/zone\",\"whenUnsatisfiable\":\"ScheduleAnyway\"}": {
                                                                    ".": {},
                                                                    "f:labelSelector": {},
                                                                    "f:maxSkew": {},
                                                                    "f:topologyKey": {},
                                                                    "f:whenUnsatisfiable": {}
                                                                }
                                                            },
                                                            "f:volumes": {
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        "f:items": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T16:48:04Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    }
                                                },
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:conditions": {
                                                        ".": {},
                                                        "k:{\"type\":\"Available\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        },
                                                        "k:{\"type\":\"Progressing\"}": {
                                                            ".": {},
                                                            "f:lastTransitionTime": {},
                                                            "f:lastUpdateTime": {},
                                                            "f:message": {},
                                                            "f:reason": {},
                                                            "f:status": {},
                                                            "f:type": {}
                                                        }
                                                    },
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {},
                                                    "f:updatedReplicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 2,
                                    "selector": {
                                        "matchLabels": {
                                            "eks.amazonaws.com/component": "coredns",
                                            "k8s-app": "kube-dns"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "eks.amazonaws.com/component": "coredns",
                                                "k8s-app": "kube-dns"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "coredns",
                                                        "items": [
                                                            {
                                                                "key": "Corefile",
                                                                "path": "Corefile"
                                                            }
                                                        ],
                                                        "defaultMode": 420
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "coredns",
                                                    "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                    "args": [
                                                        "-conf",
                                                        "/etc/coredns/Corefile"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "name": "dns",
                                                            "containerPort": 53,
                                                            "protocol": "UDP"
                                                        },
                                                        {
                                                            "name": "dns-tcp",
                                                            "containerPort": 53,
                                                            "protocol": "TCP"
                                                        },
                                                        {
                                                            "name": "metrics",
                                                            "containerPort": 9153,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {
                                                        "limits": {
                                                            "memory": "170Mi"
                                                        },
                                                        "requests": {
                                                            "cpu": "100m",
                                                            "memory": "70Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/coredns"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/health",
                                                            "port": 8080,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 60,
                                                        "timeoutSeconds": 5,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 5
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/ready",
                                                            "port": 8181,
                                                            "scheme": "HTTP"
                                                        },
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "add": [
                                                                "NET_BIND_SERVICE"
                                                            ],
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "readOnlyRootFilesystem": true,
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "Default",
                                            "serviceAccountName": "coredns",
                                            "serviceAccount": "coredns",
                                            "securityContext": {},
                                            "affinity": {
                                                "nodeAffinity": {
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                        "nodeSelectorTerms": [
                                                            {
                                                                "matchExpressions": [
                                                                    {
                                                                        "key": "kubernetes.io/os",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "linux"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "key": "kubernetes.io/arch",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "amd64",
                                                                            "arm64"
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                },
                                                "podAntiAffinity": {
                                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                                        {
                                                            "weight": 100,
                                                            "podAffinityTerm": {
                                                                "labelSelector": {
                                                                    "matchExpressions": [
                                                                        {
                                                                            "key": "k8s-app",
                                                                            "operator": "In",
                                                                            "values": [
                                                                                "kube-dns"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "topologyKey": "kubernetes.io/hostname"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            "schedulerName": "default-scheduler",
                                            "tolerations": [
                                                {
                                                    "key": "node-role.kubernetes.io/control-plane",
                                                    "effect": "NoSchedule"
                                                },
                                                {
                                                    "key": "CriticalAddonsOnly",
                                                    "operator": "Exists"
                                                }
                                            ],
                                            "priorityClassName": "system-cluster-critical",
                                            "topologySpreadConstraints": [
                                                {
                                                    "maxSkew": 1,
                                                    "topologyKey": "topology.kubernetes.io/zone",
                                                    "whenUnsatisfiable": "ScheduleAnyway",
                                                    "labelSelector": {
                                                        "matchLabels": {
                                                            "k8s-app": "kube-dns"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "strategy": {
                                        "type": "RollingUpdate",
                                        "rollingUpdate": {
                                            "maxUnavailable": 1,
                                            "maxSurge": "25%"
                                        }
                                    },
                                    "revisionHistoryLimit": 10,
                                    "progressDeadlineSeconds": 600
                                },
                                "status": {
                                    "observedGeneration": 1,
                                    "replicas": 2,
                                    "updatedReplicas": 2,
                                    "readyReplicas": 2,
                                    "availableReplicas": 2,
                                    "conditions": [
                                        {
                                            "type": "Available",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-11T16:48:04Z",
                                            "lastTransitionTime": "2025-06-11T16:48:04Z",
                                            "reason": "MinimumReplicasAvailable",
                                            "message": "Deployment has minimum availability."
                                        },
                                        {
                                            "type": "Progressing",
                                            "status": "True",
                                            "lastUpdateTime": "2025-06-11T16:48:04Z",
                                            "lastTransitionTime": "2025-06-11T16:42:45Z",
                                            "reason": "NewReplicaSetAvailable",
                                            "message": "ReplicaSet \"coredns-586b798467\" has successfully progressed."
                                        }
                                    ]
                                }
                            },
                            "pods": {
                                "kube-system/coredns-586b798467-2wnrg": {
                                    "metadata": {
                                        "name": "coredns-586b798467-2wnrg",
                                        "generateName": "coredns-586b798467-",
                                        "namespace": "kube-system",
                                        "uid": "79c24ab3-b7e7-485a-a2f2-ac1bf92a8260",
                                        "resourceVersion": "1599",
                                        "creationTimestamp": "2025-06-11T16:42:45Z",
                                        "labels": {
                                            "eks.amazonaws.com/component": "coredns",
                                            "k8s-app": "kube-dns",
                                            "pod-template-hash": "586b798467"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "coredns-586b798467",
                                                "uid": "f4be945e-9b19-4c93-a332-e2ff070f6406",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:42:45Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:eks.amazonaws.com/component": {},
                                                            "f:k8s-app": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"f4be945e-9b19-4c93-a332-e2ff070f6406\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            },
                                                            "f:podAntiAffinity": {
                                                                ".": {},
                                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:containers": {
                                                            "k:{\"name\":\"coredns\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    },
                                                                    "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    },
                                                                    "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:limits": {
                                                                        ".": {},
                                                                        "f:memory": {}
                                                                    },
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:add": {},
                                                                        "f:drop": {}
                                                                    },
                                                                    "f:readOnlyRootFilesystem": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:topologySpreadConstraints": {
                                                            ".": {},
                                                            "k:{\"topologyKey\":\"topology.kubernetes.io/zone\",\"whenUnsatisfiable\":\"ScheduleAnyway\"}": {
                                                                ".": {},
                                                                "f:labelSelector": {},
                                                                "f:maxSkew": {},
                                                                "f:topologyKey": {},
                                                                "f:whenUnsatisfiable": {}
                                                            }
                                                        },
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config-volume\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:items": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:50Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            ".": {},
                                                            "k:{\"type\":\"PodScheduled\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:message": {},
                                                                "f:reason": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresource": "status"
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:48:04Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.105.223\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "config-volume",
                                                "configMap": {
                                                    "name": "coredns",
                                                    "items": [
                                                        {
                                                            "key": "Corefile",
                                                            "path": "Corefile"
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-x7b8s",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "coredns",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                "args": [
                                                    "-conf",
                                                    "/etc/coredns/Corefile"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "dns",
                                                        "containerPort": 53,
                                                        "protocol": "UDP"
                                                    },
                                                    {
                                                        "name": "dns-tcp",
                                                        "containerPort": 53,
                                                        "protocol": "TCP"
                                                    },
                                                    {
                                                        "name": "metrics",
                                                        "containerPort": 9153,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "limits": {
                                                        "memory": "170Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "100m",
                                                        "memory": "70Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "readOnly": true,
                                                        "mountPath": "/etc/coredns"
                                                    },
                                                    {
                                                        "name": "kube-api-access-x7b8s",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/health",
                                                        "port": 8080,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 60,
                                                    "timeoutSeconds": 5,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 5
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/ready",
                                                        "port": 8181,
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "add": [
                                                            "NET_BIND_SERVICE"
                                                        ],
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "Default",
                                        "serviceAccountName": "coredns",
                                        "serviceAccount": "coredns",
                                        "nodeName": "ip-10-8-110-61.ec2.internal",
                                        "securityContext": {},
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchExpressions": [
                                                                {
                                                                    "key": "kubernetes.io/os",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "linux"
                                                                    ]
                                                                },
                                                                {
                                                                    "key": "kubernetes.io/arch",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "amd64",
                                                                        "arm64"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "podAntiAffinity": {
                                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                                    {
                                                        "weight": 100,
                                                        "podAffinityTerm": {
                                                            "labelSelector": {
                                                                "matchExpressions": [
                                                                    {
                                                                        "key": "k8s-app",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "kube-dns"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "topologyKey": "kubernetes.io/hostname"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node-role.kubernetes.io/control-plane",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "CriticalAddonsOnly",
                                                "operator": "Exists"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priorityClassName": "system-cluster-critical",
                                        "priority": 2000000000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority",
                                        "topologySpreadConstraints": [
                                            {
                                                "maxSkew": 1,
                                                "topologyKey": "topology.kubernetes.io/zone",
                                                "whenUnsatisfiable": "ScheduleAnyway",
                                                "labelSelector": {
                                                    "matchLabels": {
                                                        "k8s-app": "kube-dns"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            }
                                        ],
                                        "hostIP": "10.8.110.61",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "podIP": "10.8.105.223",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.105.223"
                                            }
                                        ],
                                        "startTime": "2025-06-11T16:48:01Z",
                                        "containerStatuses": [
                                            {
                                                "name": "coredns",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:48:04Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:d21885a6632343ecd25d468b54681a0bd512055174bb17bc35a08cb38a965f12",
                                                "containerID": "containerd://c7073205c4cc1795270aa5ab3891f7cc46453432bf3a7a10ec540eb80ba9e48f",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                },
                                "kube-system/coredns-586b798467-9ngj9": {
                                    "metadata": {
                                        "name": "coredns-586b798467-9ngj9",
                                        "generateName": "coredns-586b798467-",
                                        "namespace": "kube-system",
                                        "uid": "3ccc0d03-7187-4348-9415-94bba0c106a8",
                                        "resourceVersion": "1594",
                                        "creationTimestamp": "2025-06-11T16:42:45Z",
                                        "labels": {
                                            "eks.amazonaws.com/component": "coredns",
                                            "k8s-app": "kube-dns",
                                            "pod-template-hash": "586b798467"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "coredns-586b798467",
                                                "uid": "f4be945e-9b19-4c93-a332-e2ff070f6406",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:42:45Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:eks.amazonaws.com/component": {},
                                                            "f:k8s-app": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"f4be945e-9b19-4c93-a332-e2ff070f6406\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            },
                                                            "f:podAntiAffinity": {
                                                                ".": {},
                                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:containers": {
                                                            "k:{\"name\":\"coredns\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    },
                                                                    "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    },
                                                                    "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:limits": {
                                                                        ".": {},
                                                                        "f:memory": {}
                                                                    },
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:add": {},
                                                                        "f:drop": {}
                                                                    },
                                                                    "f:readOnlyRootFilesystem": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:topologySpreadConstraints": {
                                                            ".": {},
                                                            "k:{\"topologyKey\":\"topology.kubernetes.io/zone\",\"whenUnsatisfiable\":\"ScheduleAnyway\"}": {
                                                                ".": {},
                                                                "f:labelSelector": {},
                                                                "f:maxSkew": {},
                                                                "f:topologyKey": {},
                                                                "f:whenUnsatisfiable": {}
                                                            }
                                                        },
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config-volume\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:items": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:50Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            ".": {},
                                                            "k:{\"type\":\"PodScheduled\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:message": {},
                                                                "f:reason": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresource": "status"
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:48:04Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.101.22\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "config-volume",
                                                "configMap": {
                                                    "name": "coredns",
                                                    "items": [
                                                        {
                                                            "key": "Corefile",
                                                            "path": "Corefile"
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-9rmqw",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "coredns",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                "args": [
                                                    "-conf",
                                                    "/etc/coredns/Corefile"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "dns",
                                                        "containerPort": 53,
                                                        "protocol": "UDP"
                                                    },
                                                    {
                                                        "name": "dns-tcp",
                                                        "containerPort": 53,
                                                        "protocol": "TCP"
                                                    },
                                                    {
                                                        "name": "metrics",
                                                        "containerPort": 9153,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "limits": {
                                                        "memory": "170Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "100m",
                                                        "memory": "70Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "readOnly": true,
                                                        "mountPath": "/etc/coredns"
                                                    },
                                                    {
                                                        "name": "kube-api-access-9rmqw",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/health",
                                                        "port": 8080,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 60,
                                                    "timeoutSeconds": 5,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 5
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/ready",
                                                        "port": 8181,
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "add": [
                                                            "NET_BIND_SERVICE"
                                                        ],
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "Default",
                                        "serviceAccountName": "coredns",
                                        "serviceAccount": "coredns",
                                        "nodeName": "ip-10-8-110-61.ec2.internal",
                                        "securityContext": {},
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchExpressions": [
                                                                {
                                                                    "key": "kubernetes.io/os",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "linux"
                                                                    ]
                                                                },
                                                                {
                                                                    "key": "kubernetes.io/arch",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "amd64",
                                                                        "arm64"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "podAntiAffinity": {
                                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                                    {
                                                        "weight": 100,
                                                        "podAffinityTerm": {
                                                            "labelSelector": {
                                                                "matchExpressions": [
                                                                    {
                                                                        "key": "k8s-app",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "kube-dns"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "topologyKey": "kubernetes.io/hostname"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node-role.kubernetes.io/control-plane",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "CriticalAddonsOnly",
                                                "operator": "Exists"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priorityClassName": "system-cluster-critical",
                                        "priority": 2000000000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority",
                                        "topologySpreadConstraints": [
                                            {
                                                "maxSkew": 1,
                                                "topologyKey": "topology.kubernetes.io/zone",
                                                "whenUnsatisfiable": "ScheduleAnyway",
                                                "labelSelector": {
                                                    "matchLabels": {
                                                        "k8s-app": "kube-dns"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            }
                                        ],
                                        "hostIP": "10.8.110.61",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "podIP": "10.8.101.22",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.101.22"
                                            }
                                        ],
                                        "startTime": "2025-06-11T16:48:01Z",
                                        "containerStatuses": [
                                            {
                                                "name": "coredns",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:48:04Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:d21885a6632343ecd25d468b54681a0bd512055174bb17bc35a08cb38a965f12",
                                                "containerID": "containerd://29b08c74ff6bafca3dc28d5ae385d9de6f1b05917bad29ec08b3c6a1b2e8a1bc",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "8263a0efcf4e10028dc1b791e217ba570670494f222b93c6a85b6f4d4d86f5fc"
                        }
                    },
                    "statefulSets": {},
                    "daemonSets": {
                        "aws-node": {
                            "daemonSet": {
                                "metadata": {
                                    "name": "aws-node",
                                    "namespace": "kube-system",
                                    "uid": "9b848bba-5997-48bc-92c7-e3bba4b6d9ba",
                                    "resourceVersion": "1573",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T16:42:45Z",
                                    "labels": {
                                        "app.kubernetes.io/instance": "aws-vpc-cni",
                                        "app.kubernetes.io/managed-by": "Helm",
                                        "app.kubernetes.io/name": "aws-node",
                                        "app.kubernetes.io/version": "v1.19.0",
                                        "helm.sh/chart": "aws-vpc-cni-1.19.0",
                                        "k8s-app": "aws-node"
                                    },
                                    "annotations": {
                                        "deprecated.daemonset.template.generation": "1"
                                    },
                                    "managedFields": [
                                        {
                                            "manager": "eks",
                                            "operation": "Apply",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T16:42:45Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:labels": {
                                                        "f:app.kubernetes.io/instance": {},
                                                        "f:app.kubernetes.io/managed-by": {},
                                                        "f:app.kubernetes.io/name": {},
                                                        "f:app.kubernetes.io/version": {},
                                                        "f:helm.sh/chart": {},
                                                        "f:k8s-app": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                "f:app.kubernetes.io/instance": {},
                                                                "f:app.kubernetes.io/name": {},
                                                                "f:k8s-app": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:affinity": {
                                                                "f:nodeAffinity": {
                                                                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                                }
                                                            },
                                                            "f:containers": {
                                                                "k:{\"name\":\"aws-eks-nodeagent\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:env": {
                                                                        "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:valueFrom": {
                                                                                "f:fieldRef": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:name": {},
                                                                    "f:resources": {
                                                                        "f:requests": {
                                                                            "f:cpu": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        "f:capabilities": {
                                                                            "f:add": {}
                                                                        },
                                                                        "f:privileged": {}
                                                                    },
                                                                    "f:volumeMounts": {
                                                                        "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/var/log/aws-routed-eni\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        }
                                                                    }
                                                                },
                                                                "k:{\"name\":\"aws-node\"}": {
                                                                    ".": {},
                                                                    "f:env": {
                                                                        "k:{\"name\":\"ADDITIONAL_ENI_TAGS\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"ANNOTATE_POD_IP\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_ENI_MTU\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"DISABLE_INTROSPECTION\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"DISABLE_METRICS\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"DISABLE_NETWORK_RESOURCE_PROVISIONING\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"ENABLE_IPv4\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"ENABLE_POD_ENI\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"ENABLE_PREFIX_DELEGATION\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"ENABLE_SUBNET_DISCOVERY\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:valueFrom": {
                                                                                "f:fieldRef": {}
                                                                            }
                                                                        },
                                                                        "k:{\"name\":\"MY_POD_NAME\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:valueFrom": {
                                                                                "f:fieldRef": {}
                                                                            }
                                                                        },
                                                                        "k:{\"name\":\"NETWORK_POLICY_ENFORCING_MODE\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"VPC_CNI_VERSION\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"VPC_ID\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"WARM_ENI_TARGET\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"WARM_PREFIX_TARGET\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        }
                                                                    },
                                                                    "f:image": {},
                                                                    "f:livenessProbe": {
                                                                        "f:exec": {
                                                                            "f:command": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        "k:{\"containerPort\":61678,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        "f:exec": {
                                                                            "f:command": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        "f:requests": {
                                                                            "f:cpu": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        "f:capabilities": {
                                                                            "f:add": {}
                                                                        }
                                                                    },
                                                                    "f:volumeMounts": {
                                                                        "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/host/var/log/aws-routed-eni\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:hostNetwork": {},
                                                            "f:initContainers": {
                                                                "k:{\"name\":\"aws-vpc-cni-init\"}": {
                                                                    ".": {},
                                                                    "f:env": {
                                                                        "k:{\"name\":\"DISABLE_TCP_EARLY_DEMUX\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        },
                                                                        "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:value": {}
                                                                        }
                                                                    },
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:name": {},
                                                                    "f:resources": {
                                                                        "f:requests": {
                                                                            "f:cpu": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        "f:privileged": {}
                                                                    },
                                                                    "f:volumeMounts": {
                                                                        "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:priorityClassName": {},
                                                            "f:securityContext": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:tolerations": {},
                                                            "f:volumes": {
                                                                "k:{\"name\":\"bpf-pin-path\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        "f:path": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"cni-bin-dir\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        "f:path": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"cni-net-dir\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        "f:path": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"log-dir\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        "f:path": {},
                                                                        "f:type": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"run-dir\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        "f:path": {},
                                                                        "f:type": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"xtables-lock\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        "f:path": {},
                                                                        "f:type": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "f:updateStrategy": {
                                                        "f:rollingUpdate": {
                                                            "f:maxUnavailable": {}
                                                        },
                                                        "f:type": {}
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T16:48:01Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:currentNumberScheduled": {},
                                                    "f:desiredNumberScheduled": {},
                                                    "f:numberAvailable": {},
                                                    "f:numberReady": {},
                                                    "f:observedGeneration": {},
                                                    "f:updatedNumberScheduled": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "selector": {
                                        "matchLabels": {
                                            "k8s-app": "aws-node"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "app.kubernetes.io/instance": "aws-vpc-cni",
                                                "app.kubernetes.io/name": "aws-node",
                                                "k8s-app": "aws-node"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "bpf-pin-path",
                                                    "hostPath": {
                                                        "path": "/sys/fs/bpf",
                                                        "type": ""
                                                    }
                                                },
                                                {
                                                    "name": "cni-bin-dir",
                                                    "hostPath": {
                                                        "path": "/opt/cni/bin",
                                                        "type": ""
                                                    }
                                                },
                                                {
                                                    "name": "cni-net-dir",
                                                    "hostPath": {
                                                        "path": "/etc/cni/net.d",
                                                        "type": ""
                                                    }
                                                },
                                                {
                                                    "name": "log-dir",
                                                    "hostPath": {
                                                        "path": "/var/log/aws-routed-eni",
                                                        "type": "DirectoryOrCreate"
                                                    }
                                                },
                                                {
                                                    "name": "run-dir",
                                                    "hostPath": {
                                                        "path": "/var/run/aws-node",
                                                        "type": "DirectoryOrCreate"
                                                    }
                                                },
                                                {
                                                    "name": "xtables-lock",
                                                    "hostPath": {
                                                        "path": "/run/xtables.lock",
                                                        "type": "FileOrCreate"
                                                    }
                                                }
                                            ],
                                            "initContainers": [
                                                {
                                                    "name": "aws-vpc-cni-init",
                                                    "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1",
                                                    "env": [
                                                        {
                                                            "name": "DISABLE_TCP_EARLY_DEMUX",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "ENABLE_IPv6",
                                                            "value": "false"
                                                        }
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "25m"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "cni-bin-dir",
                                                            "mountPath": "/host/opt/cni/bin"
                                                        }
                                                    ],
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "Always",
                                                    "securityContext": {
                                                        "privileged": true
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "aws-node",
                                                    "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1",
                                                    "ports": [
                                                        {
                                                            "name": "metrics",
                                                            "containerPort": 61678,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "env": [
                                                        {
                                                            "name": "ADDITIONAL_ENI_TAGS",
                                                            "value": "{}"
                                                        },
                                                        {
                                                            "name": "ANNOTATE_POD_IP",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                                            "value": "true"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_ENI_MTU",
                                                            "value": "9001"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                                            "value": "DEBUG"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                                            "value": "/host/var/log/aws-routed-eni/ipamd.log"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                                            "value": "prng"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                                            "value": "eni"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                                            "value": "/var/log/aws-routed-eni/plugin.log"
                                                        },
                                                        {
                                                            "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                                            "value": "DEBUG"
                                                        },
                                                        {
                                                            "name": "CLUSTER_NAME",
                                                            "value": "upprom-test-ph"
                                                        },
                                                        {
                                                            "name": "DISABLE_INTROSPECTION",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "DISABLE_METRICS",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "ENABLE_IPv4",
                                                            "value": "true"
                                                        },
                                                        {
                                                            "name": "ENABLE_IPv6",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "ENABLE_POD_ENI",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "ENABLE_PREFIX_DELEGATION",
                                                            "value": "false"
                                                        },
                                                        {
                                                            "name": "ENABLE_SUBNET_DISCOVERY",
                                                            "value": "true"
                                                        },
                                                        {
                                                            "name": "NETWORK_POLICY_ENFORCING_MODE",
                                                            "value": "standard"
                                                        },
                                                        {
                                                            "name": "VPC_CNI_VERSION",
                                                            "value": "v1.19.0"
                                                        },
                                                        {
                                                            "name": "VPC_ID",
                                                            "value": "vpc-010b580eeadcc56b5"
                                                        },
                                                        {
                                                            "name": "WARM_ENI_TARGET",
                                                            "value": "1"
                                                        },
                                                        {
                                                            "name": "WARM_PREFIX_TARGET",
                                                            "value": "1"
                                                        },
                                                        {
                                                            "name": "MY_NODE_NAME",
                                                            "valueFrom": {
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "spec.nodeName"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MY_POD_NAME",
                                                            "valueFrom": {
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "metadata.name"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "25m"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "cni-bin-dir",
                                                            "mountPath": "/host/opt/cni/bin"
                                                        },
                                                        {
                                                            "name": "cni-net-dir",
                                                            "mountPath": "/host/etc/cni/net.d"
                                                        },
                                                        {
                                                            "name": "log-dir",
                                                            "mountPath": "/host/var/log/aws-routed-eni"
                                                        },
                                                        {
                                                            "name": "run-dir",
                                                            "mountPath": "/var/run/aws-node"
                                                        },
                                                        {
                                                            "name": "xtables-lock",
                                                            "mountPath": "/run/xtables.lock"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "exec": {
                                                            "command": [
                                                                "/app/grpc-health-probe",
                                                                "-addr=:50051",
                                                                "-connect-timeout=5s",
                                                                "-rpc-timeout=5s"
                                                            ]
                                                        },
                                                        "initialDelaySeconds": 60,
                                                        "timeoutSeconds": 10,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "readinessProbe": {
                                                        "exec": {
                                                            "command": [
                                                                "/app/grpc-health-probe",
                                                                "-addr=:50051",
                                                                "-connect-timeout=5s",
                                                                "-rpc-timeout=5s"
                                                            ]
                                                        },
                                                        "initialDelaySeconds": 1,
                                                        "timeoutSeconds": 10,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "add": [
                                                                "NET_ADMIN",
                                                                "NET_RAW"
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "aws-eks-nodeagent",
                                                    "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1",
                                                    "args": [
                                                        "--enable-ipv6=false",
                                                        "--enable-network-policy=false",
                                                        "--enable-cloudwatch-logs=false",
                                                        "--enable-policy-event-logs=false",
                                                        "--log-file=/var/log/aws-routed-eni/network-policy-agent.log",
                                                        "--metrics-bind-addr=:8162",
                                                        "--health-probe-bind-addr=:8163",
                                                        "--conntrack-cache-cleanup-period=300"
                                                    ],
                                                    "env": [
                                                        {
                                                            "name": "MY_NODE_NAME",
                                                            "valueFrom": {
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "spec.nodeName"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "25m"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "cni-bin-dir",
                                                            "mountPath": "/host/opt/cni/bin"
                                                        },
                                                        {
                                                            "name": "bpf-pin-path",
                                                            "mountPath": "/sys/fs/bpf"
                                                        },
                                                        {
                                                            "name": "log-dir",
                                                            "mountPath": "/var/log/aws-routed-eni"
                                                        },
                                                        {
                                                            "name": "run-dir",
                                                            "mountPath": "/var/run/aws-node"
                                                        }
                                                    ],
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "Always",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "add": [
                                                                "NET_ADMIN"
                                                            ]
                                                        },
                                                        "privileged": true
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 10,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "aws-node",
                                            "serviceAccount": "aws-node",
                                            "hostNetwork": true,
                                            "securityContext": {},
                                            "affinity": {
                                                "nodeAffinity": {
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                        "nodeSelectorTerms": [
                                                            {
                                                                "matchExpressions": [
                                                                    {
                                                                        "key": "kubernetes.io/os",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "linux"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "key": "kubernetes.io/arch",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "amd64",
                                                                            "arm64"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "key": "eks.amazonaws.com/compute-type",
                                                                        "operator": "NotIn",
                                                                        "values": [
                                                                            "fargate",
                                                                            "hybrid",
                                                                            "auto"
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "schedulerName": "default-scheduler",
                                            "tolerations": [
                                                {
                                                    "operator": "Exists"
                                                }
                                            ],
                                            "priorityClassName": "system-node-critical"
                                        }
                                    },
                                    "updateStrategy": {
                                        "type": "RollingUpdate",
                                        "rollingUpdate": {
                                            "maxUnavailable": "10%",
                                            "maxSurge": 0
                                        }
                                    },
                                    "revisionHistoryLimit": 10
                                },
                                "status": {
                                    "currentNumberScheduled": 2,
                                    "numberMisscheduled": 0,
                                    "desiredNumberScheduled": 2,
                                    "numberReady": 2,
                                    "observedGeneration": 1,
                                    "updatedNumberScheduled": 2,
                                    "numberAvailable": 2
                                }
                            },
                            "pods": {
                                "kube-system/aws-node-vvzsj": {
                                    "metadata": {
                                        "name": "aws-node-vvzsj",
                                        "generateName": "aws-node-",
                                        "namespace": "kube-system",
                                        "uid": "1f2985aa-0edc-4fce-acfb-e26a3b49c134",
                                        "resourceVersion": "1563",
                                        "creationTimestamp": "2025-06-11T16:47:42Z",
                                        "labels": {
                                            "app.kubernetes.io/instance": "aws-vpc-cni",
                                            "app.kubernetes.io/name": "aws-node",
                                            "controller-revision-hash": "6b64f5765",
                                            "k8s-app": "aws-node",
                                            "pod-template-generation": "1"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "DaemonSet",
                                                "name": "aws-node",
                                                "uid": "9b848bba-5997-48bc-92c7-e3bba4b6d9ba",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:42Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:controller-revision-hash": {},
                                                            "f:k8s-app": {},
                                                            "f:pod-template-generation": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"9b848bba-5997-48bc-92c7-e3bba4b6d9ba\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:containers": {
                                                            "k:{\"name\":\"aws-eks-nodeagent\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:fieldRef": {}
                                                                        }
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:add": {}
                                                                    },
                                                                    "f:privileged": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/log/aws-routed-eni\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"aws-node\"}": {
                                                                ".": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"ADDITIONAL_ENI_TAGS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ANNOTATE_POD_IP\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_ENI_MTU\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"DISABLE_INTROSPECTION\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"DISABLE_METRICS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"DISABLE_NETWORK_RESOURCE_PROVISIONING\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_IPv4\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_POD_ENI\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_PREFIX_DELEGATION\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_SUBNET_DISCOVERY\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:fieldRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MY_POD_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:fieldRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"NETWORK_POLICY_ENFORCING_MODE\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"VPC_CNI_VERSION\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"VPC_ID\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"WARM_ENI_TARGET\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"WARM_PREFIX_TARGET\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:exec": {
                                                                        ".": {},
                                                                        "f:command": {}
                                                                    },
                                                                    "f:failureThreshold": {},
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":61678,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:hostPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:exec": {
                                                                        ".": {},
                                                                        "f:command": {}
                                                                    },
                                                                    "f:failureThreshold": {},
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:add": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/host/var/log/aws-routed-eni\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:hostNetwork": {},
                                                        "f:initContainers": {
                                                            ".": {},
                                                            "k:{\"name\":\"aws-vpc-cni-init\"}": {
                                                                ".": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"DISABLE_TCP_EARLY_DEMUX\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:privileged": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"bpf-pin-path\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"cni-bin-dir\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"cni-net-dir\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"log-dir\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"run-dir\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"xtables-lock\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:48:01Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:initContainerStatuses": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.110.61\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "bpf-pin-path",
                                                "hostPath": {
                                                    "path": "/sys/fs/bpf",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "cni-bin-dir",
                                                "hostPath": {
                                                    "path": "/opt/cni/bin",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "cni-net-dir",
                                                "hostPath": {
                                                    "path": "/etc/cni/net.d",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "log-dir",
                                                "hostPath": {
                                                    "path": "/var/log/aws-routed-eni",
                                                    "type": "DirectoryOrCreate"
                                                }
                                            },
                                            {
                                                "name": "run-dir",
                                                "hostPath": {
                                                    "path": "/var/run/aws-node",
                                                    "type": "DirectoryOrCreate"
                                                }
                                            },
                                            {
                                                "name": "xtables-lock",
                                                "hostPath": {
                                                    "path": "/run/xtables.lock",
                                                    "type": "FileOrCreate"
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-t74bc",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "initContainers": [
                                            {
                                                "name": "aws-vpc-cni-init",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1",
                                                "env": [
                                                    {
                                                        "name": "DISABLE_TCP_EARLY_DEMUX",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_IPv6",
                                                        "value": "false"
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "25m"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "cni-bin-dir",
                                                        "mountPath": "/host/opt/cni/bin"
                                                    },
                                                    {
                                                        "name": "kube-api-access-t74bc",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "Always",
                                                "securityContext": {
                                                    "privileged": true
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "aws-node",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1",
                                                "ports": [
                                                    {
                                                        "name": "metrics",
                                                        "hostPort": 61678,
                                                        "containerPort": 61678,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "env": [
                                                    {
                                                        "name": "ADDITIONAL_ENI_TAGS",
                                                        "value": "{}"
                                                    },
                                                    {
                                                        "name": "ANNOTATE_POD_IP",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                                        "value": "true"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_ENI_MTU",
                                                        "value": "9001"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                                        "value": "DEBUG"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                                        "value": "/host/var/log/aws-routed-eni/ipamd.log"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                                        "value": "prng"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                                        "value": "eni"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                                        "value": "/var/log/aws-routed-eni/plugin.log"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                                        "value": "DEBUG"
                                                    },
                                                    {
                                                        "name": "CLUSTER_NAME",
                                                        "value": "upprom-test-ph"
                                                    },
                                                    {
                                                        "name": "DISABLE_INTROSPECTION",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "DISABLE_METRICS",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_IPv4",
                                                        "value": "true"
                                                    },
                                                    {
                                                        "name": "ENABLE_IPv6",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_POD_ENI",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_PREFIX_DELEGATION",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_SUBNET_DISCOVERY",
                                                        "value": "true"
                                                    },
                                                    {
                                                        "name": "NETWORK_POLICY_ENFORCING_MODE",
                                                        "value": "standard"
                                                    },
                                                    {
                                                        "name": "VPC_CNI_VERSION",
                                                        "value": "v1.19.0"
                                                    },
                                                    {
                                                        "name": "VPC_ID",
                                                        "value": "vpc-010b580eeadcc56b5"
                                                    },
                                                    {
                                                        "name": "WARM_ENI_TARGET",
                                                        "value": "1"
                                                    },
                                                    {
                                                        "name": "WARM_PREFIX_TARGET",
                                                        "value": "1"
                                                    },
                                                    {
                                                        "name": "MY_NODE_NAME",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "apiVersion": "v1",
                                                                "fieldPath": "spec.nodeName"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MY_POD_NAME",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "apiVersion": "v1",
                                                                "fieldPath": "metadata.name"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "25m"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "cni-bin-dir",
                                                        "mountPath": "/host/opt/cni/bin"
                                                    },
                                                    {
                                                        "name": "cni-net-dir",
                                                        "mountPath": "/host/etc/cni/net.d"
                                                    },
                                                    {
                                                        "name": "log-dir",
                                                        "mountPath": "/host/var/log/aws-routed-eni"
                                                    },
                                                    {
                                                        "name": "run-dir",
                                                        "mountPath": "/var/run/aws-node"
                                                    },
                                                    {
                                                        "name": "xtables-lock",
                                                        "mountPath": "/run/xtables.lock"
                                                    },
                                                    {
                                                        "name": "kube-api-access-t74bc",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "exec": {
                                                        "command": [
                                                            "/app/grpc-health-probe",
                                                            "-addr=:50051",
                                                            "-connect-timeout=5s",
                                                            "-rpc-timeout=5s"
                                                        ]
                                                    },
                                                    "initialDelaySeconds": 60,
                                                    "timeoutSeconds": 10,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "exec": {
                                                        "command": [
                                                            "/app/grpc-health-probe",
                                                            "-addr=:50051",
                                                            "-connect-timeout=5s",
                                                            "-rpc-timeout=5s"
                                                        ]
                                                    },
                                                    "initialDelaySeconds": 1,
                                                    "timeoutSeconds": 10,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "add": [
                                                            "NET_ADMIN",
                                                            "NET_RAW"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "name": "aws-eks-nodeagent",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1",
                                                "args": [
                                                    "--enable-ipv6=false",
                                                    "--enable-network-policy=false",
                                                    "--enable-cloudwatch-logs=false",
                                                    "--enable-policy-event-logs=false",
                                                    "--log-file=/var/log/aws-routed-eni/network-policy-agent.log",
                                                    "--metrics-bind-addr=:8162",
                                                    "--health-probe-bind-addr=:8163",
                                                    "--conntrack-cache-cleanup-period=300"
                                                ],
                                                "env": [
                                                    {
                                                        "name": "MY_NODE_NAME",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "apiVersion": "v1",
                                                                "fieldPath": "spec.nodeName"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "25m"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "cni-bin-dir",
                                                        "mountPath": "/host/opt/cni/bin"
                                                    },
                                                    {
                                                        "name": "bpf-pin-path",
                                                        "mountPath": "/sys/fs/bpf"
                                                    },
                                                    {
                                                        "name": "log-dir",
                                                        "mountPath": "/var/log/aws-routed-eni"
                                                    },
                                                    {
                                                        "name": "run-dir",
                                                        "mountPath": "/var/run/aws-node"
                                                    },
                                                    {
                                                        "name": "kube-api-access-t74bc",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "Always",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "add": [
                                                            "NET_ADMIN"
                                                        ]
                                                    },
                                                    "privileged": true
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 10,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "aws-node",
                                        "serviceAccount": "aws-node",
                                        "nodeName": "ip-10-8-110-61.ec2.internal",
                                        "hostNetwork": true,
                                        "securityContext": {},
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchFields": [
                                                                {
                                                                    "key": "metadata.name",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "ip-10-8-110-61.ec2.internal"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "operator": "Exists"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/disk-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/memory-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/pid-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unschedulable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/network-unavailable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            }
                                        ],
                                        "priorityClassName": "system-node-critical",
                                        "priority": 2000001000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:57Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:57Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:42Z"
                                            }
                                        ],
                                        "hostIP": "10.8.110.61",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "podIP": "10.8.110.61",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "startTime": "2025-06-11T16:47:42Z",
                                        "initContainerStatuses": [
                                            {
                                                "name": "aws-vpc-cni-init",
                                                "state": {
                                                    "terminated": {
                                                        "exitCode": 0,
                                                        "reason": "Completed",
                                                        "startedAt": "2025-06-11T16:47:56Z",
                                                        "finishedAt": "2025-06-11T16:47:56Z",
                                                        "containerID": "containerd://eae694a562074a807c0a8da704c3884f62f0e142944d6cf797c49d80a1e1f15b"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:ce36e6fc8457a3c79eab29ad7ca86ebc9220056c443e15502eeab7ceeef8496f",
                                                "containerID": "containerd://eae694a562074a807c0a8da704c3884f62f0e142944d6cf797c49d80a1e1f15b",
                                                "started": false
                                            }
                                        ],
                                        "containerStatuses": [
                                            {
                                                "name": "aws-eks-nodeagent",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:48:01Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent@sha256:f3280f090b6c5d3128357d8710db237931f5e1089e8017ab3d9cece429d77954",
                                                "containerID": "containerd://e3c813b6840f5ff014cd685fa8bb68cab2a64206b85e1dd4316c0f4efe6171a7",
                                                "started": true
                                            },
                                            {
                                                "name": "aws-node",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:47:59Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:efada7e5222a3376dc170b43b569f4dea762fd58186467c233b512bd6ab5415b",
                                                "containerID": "containerd://5a46127e9c90bf34941c9e639d643ca4039b738100dde6f7aa9d145fd4ed21d1",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                },
                                "kube-system/aws-node-xkmpc": {
                                    "metadata": {
                                        "name": "aws-node-xkmpc",
                                        "generateName": "aws-node-",
                                        "namespace": "kube-system",
                                        "uid": "c7db57ac-e048-4129-a4a0-b27ac8766191",
                                        "resourceVersion": "1572",
                                        "creationTimestamp": "2025-06-11T16:47:41Z",
                                        "labels": {
                                            "app.kubernetes.io/instance": "aws-vpc-cni",
                                            "app.kubernetes.io/name": "aws-node",
                                            "controller-revision-hash": "6b64f5765",
                                            "k8s-app": "aws-node",
                                            "pod-template-generation": "1"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "DaemonSet",
                                                "name": "aws-node",
                                                "uid": "9b848bba-5997-48bc-92c7-e3bba4b6d9ba",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:41Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app.kubernetes.io/instance": {},
                                                            "f:app.kubernetes.io/name": {},
                                                            "f:controller-revision-hash": {},
                                                            "f:k8s-app": {},
                                                            "f:pod-template-generation": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"9b848bba-5997-48bc-92c7-e3bba4b6d9ba\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:containers": {
                                                            "k:{\"name\":\"aws-eks-nodeagent\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:fieldRef": {}
                                                                        }
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:add": {}
                                                                    },
                                                                    "f:privileged": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/log/aws-routed-eni\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"aws-node\"}": {
                                                                ".": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"ADDITIONAL_ENI_TAGS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ANNOTATE_POD_IP\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_ENI_MTU\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"DISABLE_INTROSPECTION\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"DISABLE_METRICS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"DISABLE_NETWORK_RESOURCE_PROVISIONING\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_IPv4\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_POD_ENI\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_PREFIX_DELEGATION\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_SUBNET_DISCOVERY\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:fieldRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MY_POD_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:fieldRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"NETWORK_POLICY_ENFORCING_MODE\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"VPC_CNI_VERSION\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"VPC_ID\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"WARM_ENI_TARGET\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"WARM_PREFIX_TARGET\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:exec": {
                                                                        ".": {},
                                                                        "f:command": {}
                                                                    },
                                                                    "f:failureThreshold": {},
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":61678,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:hostPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:exec": {
                                                                        ".": {},
                                                                        "f:command": {}
                                                                    },
                                                                    "f:failureThreshold": {},
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:add": {}
                                                                    }
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/host/var/log/aws-routed-eni\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:hostNetwork": {},
                                                        "f:initContainers": {
                                                            ".": {},
                                                            "k:{\"name\":\"aws-vpc-cni-init\"}": {
                                                                ".": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"DISABLE_TCP_EARLY_DEMUX\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"ENABLE_IPv6\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:privileged": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"bpf-pin-path\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"cni-bin-dir\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"cni-net-dir\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"log-dir\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"run-dir\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"xtables-lock\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:48:01Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:initContainerStatuses": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.143.217\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "bpf-pin-path",
                                                "hostPath": {
                                                    "path": "/sys/fs/bpf",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "cni-bin-dir",
                                                "hostPath": {
                                                    "path": "/opt/cni/bin",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "cni-net-dir",
                                                "hostPath": {
                                                    "path": "/etc/cni/net.d",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "log-dir",
                                                "hostPath": {
                                                    "path": "/var/log/aws-routed-eni",
                                                    "type": "DirectoryOrCreate"
                                                }
                                            },
                                            {
                                                "name": "run-dir",
                                                "hostPath": {
                                                    "path": "/var/run/aws-node",
                                                    "type": "DirectoryOrCreate"
                                                }
                                            },
                                            {
                                                "name": "xtables-lock",
                                                "hostPath": {
                                                    "path": "/run/xtables.lock",
                                                    "type": "FileOrCreate"
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-h52cz",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "initContainers": [
                                            {
                                                "name": "aws-vpc-cni-init",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1",
                                                "env": [
                                                    {
                                                        "name": "DISABLE_TCP_EARLY_DEMUX",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_IPv6",
                                                        "value": "false"
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "25m"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "cni-bin-dir",
                                                        "mountPath": "/host/opt/cni/bin"
                                                    },
                                                    {
                                                        "name": "kube-api-access-h52cz",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "Always",
                                                "securityContext": {
                                                    "privileged": true
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "aws-node",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1",
                                                "ports": [
                                                    {
                                                        "name": "metrics",
                                                        "hostPort": 61678,
                                                        "containerPort": 61678,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "env": [
                                                    {
                                                        "name": "ADDITIONAL_ENI_TAGS",
                                                        "value": "{}"
                                                    },
                                                    {
                                                        "name": "ANNOTATE_POD_IP",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                                        "value": "true"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_ENI_MTU",
                                                        "value": "9001"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                                        "value": "DEBUG"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                                        "value": "/host/var/log/aws-routed-eni/ipamd.log"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                                        "value": "prng"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                                        "value": "eni"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                                        "value": "/var/log/aws-routed-eni/plugin.log"
                                                    },
                                                    {
                                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                                        "value": "DEBUG"
                                                    },
                                                    {
                                                        "name": "CLUSTER_NAME",
                                                        "value": "upprom-test-ph"
                                                    },
                                                    {
                                                        "name": "DISABLE_INTROSPECTION",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "DISABLE_METRICS",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_IPv4",
                                                        "value": "true"
                                                    },
                                                    {
                                                        "name": "ENABLE_IPv6",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_POD_ENI",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_PREFIX_DELEGATION",
                                                        "value": "false"
                                                    },
                                                    {
                                                        "name": "ENABLE_SUBNET_DISCOVERY",
                                                        "value": "true"
                                                    },
                                                    {
                                                        "name": "NETWORK_POLICY_ENFORCING_MODE",
                                                        "value": "standard"
                                                    },
                                                    {
                                                        "name": "VPC_CNI_VERSION",
                                                        "value": "v1.19.0"
                                                    },
                                                    {
                                                        "name": "VPC_ID",
                                                        "value": "vpc-010b580eeadcc56b5"
                                                    },
                                                    {
                                                        "name": "WARM_ENI_TARGET",
                                                        "value": "1"
                                                    },
                                                    {
                                                        "name": "WARM_PREFIX_TARGET",
                                                        "value": "1"
                                                    },
                                                    {
                                                        "name": "MY_NODE_NAME",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "apiVersion": "v1",
                                                                "fieldPath": "spec.nodeName"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MY_POD_NAME",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "apiVersion": "v1",
                                                                "fieldPath": "metadata.name"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "25m"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "cni-bin-dir",
                                                        "mountPath": "/host/opt/cni/bin"
                                                    },
                                                    {
                                                        "name": "cni-net-dir",
                                                        "mountPath": "/host/etc/cni/net.d"
                                                    },
                                                    {
                                                        "name": "log-dir",
                                                        "mountPath": "/host/var/log/aws-routed-eni"
                                                    },
                                                    {
                                                        "name": "run-dir",
                                                        "mountPath": "/var/run/aws-node"
                                                    },
                                                    {
                                                        "name": "xtables-lock",
                                                        "mountPath": "/run/xtables.lock"
                                                    },
                                                    {
                                                        "name": "kube-api-access-h52cz",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "exec": {
                                                        "command": [
                                                            "/app/grpc-health-probe",
                                                            "-addr=:50051",
                                                            "-connect-timeout=5s",
                                                            "-rpc-timeout=5s"
                                                        ]
                                                    },
                                                    "initialDelaySeconds": 60,
                                                    "timeoutSeconds": 10,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "readinessProbe": {
                                                    "exec": {
                                                        "command": [
                                                            "/app/grpc-health-probe",
                                                            "-addr=:50051",
                                                            "-connect-timeout=5s",
                                                            "-rpc-timeout=5s"
                                                        ]
                                                    },
                                                    "initialDelaySeconds": 1,
                                                    "timeoutSeconds": 10,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "add": [
                                                            "NET_ADMIN",
                                                            "NET_RAW"
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "name": "aws-eks-nodeagent",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1",
                                                "args": [
                                                    "--enable-ipv6=false",
                                                    "--enable-network-policy=false",
                                                    "--enable-cloudwatch-logs=false",
                                                    "--enable-policy-event-logs=false",
                                                    "--log-file=/var/log/aws-routed-eni/network-policy-agent.log",
                                                    "--metrics-bind-addr=:8162",
                                                    "--health-probe-bind-addr=:8163",
                                                    "--conntrack-cache-cleanup-period=300"
                                                ],
                                                "env": [
                                                    {
                                                        "name": "MY_NODE_NAME",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "apiVersion": "v1",
                                                                "fieldPath": "spec.nodeName"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "25m"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "cni-bin-dir",
                                                        "mountPath": "/host/opt/cni/bin"
                                                    },
                                                    {
                                                        "name": "bpf-pin-path",
                                                        "mountPath": "/sys/fs/bpf"
                                                    },
                                                    {
                                                        "name": "log-dir",
                                                        "mountPath": "/var/log/aws-routed-eni"
                                                    },
                                                    {
                                                        "name": "run-dir",
                                                        "mountPath": "/var/run/aws-node"
                                                    },
                                                    {
                                                        "name": "kube-api-access-h52cz",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "Always",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "add": [
                                                            "NET_ADMIN"
                                                        ]
                                                    },
                                                    "privileged": true
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 10,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "aws-node",
                                        "serviceAccount": "aws-node",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "hostNetwork": true,
                                        "securityContext": {},
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchFields": [
                                                                {
                                                                    "key": "metadata.name",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "ip-10-8-143-217.ec2.internal"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "operator": "Exists"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/disk-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/memory-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/pid-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unschedulable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/network-unavailable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            }
                                        ],
                                        "priorityClassName": "system-node-critical",
                                        "priority": 2000001000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:57Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:57Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:42Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.143.217",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "startTime": "2025-06-11T16:47:42Z",
                                        "initContainerStatuses": [
                                            {
                                                "name": "aws-vpc-cni-init",
                                                "state": {
                                                    "terminated": {
                                                        "exitCode": 0,
                                                        "reason": "Completed",
                                                        "startedAt": "2025-06-11T16:47:57Z",
                                                        "finishedAt": "2025-06-11T16:47:57Z",
                                                        "containerID": "containerd://647155c36b5537335a875b8a9809ac9c3fa9a3fb6cdc85d5896a7f2540c62269"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.19.0-eksbuild.1",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:ce36e6fc8457a3c79eab29ad7ca86ebc9220056c443e15502eeab7ceeef8496f",
                                                "containerID": "containerd://647155c36b5537335a875b8a9809ac9c3fa9a3fb6cdc85d5896a7f2540c62269",
                                                "started": false
                                            }
                                        ],
                                        "containerStatuses": [
                                            {
                                                "name": "aws-eks-nodeagent",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:48:01Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent:v1.1.5-eksbuild.1",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-network-policy-agent@sha256:f3280f090b6c5d3128357d8710db237931f5e1089e8017ab3d9cece429d77954",
                                                "containerID": "containerd://ce1a7334d1d20a932bec2a7727b4a5dbc789fe4ece8ebaa110ad124395e3f37e",
                                                "started": true
                                            },
                                            {
                                                "name": "aws-node",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:47:59Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.19.0-eksbuild.1",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:efada7e5222a3376dc170b43b569f4dea762fd58186467c233b512bd6ab5415b",
                                                "containerID": "containerd://688c1676403c8555d87f593b5122186af9a1fcbc089af03a1ba2bd96e96fdb34",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "f6bb12061f4fc8564a92610b26a77417ec00e4892d753598a2f51b2e726928e9"
                        },
                        "kube-proxy": {
                            "daemonSet": {
                                "metadata": {
                                    "name": "kube-proxy",
                                    "namespace": "kube-system",
                                    "uid": "e7a66e5c-c6ef-4024-8389-9861d4365da9",
                                    "resourceVersion": "1527",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T16:42:44Z",
                                    "labels": {
                                        "eks.amazonaws.com/component": "kube-proxy",
                                        "k8s-app": "kube-proxy"
                                    },
                                    "annotations": {
                                        "deprecated.daemonset.template.generation": "1"
                                    },
                                    "managedFields": [
                                        {
                                            "manager": "eks",
                                            "operation": "Apply",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T16:42:44Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:labels": {
                                                        "f:eks.amazonaws.com/component": {},
                                                        "f:k8s-app": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                "f:k8s-app": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:affinity": {
                                                                "f:nodeAffinity": {
                                                                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                                }
                                                            },
                                                            "f:containers": {
                                                                "k:{\"name\":\"kube-proxy\"}": {
                                                                    ".": {},
                                                                    "f:command": {},
                                                                    "f:env": {
                                                                        "k:{\"name\":\"NODE_NAME\"}": {
                                                                            ".": {},
                                                                            "f:name": {},
                                                                            "f:valueFrom": {
                                                                                "f:fieldRef": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "f:image": {},
                                                                    "f:name": {},
                                                                    "f:resources": {
                                                                        "f:requests": {
                                                                            "f:cpu": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        "f:privileged": {}
                                                                    },
                                                                    "f:volumeMounts": {
                                                                        "k:{\"mountPath\":\"/lib/modules\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/var/lib/kube-proxy-config/\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/var/lib/kube-proxy/\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {}
                                                                        },
                                                                        "k:{\"mountPath\":\"/var/log\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:hostNetwork": {},
                                                            "f:priorityClassName": {},
                                                            "f:serviceAccountName": {},
                                                            "f:tolerations": {},
                                                            "f:volumes": {
                                                                "k:{\"name\":\"config\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"kubeconfig\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"lib-modules\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        "f:path": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"varlog\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        "f:path": {}
                                                                    },
                                                                    "f:name": {}
                                                                },
                                                                "k:{\"name\":\"xtables-lock\"}": {
                                                                    ".": {},
                                                                    "f:hostPath": {
                                                                        "f:path": {},
                                                                        "f:type": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "f:updateStrategy": {
                                                        "f:rollingUpdate": {
                                                            "f:maxUnavailable": {}
                                                        },
                                                        "f:type": {}
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T16:47:57Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:currentNumberScheduled": {},
                                                    "f:desiredNumberScheduled": {},
                                                    "f:numberAvailable": {},
                                                    "f:numberReady": {},
                                                    "f:observedGeneration": {},
                                                    "f:updatedNumberScheduled": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "selector": {
                                        "matchLabels": {
                                            "k8s-app": "kube-proxy"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "k8s-app": "kube-proxy"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "varlog",
                                                    "hostPath": {
                                                        "path": "/var/log",
                                                        "type": ""
                                                    }
                                                },
                                                {
                                                    "name": "xtables-lock",
                                                    "hostPath": {
                                                        "path": "/run/xtables.lock",
                                                        "type": "FileOrCreate"
                                                    }
                                                },
                                                {
                                                    "name": "lib-modules",
                                                    "hostPath": {
                                                        "path": "/lib/modules",
                                                        "type": ""
                                                    }
                                                },
                                                {
                                                    "name": "kubeconfig",
                                                    "configMap": {
                                                        "name": "kube-proxy",
                                                        "defaultMode": 420
                                                    }
                                                },
                                                {
                                                    "name": "config",
                                                    "configMap": {
                                                        "name": "kube-proxy-config",
                                                        "defaultMode": 420
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "kube-proxy",
                                                    "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3",
                                                    "command": [
                                                        "kube-proxy",
                                                        "--v=2",
                                                        "--config=/var/lib/kube-proxy-config/config",
                                                        "--hostname-override=$(NODE_NAME)"
                                                    ],
                                                    "env": [
                                                        {
                                                            "name": "NODE_NAME",
                                                            "valueFrom": {
                                                                "fieldRef": {
                                                                    "apiVersion": "v1",
                                                                    "fieldPath": "spec.nodeName"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "resources": {
                                                        "requests": {
                                                            "cpu": "100m"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "varlog",
                                                            "mountPath": "/var/log"
                                                        },
                                                        {
                                                            "name": "xtables-lock",
                                                            "mountPath": "/run/xtables.lock"
                                                        },
                                                        {
                                                            "name": "lib-modules",
                                                            "readOnly": true,
                                                            "mountPath": "/lib/modules"
                                                        },
                                                        {
                                                            "name": "kubeconfig",
                                                            "mountPath": "/var/lib/kube-proxy/"
                                                        },
                                                        {
                                                            "name": "config",
                                                            "mountPath": "/var/lib/kube-proxy-config/"
                                                        }
                                                    ],
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "privileged": true
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "ClusterFirst",
                                            "serviceAccountName": "kube-proxy",
                                            "serviceAccount": "kube-proxy",
                                            "hostNetwork": true,
                                            "securityContext": {},
                                            "affinity": {
                                                "nodeAffinity": {
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                        "nodeSelectorTerms": [
                                                            {
                                                                "matchExpressions": [
                                                                    {
                                                                        "key": "kubernetes.io/os",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "linux"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "key": "kubernetes.io/arch",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "amd64",
                                                                            "arm64"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "key": "eks.amazonaws.com/compute-type",
                                                                        "operator": "NotIn",
                                                                        "values": [
                                                                            "fargate",
                                                                            "auto"
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "schedulerName": "default-scheduler",
                                            "tolerations": [
                                                {
                                                    "operator": "Exists"
                                                }
                                            ],
                                            "priorityClassName": "system-node-critical"
                                        }
                                    },
                                    "updateStrategy": {
                                        "type": "RollingUpdate",
                                        "rollingUpdate": {
                                            "maxUnavailable": "10%",
                                            "maxSurge": 0
                                        }
                                    },
                                    "revisionHistoryLimit": 10
                                },
                                "status": {
                                    "currentNumberScheduled": 2,
                                    "numberMisscheduled": 0,
                                    "desiredNumberScheduled": 2,
                                    "numberReady": 2,
                                    "observedGeneration": 1,
                                    "updatedNumberScheduled": 2,
                                    "numberAvailable": 2
                                }
                            },
                            "pods": {
                                "kube-system/kube-proxy-dvxxm": {
                                    "metadata": {
                                        "name": "kube-proxy-dvxxm",
                                        "generateName": "kube-proxy-",
                                        "namespace": "kube-system",
                                        "uid": "904e2489-e929-436f-a49a-ec09b82e3e7a",
                                        "resourceVersion": "1526",
                                        "creationTimestamp": "2025-06-11T16:47:42Z",
                                        "labels": {
                                            "controller-revision-hash": "65f976f6bf",
                                            "k8s-app": "kube-proxy",
                                            "pod-template-generation": "1"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "DaemonSet",
                                                "name": "kube-proxy",
                                                "uid": "e7a66e5c-c6ef-4024-8389-9861d4365da9",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:42Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:controller-revision-hash": {},
                                                            "f:k8s-app": {},
                                                            "f:pod-template-generation": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"e7a66e5c-c6ef-4024-8389-9861d4365da9\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:containers": {
                                                            "k:{\"name\":\"kube-proxy\"}": {
                                                                ".": {},
                                                                "f:command": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"NODE_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:fieldRef": {}
                                                                        }
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:privileged": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/lib/modules\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/lib/kube-proxy-config/\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/lib/kube-proxy/\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/log\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:hostNetwork": {},
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"kubeconfig\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"lib-modules\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"varlog\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"xtables-lock\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:57Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.110.61\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "varlog",
                                                "hostPath": {
                                                    "path": "/var/log",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "xtables-lock",
                                                "hostPath": {
                                                    "path": "/run/xtables.lock",
                                                    "type": "FileOrCreate"
                                                }
                                            },
                                            {
                                                "name": "lib-modules",
                                                "hostPath": {
                                                    "path": "/lib/modules",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "kubeconfig",
                                                "configMap": {
                                                    "name": "kube-proxy",
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "config",
                                                "configMap": {
                                                    "name": "kube-proxy-config",
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-s2rhc",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "kube-proxy",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3",
                                                "command": [
                                                    "kube-proxy",
                                                    "--v=2",
                                                    "--config=/var/lib/kube-proxy-config/config",
                                                    "--hostname-override=$(NODE_NAME)"
                                                ],
                                                "env": [
                                                    {
                                                        "name": "NODE_NAME",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "apiVersion": "v1",
                                                                "fieldPath": "spec.nodeName"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "100m"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "varlog",
                                                        "mountPath": "/var/log"
                                                    },
                                                    {
                                                        "name": "xtables-lock",
                                                        "mountPath": "/run/xtables.lock"
                                                    },
                                                    {
                                                        "name": "lib-modules",
                                                        "readOnly": true,
                                                        "mountPath": "/lib/modules"
                                                    },
                                                    {
                                                        "name": "kubeconfig",
                                                        "mountPath": "/var/lib/kube-proxy/"
                                                    },
                                                    {
                                                        "name": "config",
                                                        "mountPath": "/var/lib/kube-proxy-config/"
                                                    },
                                                    {
                                                        "name": "kube-api-access-s2rhc",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "privileged": true
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "kube-proxy",
                                        "serviceAccount": "kube-proxy",
                                        "nodeName": "ip-10-8-110-61.ec2.internal",
                                        "hostNetwork": true,
                                        "securityContext": {},
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchFields": [
                                                                {
                                                                    "key": "metadata.name",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "ip-10-8-110-61.ec2.internal"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "operator": "Exists"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/disk-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/memory-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/pid-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unschedulable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/network-unavailable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            }
                                        ],
                                        "priorityClassName": "system-node-critical",
                                        "priority": 2000001000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:57Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:42Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:57Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:57Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:42Z"
                                            }
                                        ],
                                        "hostIP": "10.8.110.61",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "podIP": "10.8.110.61",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "startTime": "2025-06-11T16:47:42Z",
                                        "containerStatuses": [
                                            {
                                                "name": "kube-proxy",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:47:56Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:5ed7b40f2b07b992318718d8264324747ecc24b4ea8fab26095b8e569980eff6",
                                                "containerID": "containerd://3152a8c5e94e8bf0b9016d076223830c061f5c72bbc3e5ff96d00e7bb9797281",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                },
                                "kube-system/kube-proxy-wnzgh": {
                                    "metadata": {
                                        "name": "kube-proxy-wnzgh",
                                        "generateName": "kube-proxy-",
                                        "namespace": "kube-system",
                                        "uid": "356c0450-cf11-44cd-bcd6-28599040ed4b",
                                        "resourceVersion": "1515",
                                        "creationTimestamp": "2025-06-11T16:47:41Z",
                                        "labels": {
                                            "controller-revision-hash": "65f976f6bf",
                                            "k8s-app": "kube-proxy",
                                            "pod-template-generation": "1"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "DaemonSet",
                                                "name": "kube-proxy",
                                                "uid": "e7a66e5c-c6ef-4024-8389-9861d4365da9",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:41Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:controller-revision-hash": {},
                                                            "f:k8s-app": {},
                                                            "f:pod-template-generation": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"e7a66e5c-c6ef-4024-8389-9861d4365da9\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:containers": {
                                                            "k:{\"name\":\"kube-proxy\"}": {
                                                                ".": {},
                                                                "f:command": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"NODE_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:fieldRef": {}
                                                                        }
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:privileged": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/lib/modules\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/lib/kube-proxy-config/\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/lib/kube-proxy/\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "k:{\"mountPath\":\"/var/log\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:hostNetwork": {},
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"kubeconfig\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"lib-modules\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"varlog\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            },
                                                            "k:{\"name\":\"xtables-lock\"}": {
                                                                ".": {},
                                                                "f:hostPath": {
                                                                    ".": {},
                                                                    "f:path": {},
                                                                    "f:type": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:56Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.143.217\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "varlog",
                                                "hostPath": {
                                                    "path": "/var/log",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "xtables-lock",
                                                "hostPath": {
                                                    "path": "/run/xtables.lock",
                                                    "type": "FileOrCreate"
                                                }
                                            },
                                            {
                                                "name": "lib-modules",
                                                "hostPath": {
                                                    "path": "/lib/modules",
                                                    "type": ""
                                                }
                                            },
                                            {
                                                "name": "kubeconfig",
                                                "configMap": {
                                                    "name": "kube-proxy",
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "config",
                                                "configMap": {
                                                    "name": "kube-proxy-config",
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-nd25v",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "kube-proxy",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3",
                                                "command": [
                                                    "kube-proxy",
                                                    "--v=2",
                                                    "--config=/var/lib/kube-proxy-config/config",
                                                    "--hostname-override=$(NODE_NAME)"
                                                ],
                                                "env": [
                                                    {
                                                        "name": "NODE_NAME",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "apiVersion": "v1",
                                                                "fieldPath": "spec.nodeName"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "resources": {
                                                    "requests": {
                                                        "cpu": "100m"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "varlog",
                                                        "mountPath": "/var/log"
                                                    },
                                                    {
                                                        "name": "xtables-lock",
                                                        "mountPath": "/run/xtables.lock"
                                                    },
                                                    {
                                                        "name": "lib-modules",
                                                        "readOnly": true,
                                                        "mountPath": "/lib/modules"
                                                    },
                                                    {
                                                        "name": "kubeconfig",
                                                        "mountPath": "/var/lib/kube-proxy/"
                                                    },
                                                    {
                                                        "name": "config",
                                                        "mountPath": "/var/lib/kube-proxy-config/"
                                                    },
                                                    {
                                                        "name": "kube-api-access-nd25v",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "privileged": true
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "ClusterFirst",
                                        "serviceAccountName": "kube-proxy",
                                        "serviceAccount": "kube-proxy",
                                        "nodeName": "ip-10-8-143-217.ec2.internal",
                                        "hostNetwork": true,
                                        "securityContext": {},
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchFields": [
                                                                {
                                                                    "key": "metadata.name",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "ip-10-8-143-217.ec2.internal"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "operator": "Exists"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute"
                                            },
                                            {
                                                "key": "node.kubernetes.io/disk-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/memory-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/pid-pressure",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/unschedulable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "node.kubernetes.io/network-unavailable",
                                                "operator": "Exists",
                                                "effect": "NoSchedule"
                                            }
                                        ],
                                        "priorityClassName": "system-node-critical",
                                        "priority": 2000001000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority"
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:56Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:42Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:56Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:56Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:47:42Z"
                                            }
                                        ],
                                        "hostIP": "10.8.143.217",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "podIP": "10.8.143.217",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.143.217"
                                            }
                                        ],
                                        "startTime": "2025-06-11T16:47:42Z",
                                        "containerStatuses": [
                                            {
                                                "name": "kube-proxy",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:47:56Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.30.6-minimal-eksbuild.3",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:5ed7b40f2b07b992318718d8264324747ecc24b4ea8fab26095b8e569980eff6",
                                                "containerID": "containerd://265ebd3cbd71186766df6b5356ad08075ec319280eb5218d11a6275480d05ac1",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "5084a9999cb60d4c9e152f6b864d61ff0aac735c0613bc8d434e52feb4fef29a"
                        }
                    },
                    "replicaSets": {
                        "coredns-586b798467": {
                            "replicaSet": {
                                "metadata": {
                                    "name": "coredns-586b798467",
                                    "namespace": "kube-system",
                                    "uid": "f4be945e-9b19-4c93-a332-e2ff070f6406",
                                    "resourceVersion": "1602",
                                    "generation": 1,
                                    "creationTimestamp": "2025-06-11T16:42:45Z",
                                    "labels": {
                                        "eks.amazonaws.com/component": "coredns",
                                        "k8s-app": "kube-dns",
                                        "pod-template-hash": "586b798467"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/desired-replicas": "2",
                                        "deployment.kubernetes.io/max-replicas": "3",
                                        "deployment.kubernetes.io/revision": "1"
                                    },
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "apps/v1",
                                            "kind": "Deployment",
                                            "name": "coredns",
                                            "uid": "27c3de7d-c5c0-42f1-8b69-5e1f11c9cfe4",
                                            "controller": true,
                                            "blockOwnerDeletion": true
                                        }
                                    ],
                                    "managedFields": [
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T16:42:45Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:metadata": {
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:deployment.kubernetes.io/desired-replicas": {},
                                                        "f:deployment.kubernetes.io/max-replicas": {},
                                                        "f:deployment.kubernetes.io/revision": {}
                                                    },
                                                    "f:labels": {
                                                        ".": {},
                                                        "f:eks.amazonaws.com/component": {},
                                                        "f:k8s-app": {},
                                                        "f:pod-template-hash": {}
                                                    },
                                                    "f:ownerReferences": {
                                                        ".": {},
                                                        "k:{\"uid\":\"27c3de7d-c5c0-42f1-8b69-5e1f11c9cfe4\"}": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:replicas": {},
                                                    "f:selector": {},
                                                    "f:template": {
                                                        "f:metadata": {
                                                            "f:labels": {
                                                                ".": {},
                                                                "f:eks.amazonaws.com/component": {},
                                                                "f:k8s-app": {},
                                                                "f:pod-template-hash": {}
                                                            }
                                                        },
                                                        "f:spec": {
                                                            "f:affinity": {
                                                                ".": {},
                                                                "f:nodeAffinity": {
                                                                    ".": {},
                                                                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                                },
                                                                "f:podAntiAffinity": {
                                                                    ".": {},
                                                                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                                                }
                                                            },
                                                            "f:containers": {
                                                                "k:{\"name\":\"coredns\"}": {
                                                                    ".": {},
                                                                    "f:args": {},
                                                                    "f:image": {},
                                                                    "f:imagePullPolicy": {},
                                                                    "f:livenessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:initialDelaySeconds": {},
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:name": {},
                                                                    "f:ports": {
                                                                        ".": {},
                                                                        "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        },
                                                                        "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        },
                                                                        "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                                            ".": {},
                                                                            "f:containerPort": {},
                                                                            "f:name": {},
                                                                            "f:protocol": {}
                                                                        }
                                                                    },
                                                                    "f:readinessProbe": {
                                                                        ".": {},
                                                                        "f:failureThreshold": {},
                                                                        "f:httpGet": {
                                                                            ".": {},
                                                                            "f:path": {},
                                                                            "f:port": {},
                                                                            "f:scheme": {}
                                                                        },
                                                                        "f:periodSeconds": {},
                                                                        "f:successThreshold": {},
                                                                        "f:timeoutSeconds": {}
                                                                    },
                                                                    "f:resources": {
                                                                        ".": {},
                                                                        "f:limits": {
                                                                            ".": {},
                                                                            "f:memory": {}
                                                                        },
                                                                        "f:requests": {
                                                                            ".": {},
                                                                            "f:cpu": {},
                                                                            "f:memory": {}
                                                                        }
                                                                    },
                                                                    "f:securityContext": {
                                                                        ".": {},
                                                                        "f:allowPrivilegeEscalation": {},
                                                                        "f:capabilities": {
                                                                            ".": {},
                                                                            "f:add": {},
                                                                            "f:drop": {}
                                                                        },
                                                                        "f:readOnlyRootFilesystem": {}
                                                                    },
                                                                    "f:terminationMessagePath": {},
                                                                    "f:terminationMessagePolicy": {},
                                                                    "f:volumeMounts": {
                                                                        ".": {},
                                                                        "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                                            ".": {},
                                                                            "f:mountPath": {},
                                                                            "f:name": {},
                                                                            "f:readOnly": {}
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "f:dnsPolicy": {},
                                                            "f:priorityClassName": {},
                                                            "f:restartPolicy": {},
                                                            "f:schedulerName": {},
                                                            "f:securityContext": {},
                                                            "f:serviceAccount": {},
                                                            "f:serviceAccountName": {},
                                                            "f:terminationGracePeriodSeconds": {},
                                                            "f:tolerations": {},
                                                            "f:topologySpreadConstraints": {
                                                                ".": {},
                                                                "k:{\"topologyKey\":\"topology.kubernetes.io/zone\",\"whenUnsatisfiable\":\"ScheduleAnyway\"}": {
                                                                    ".": {},
                                                                    "f:labelSelector": {},
                                                                    "f:maxSkew": {},
                                                                    "f:topologyKey": {},
                                                                    "f:whenUnsatisfiable": {}
                                                                }
                                                            },
                                                            "f:volumes": {
                                                                ".": {},
                                                                "k:{\"name\":\"config-volume\"}": {
                                                                    ".": {},
                                                                    "f:configMap": {
                                                                        ".": {},
                                                                        "f:defaultMode": {},
                                                                        "f:items": {},
                                                                        "f:name": {}
                                                                    },
                                                                    "f:name": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "manager": "kube-controller-manager",
                                            "operation": "Update",
                                            "apiVersion": "apps/v1",
                                            "time": "2025-06-11T16:48:04Z",
                                            "fieldsType": "FieldsV1",
                                            "fieldsV1": {
                                                "f:status": {
                                                    "f:availableReplicas": {},
                                                    "f:fullyLabeledReplicas": {},
                                                    "f:observedGeneration": {},
                                                    "f:readyReplicas": {},
                                                    "f:replicas": {}
                                                }
                                            },
                                            "subresource": "status"
                                        }
                                    ]
                                },
                                "spec": {
                                    "replicas": 2,
                                    "selector": {
                                        "matchLabels": {
                                            "eks.amazonaws.com/component": "coredns",
                                            "k8s-app": "kube-dns",
                                            "pod-template-hash": "586b798467"
                                        }
                                    },
                                    "template": {
                                        "metadata": {
                                            "creationTimestamp": null,
                                            "labels": {
                                                "eks.amazonaws.com/component": "coredns",
                                                "k8s-app": "kube-dns",
                                                "pod-template-hash": "586b798467"
                                            }
                                        },
                                        "spec": {
                                            "volumes": [
                                                {
                                                    "name": "config-volume",
                                                    "configMap": {
                                                        "name": "coredns",
                                                        "items": [
                                                            {
                                                                "key": "Corefile",
                                                                "path": "Corefile"
                                                            }
                                                        ],
                                                        "defaultMode": 420
                                                    }
                                                }
                                            ],
                                            "containers": [
                                                {
                                                    "name": "coredns",
                                                    "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                    "args": [
                                                        "-conf",
                                                        "/etc/coredns/Corefile"
                                                    ],
                                                    "ports": [
                                                        {
                                                            "name": "dns",
                                                            "containerPort": 53,
                                                            "protocol": "UDP"
                                                        },
                                                        {
                                                            "name": "dns-tcp",
                                                            "containerPort": 53,
                                                            "protocol": "TCP"
                                                        },
                                                        {
                                                            "name": "metrics",
                                                            "containerPort": 9153,
                                                            "protocol": "TCP"
                                                        }
                                                    ],
                                                    "resources": {
                                                        "limits": {
                                                            "memory": "170Mi"
                                                        },
                                                        "requests": {
                                                            "cpu": "100m",
                                                            "memory": "70Mi"
                                                        }
                                                    },
                                                    "volumeMounts": [
                                                        {
                                                            "name": "config-volume",
                                                            "readOnly": true,
                                                            "mountPath": "/etc/coredns"
                                                        }
                                                    ],
                                                    "livenessProbe": {
                                                        "httpGet": {
                                                            "path": "/health",
                                                            "port": 8080,
                                                            "scheme": "HTTP"
                                                        },
                                                        "initialDelaySeconds": 60,
                                                        "timeoutSeconds": 5,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 5
                                                    },
                                                    "readinessProbe": {
                                                        "httpGet": {
                                                            "path": "/ready",
                                                            "port": 8181,
                                                            "scheme": "HTTP"
                                                        },
                                                        "timeoutSeconds": 1,
                                                        "periodSeconds": 10,
                                                        "successThreshold": 1,
                                                        "failureThreshold": 3
                                                    },
                                                    "terminationMessagePath": "/dev/termination-log",
                                                    "terminationMessagePolicy": "File",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "securityContext": {
                                                        "capabilities": {
                                                            "add": [
                                                                "NET_BIND_SERVICE"
                                                            ],
                                                            "drop": [
                                                                "ALL"
                                                            ]
                                                        },
                                                        "readOnlyRootFilesystem": true,
                                                        "allowPrivilegeEscalation": false
                                                    }
                                                }
                                            ],
                                            "restartPolicy": "Always",
                                            "terminationGracePeriodSeconds": 30,
                                            "dnsPolicy": "Default",
                                            "serviceAccountName": "coredns",
                                            "serviceAccount": "coredns",
                                            "securityContext": {},
                                            "affinity": {
                                                "nodeAffinity": {
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                        "nodeSelectorTerms": [
                                                            {
                                                                "matchExpressions": [
                                                                    {
                                                                        "key": "kubernetes.io/os",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "linux"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "key": "kubernetes.io/arch",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "amd64",
                                                                            "arm64"
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                },
                                                "podAntiAffinity": {
                                                    "preferredDuringSchedulingIgnoredDuringExecution": [
                                                        {
                                                            "weight": 100,
                                                            "podAffinityTerm": {
                                                                "labelSelector": {
                                                                    "matchExpressions": [
                                                                        {
                                                                            "key": "k8s-app",
                                                                            "operator": "In",
                                                                            "values": [
                                                                                "kube-dns"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "topologyKey": "kubernetes.io/hostname"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            "schedulerName": "default-scheduler",
                                            "tolerations": [
                                                {
                                                    "key": "node-role.kubernetes.io/control-plane",
                                                    "effect": "NoSchedule"
                                                },
                                                {
                                                    "key": "CriticalAddonsOnly",
                                                    "operator": "Exists"
                                                }
                                            ],
                                            "priorityClassName": "system-cluster-critical",
                                            "topologySpreadConstraints": [
                                                {
                                                    "maxSkew": 1,
                                                    "topologyKey": "topology.kubernetes.io/zone",
                                                    "whenUnsatisfiable": "ScheduleAnyway",
                                                    "labelSelector": {
                                                        "matchLabels": {
                                                            "k8s-app": "kube-dns"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                "status": {
                                    "replicas": 2,
                                    "fullyLabeledReplicas": 2,
                                    "readyReplicas": 2,
                                    "availableReplicas": 2,
                                    "observedGeneration": 1
                                }
                            },
                            "pods": {
                                "kube-system/coredns-586b798467-2wnrg": {
                                    "metadata": {
                                        "name": "coredns-586b798467-2wnrg",
                                        "generateName": "coredns-586b798467-",
                                        "namespace": "kube-system",
                                        "uid": "79c24ab3-b7e7-485a-a2f2-ac1bf92a8260",
                                        "resourceVersion": "1599",
                                        "creationTimestamp": "2025-06-11T16:42:45Z",
                                        "labels": {
                                            "eks.amazonaws.com/component": "coredns",
                                            "k8s-app": "kube-dns",
                                            "pod-template-hash": "586b798467"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "coredns-586b798467",
                                                "uid": "f4be945e-9b19-4c93-a332-e2ff070f6406",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:42:45Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:eks.amazonaws.com/component": {},
                                                            "f:k8s-app": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"f4be945e-9b19-4c93-a332-e2ff070f6406\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            },
                                                            "f:podAntiAffinity": {
                                                                ".": {},
                                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:containers": {
                                                            "k:{\"name\":\"coredns\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    },
                                                                    "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    },
                                                                    "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:limits": {
                                                                        ".": {},
                                                                        "f:memory": {}
                                                                    },
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:add": {},
                                                                        "f:drop": {}
                                                                    },
                                                                    "f:readOnlyRootFilesystem": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:topologySpreadConstraints": {
                                                            ".": {},
                                                            "k:{\"topologyKey\":\"topology.kubernetes.io/zone\",\"whenUnsatisfiable\":\"ScheduleAnyway\"}": {
                                                                ".": {},
                                                                "f:labelSelector": {},
                                                                "f:maxSkew": {},
                                                                "f:topologyKey": {},
                                                                "f:whenUnsatisfiable": {}
                                                            }
                                                        },
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config-volume\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:items": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:50Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            ".": {},
                                                            "k:{\"type\":\"PodScheduled\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:message": {},
                                                                "f:reason": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresource": "status"
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:48:04Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.105.223\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "config-volume",
                                                "configMap": {
                                                    "name": "coredns",
                                                    "items": [
                                                        {
                                                            "key": "Corefile",
                                                            "path": "Corefile"
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-x7b8s",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "coredns",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                "args": [
                                                    "-conf",
                                                    "/etc/coredns/Corefile"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "dns",
                                                        "containerPort": 53,
                                                        "protocol": "UDP"
                                                    },
                                                    {
                                                        "name": "dns-tcp",
                                                        "containerPort": 53,
                                                        "protocol": "TCP"
                                                    },
                                                    {
                                                        "name": "metrics",
                                                        "containerPort": 9153,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "limits": {
                                                        "memory": "170Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "100m",
                                                        "memory": "70Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "readOnly": true,
                                                        "mountPath": "/etc/coredns"
                                                    },
                                                    {
                                                        "name": "kube-api-access-x7b8s",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/health",
                                                        "port": 8080,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 60,
                                                    "timeoutSeconds": 5,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 5
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/ready",
                                                        "port": 8181,
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "add": [
                                                            "NET_BIND_SERVICE"
                                                        ],
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "Default",
                                        "serviceAccountName": "coredns",
                                        "serviceAccount": "coredns",
                                        "nodeName": "ip-10-8-110-61.ec2.internal",
                                        "securityContext": {},
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchExpressions": [
                                                                {
                                                                    "key": "kubernetes.io/os",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "linux"
                                                                    ]
                                                                },
                                                                {
                                                                    "key": "kubernetes.io/arch",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "amd64",
                                                                        "arm64"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "podAntiAffinity": {
                                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                                    {
                                                        "weight": 100,
                                                        "podAffinityTerm": {
                                                            "labelSelector": {
                                                                "matchExpressions": [
                                                                    {
                                                                        "key": "k8s-app",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "kube-dns"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "topologyKey": "kubernetes.io/hostname"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node-role.kubernetes.io/control-plane",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "CriticalAddonsOnly",
                                                "operator": "Exists"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priorityClassName": "system-cluster-critical",
                                        "priority": 2000000000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority",
                                        "topologySpreadConstraints": [
                                            {
                                                "maxSkew": 1,
                                                "topologyKey": "topology.kubernetes.io/zone",
                                                "whenUnsatisfiable": "ScheduleAnyway",
                                                "labelSelector": {
                                                    "matchLabels": {
                                                        "k8s-app": "kube-dns"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            }
                                        ],
                                        "hostIP": "10.8.110.61",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "podIP": "10.8.105.223",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.105.223"
                                            }
                                        ],
                                        "startTime": "2025-06-11T16:48:01Z",
                                        "containerStatuses": [
                                            {
                                                "name": "coredns",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:48:04Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:d21885a6632343ecd25d468b54681a0bd512055174bb17bc35a08cb38a965f12",
                                                "containerID": "containerd://c7073205c4cc1795270aa5ab3891f7cc46453432bf3a7a10ec540eb80ba9e48f",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                },
                                "kube-system/coredns-586b798467-9ngj9": {
                                    "metadata": {
                                        "name": "coredns-586b798467-9ngj9",
                                        "generateName": "coredns-586b798467-",
                                        "namespace": "kube-system",
                                        "uid": "3ccc0d03-7187-4348-9415-94bba0c106a8",
                                        "resourceVersion": "1594",
                                        "creationTimestamp": "2025-06-11T16:42:45Z",
                                        "labels": {
                                            "eks.amazonaws.com/component": "coredns",
                                            "k8s-app": "kube-dns",
                                            "pod-template-hash": "586b798467"
                                        },
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "apps/v1",
                                                "kind": "ReplicaSet",
                                                "name": "coredns-586b798467",
                                                "uid": "f4be945e-9b19-4c93-a332-e2ff070f6406",
                                                "controller": true,
                                                "blockOwnerDeletion": true
                                            }
                                        ],
                                        "managedFields": [
                                            {
                                                "manager": "kube-controller-manager",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:42:45Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:metadata": {
                                                        "f:generateName": {},
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:eks.amazonaws.com/component": {},
                                                            "f:k8s-app": {},
                                                            "f:pod-template-hash": {}
                                                        },
                                                        "f:ownerReferences": {
                                                            ".": {},
                                                            "k:{\"uid\":\"f4be945e-9b19-4c93-a332-e2ff070f6406\"}": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:affinity": {
                                                            ".": {},
                                                            "f:nodeAffinity": {
                                                                ".": {},
                                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                                            },
                                                            "f:podAntiAffinity": {
                                                                ".": {},
                                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                                            }
                                                        },
                                                        "f:containers": {
                                                            "k:{\"name\":\"coredns\"}": {
                                                                ".": {},
                                                                "f:args": {},
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:livenessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:initialDelaySeconds": {},
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:name": {},
                                                                "f:ports": {
                                                                    ".": {},
                                                                    "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    },
                                                                    "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    },
                                                                    "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                                        ".": {},
                                                                        "f:containerPort": {},
                                                                        "f:name": {},
                                                                        "f:protocol": {}
                                                                    }
                                                                },
                                                                "f:readinessProbe": {
                                                                    ".": {},
                                                                    "f:failureThreshold": {},
                                                                    "f:httpGet": {
                                                                        ".": {},
                                                                        "f:path": {},
                                                                        "f:port": {},
                                                                        "f:scheme": {}
                                                                    },
                                                                    "f:periodSeconds": {},
                                                                    "f:successThreshold": {},
                                                                    "f:timeoutSeconds": {}
                                                                },
                                                                "f:resources": {
                                                                    ".": {},
                                                                    "f:limits": {
                                                                        ".": {},
                                                                        "f:memory": {}
                                                                    },
                                                                    "f:requests": {
                                                                        ".": {},
                                                                        "f:cpu": {},
                                                                        "f:memory": {}
                                                                    }
                                                                },
                                                                "f:securityContext": {
                                                                    ".": {},
                                                                    "f:allowPrivilegeEscalation": {},
                                                                    "f:capabilities": {
                                                                        ".": {},
                                                                        "f:add": {},
                                                                        "f:drop": {}
                                                                    },
                                                                    "f:readOnlyRootFilesystem": {}
                                                                },
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {},
                                                                "f:volumeMounts": {
                                                                    ".": {},
                                                                    "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                                        ".": {},
                                                                        "f:mountPath": {},
                                                                        "f:name": {},
                                                                        "f:readOnly": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:enableServiceLinks": {},
                                                        "f:priorityClassName": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:serviceAccount": {},
                                                        "f:serviceAccountName": {},
                                                        "f:terminationGracePeriodSeconds": {},
                                                        "f:tolerations": {},
                                                        "f:topologySpreadConstraints": {
                                                            ".": {},
                                                            "k:{\"topologyKey\":\"topology.kubernetes.io/zone\",\"whenUnsatisfiable\":\"ScheduleAnyway\"}": {
                                                                ".": {},
                                                                "f:labelSelector": {},
                                                                "f:maxSkew": {},
                                                                "f:topologyKey": {},
                                                                "f:whenUnsatisfiable": {}
                                                            }
                                                        },
                                                        "f:volumes": {
                                                            ".": {},
                                                            "k:{\"name\":\"config-volume\"}": {
                                                                ".": {},
                                                                "f:configMap": {
                                                                    ".": {},
                                                                    "f:defaultMode": {},
                                                                    "f:items": {},
                                                                    "f:name": {}
                                                                },
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "manager": "kube-scheduler",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:47:50Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            ".": {},
                                                            "k:{\"type\":\"PodScheduled\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:message": {},
                                                                "f:reason": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresource": "status"
                                            },
                                            {
                                                "manager": "kubelet",
                                                "operation": "Update",
                                                "apiVersion": "v1",
                                                "time": "2025-06-11T16:48:04Z",
                                                "fieldsType": "FieldsV1",
                                                "fieldsV1": {
                                                    "f:status": {
                                                        "f:conditions": {
                                                            "k:{\"type\":\"ContainersReady\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Initialized\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"PodReadyToStartContainers\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            },
                                                            "k:{\"type\":\"Ready\"}": {
                                                                ".": {},
                                                                "f:lastProbeTime": {},
                                                                "f:lastTransitionTime": {},
                                                                "f:status": {},
                                                                "f:type": {}
                                                            }
                                                        },
                                                        "f:containerStatuses": {},
                                                        "f:hostIP": {},
                                                        "f:hostIPs": {},
                                                        "f:phase": {},
                                                        "f:podIP": {},
                                                        "f:podIPs": {
                                                            ".": {},
                                                            "k:{\"ip\":\"10.8.101.22\"}": {
                                                                ".": {},
                                                                "f:ip": {}
                                                            }
                                                        },
                                                        "f:startTime": {}
                                                    }
                                                },
                                                "subresource": "status"
                                            }
                                        ]
                                    },
                                    "spec": {
                                        "volumes": [
                                            {
                                                "name": "config-volume",
                                                "configMap": {
                                                    "name": "coredns",
                                                    "items": [
                                                        {
                                                            "key": "Corefile",
                                                            "path": "Corefile"
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            },
                                            {
                                                "name": "kube-api-access-9rmqw",
                                                "projected": {
                                                    "sources": [
                                                        {
                                                            "serviceAccountToken": {
                                                                "expirationSeconds": 3607,
                                                                "path": "token"
                                                            }
                                                        },
                                                        {
                                                            "configMap": {
                                                                "name": "kube-root-ca.crt",
                                                                "items": [
                                                                    {
                                                                        "key": "ca.crt",
                                                                        "path": "ca.crt"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "downwardAPI": {
                                                                "items": [
                                                                    {
                                                                        "path": "namespace",
                                                                        "fieldRef": {
                                                                            "apiVersion": "v1",
                                                                            "fieldPath": "metadata.namespace"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "defaultMode": 420
                                                }
                                            }
                                        ],
                                        "containers": [
                                            {
                                                "name": "coredns",
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                "args": [
                                                    "-conf",
                                                    "/etc/coredns/Corefile"
                                                ],
                                                "ports": [
                                                    {
                                                        "name": "dns",
                                                        "containerPort": 53,
                                                        "protocol": "UDP"
                                                    },
                                                    {
                                                        "name": "dns-tcp",
                                                        "containerPort": 53,
                                                        "protocol": "TCP"
                                                    },
                                                    {
                                                        "name": "metrics",
                                                        "containerPort": 9153,
                                                        "protocol": "TCP"
                                                    }
                                                ],
                                                "resources": {
                                                    "limits": {
                                                        "memory": "170Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "100m",
                                                        "memory": "70Mi"
                                                    }
                                                },
                                                "volumeMounts": [
                                                    {
                                                        "name": "config-volume",
                                                        "readOnly": true,
                                                        "mountPath": "/etc/coredns"
                                                    },
                                                    {
                                                        "name": "kube-api-access-9rmqw",
                                                        "readOnly": true,
                                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                                                    }
                                                ],
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/health",
                                                        "port": 8080,
                                                        "scheme": "HTTP"
                                                    },
                                                    "initialDelaySeconds": 60,
                                                    "timeoutSeconds": 5,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 5
                                                },
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/ready",
                                                        "port": 8181,
                                                        "scheme": "HTTP"
                                                    },
                                                    "timeoutSeconds": 1,
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "failureThreshold": 3
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File",
                                                "imagePullPolicy": "IfNotPresent",
                                                "securityContext": {
                                                    "capabilities": {
                                                        "add": [
                                                            "NET_BIND_SERVICE"
                                                        ],
                                                        "drop": [
                                                            "ALL"
                                                        ]
                                                    },
                                                    "readOnlyRootFilesystem": true,
                                                    "allowPrivilegeEscalation": false
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always",
                                        "terminationGracePeriodSeconds": 30,
                                        "dnsPolicy": "Default",
                                        "serviceAccountName": "coredns",
                                        "serviceAccount": "coredns",
                                        "nodeName": "ip-10-8-110-61.ec2.internal",
                                        "securityContext": {},
                                        "affinity": {
                                            "nodeAffinity": {
                                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "nodeSelectorTerms": [
                                                        {
                                                            "matchExpressions": [
                                                                {
                                                                    "key": "kubernetes.io/os",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "linux"
                                                                    ]
                                                                },
                                                                {
                                                                    "key": "kubernetes.io/arch",
                                                                    "operator": "In",
                                                                    "values": [
                                                                        "amd64",
                                                                        "arm64"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "podAntiAffinity": {
                                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                                    {
                                                        "weight": 100,
                                                        "podAffinityTerm": {
                                                            "labelSelector": {
                                                                "matchExpressions": [
                                                                    {
                                                                        "key": "k8s-app",
                                                                        "operator": "In",
                                                                        "values": [
                                                                            "kube-dns"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "topologyKey": "kubernetes.io/hostname"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "schedulerName": "default-scheduler",
                                        "tolerations": [
                                            {
                                                "key": "node-role.kubernetes.io/control-plane",
                                                "effect": "NoSchedule"
                                            },
                                            {
                                                "key": "CriticalAddonsOnly",
                                                "operator": "Exists"
                                            },
                                            {
                                                "key": "node.kubernetes.io/not-ready",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            },
                                            {
                                                "key": "node.kubernetes.io/unreachable",
                                                "operator": "Exists",
                                                "effect": "NoExecute",
                                                "tolerationSeconds": 300
                                            }
                                        ],
                                        "priorityClassName": "system-cluster-critical",
                                        "priority": 2000000000,
                                        "enableServiceLinks": true,
                                        "preemptionPolicy": "PreemptLowerPriority",
                                        "topologySpreadConstraints": [
                                            {
                                                "maxSkew": 1,
                                                "topologyKey": "topology.kubernetes.io/zone",
                                                "whenUnsatisfiable": "ScheduleAnyway",
                                                "labelSelector": {
                                                    "matchLabels": {
                                                        "k8s-app": "kube-dns"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "status": {
                                        "phase": "Running",
                                        "conditions": [
                                            {
                                                "type": "PodReadyToStartContainers",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "Initialized",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            },
                                            {
                                                "type": "Ready",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "ContainersReady",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:04Z"
                                            },
                                            {
                                                "type": "PodScheduled",
                                                "status": "True",
                                                "lastProbeTime": null,
                                                "lastTransitionTime": "2025-06-11T16:48:01Z"
                                            }
                                        ],
                                        "hostIP": "10.8.110.61",
                                        "hostIPs": [
                                            {
                                                "ip": "10.8.110.61"
                                            }
                                        ],
                                        "podIP": "10.8.101.22",
                                        "podIPs": [
                                            {
                                                "ip": "10.8.101.22"
                                            }
                                        ],
                                        "startTime": "2025-06-11T16:48:01Z",
                                        "containerStatuses": [
                                            {
                                                "name": "coredns",
                                                "state": {
                                                    "running": {
                                                        "startedAt": "2025-06-11T16:48:04Z"
                                                    }
                                                },
                                                "lastState": {},
                                                "ready": true,
                                                "restartCount": 0,
                                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.8",
                                                "imageID": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:d21885a6632343ecd25d468b54681a0bd512055174bb17bc35a08cb38a965f12",
                                                "containerID": "containerd://29b08c74ff6bafca3dc28d5ae385d9de6f1b05917bad29ec08b3c6a1b2e8a1bc",
                                                "started": true
                                            }
                                        ],
                                        "qosClass": "Burstable"
                                    }
                                }
                            },
                            "hash": "d9dda2f2702787ed562c8fc85932ebf3e3a9f3e24a1f79b0a3f6a6e1d2953bd0"
                        }
                    },
                    "services": {
                        "eks-extension-metrics-api": {
                            "metadata": {
                                "name": "eks-extension-metrics-api",
                                "namespace": "kube-system",
                                "uid": "32ee2eb7-55eb-4ab3-a532-9d8d17d1c493",
                                "resourceVersion": "265",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "managedFields": [
                                    {
                                        "manager": "eks-internal",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:spec": {
                                                "f:ports": {
                                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {},
                                                        "f:targetPort": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "name": "metrics-api",
                                        "protocol": "TCP",
                                        "port": 443,
                                        "targetPort": 10443
                                    }
                                ],
                                "clusterIP": "172.20.45.91",
                                "clusterIPs": [
                                    "172.20.45.91"
                                ],
                                "type": "ClusterIP",
                                "sessionAffinity": "None",
                                "ipFamilies": [
                                    "IPv4"
                                ],
                                "ipFamilyPolicy": "SingleStack",
                                "internalTrafficPolicy": "Cluster"
                            },
                            "status": {
                                "loadBalancer": {}
                            }
                        },
                        "kube-dns": {
                            "metadata": {
                                "name": "kube-dns",
                                "namespace": "kube-system",
                                "uid": "07d673a2-7086-406f-ab02-b471357b0401",
                                "resourceVersion": "607",
                                "creationTimestamp": "2025-06-11T16:42:45Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "kube-dns",
                                    "k8s-app": "kube-dns",
                                    "kubernetes.io/cluster-service": "true",
                                    "kubernetes.io/name": "CoreDNS"
                                },
                                "annotations": {
                                    "prometheus.io/port": "9153",
                                    "prometheus.io/scrape": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "eks",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:45Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {},
                                                    "f:kubernetes.io/cluster-service": {},
                                                    "f:kubernetes.io/name": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:clusterIP": {},
                                                "f:ports": {
                                                    "k:{\"port\":53,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"port\":53,\"protocol\":\"UDP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"port\":9153,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:port": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:selector": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "spec": {
                                "ports": [
                                    {
                                        "name": "dns",
                                        "protocol": "UDP",
                                        "port": 53,
                                        "targetPort": 53
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "protocol": "TCP",
                                        "port": 53,
                                        "targetPort": 53
                                    },
                                    {
                                        "name": "metrics",
                                        "protocol": "TCP",
                                        "port": 9153,
                                        "targetPort": 9153
                                    }
                                ],
                                "selector": {
                                    "k8s-app": "kube-dns"
                                },
                                "clusterIP": "172.20.0.10",
                                "clusterIPs": [
                                    "172.20.0.10"
                                ],
                                "type": "ClusterIP",
                                "sessionAffinity": "None",
                                "ipFamilies": [
                                    "IPv4"
                                ],
                                "ipFamilyPolicy": "SingleStack",
                                "internalTrafficPolicy": "Cluster"
                            },
                            "status": {
                                "loadBalancer": {}
                            }
                        }
                    },
                    "configMaps": {
                        "amazon-vpc-cni": {
                            "metadata": {
                                "name": "amazon-vpc-cni",
                                "namespace": "kube-system",
                                "uid": "0a5ae7c5-b1b6-433b-a9cb-9007730bc69c",
                                "resourceVersion": "634",
                                "creationTimestamp": "2025-06-11T16:42:45Z",
                                "labels": {
                                    "app.kubernetes.io/instance": "aws-vpc-cni",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "aws-node",
                                    "app.kubernetes.io/version": "v1.19.0",
                                    "helm.sh/chart": "aws-vpc-cni-1.19.0",
                                    "k8s-app": "aws-node"
                                },
                                "managedFields": [
                                    {
                                        "manager": "eks",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:45Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                "f:branch-eni-cooldown": {},
                                                "f:enable-network-policy-controller": {},
                                                "f:enable-windows-ipam": {},
                                                "f:enable-windows-prefix-delegation": {},
                                                "f:minimum-ip-target": {},
                                                "f:warm-ip-target": {},
                                                "f:warm-prefix-target": {}
                                            },
                                            "f:metadata": {
                                                "f:labels": {
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {},
                                                    "f:k8s-app": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "branch-eni-cooldown": "60",
                                "enable-network-policy-controller": "false",
                                "enable-windows-ipam": "false",
                                "enable-windows-prefix-delegation": "false",
                                "minimum-ip-target": "3",
                                "warm-ip-target": "1",
                                "warm-prefix-target": "0"
                            }
                        },
                        "aws-auth": {
                            "metadata": {
                                "name": "aws-auth",
                                "namespace": "kube-system",
                                "uid": "e2812622-cf06-4324-a92b-7335d25831af",
                                "resourceVersion": "1220",
                                "creationTimestamp": "2025-06-11T16:46:36Z",
                                "managedFields": [
                                    {
                                        "manager": "vpcLambda",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:46:36Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:mapRoles": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "mapRoles": "- groups:\n  - system:bootstrappers\n  - system:nodes\n  rolearn: arn:aws:iam::484907513542:role/upprom-test-ph-nodes-eks-kata-2025061116454946950000000f\n  username: system:node:{{EC2PrivateDNSName}}\n"
                            }
                        },
                        "coredns": {
                            "metadata": {
                                "name": "coredns",
                                "namespace": "kube-system",
                                "uid": "4905ec33-a985-4e37-ba7b-903fc44963cf",
                                "resourceVersion": "601",
                                "creationTimestamp": "2025-06-11T16:42:45Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "coredns",
                                    "k8s-app": "kube-dns"
                                },
                                "managedFields": [
                                    {
                                        "manager": "eks",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:45Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                "f:Corefile": {}
                                            },
                                            "f:metadata": {
                                                "f:labels": {
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "Corefile": ".:53 {\n    errors\n    health {\n        lameduck 5s\n      }\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    prometheus :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"
                            }
                        },
                        "extension-apiserver-authentication": {
                            "metadata": {
                                "name": "extension-apiserver-authentication",
                                "namespace": "kube-system",
                                "uid": "e3b66dea-2457-4540-aad9-8b8e8ccd1549",
                                "resourceVersion": "1332",
                                "creationTimestamp": "2025-06-11T16:40:59Z",
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:47:24Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:client-ca-file": {},
                                                "f:requestheader-allowed-names": {},
                                                "f:requestheader-client-ca-file": {},
                                                "f:requestheader-extra-headers-prefix": {},
                                                "f:requestheader-group-headers": {},
                                                "f:requestheader-username-headers": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "client-ca-file": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIXItQuFBq870wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA2MTExNjM1MzhaFw0zNTA2MDkxNjQwMzhaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDeDwW9/YT+SSKHWyWld//zhQQuG+84EKbTNigvXyXY5tzz/RRWww0E9Qgt\nbX/nVZa+mpesHONXYh5OKM+KkXfu/947g60GtpSQAw+kpUKM8xhtyWvPQ6eyAOmP\noktFUoCbwTJmVj4EvVAh2UqsoG4WOsIZx3KW4pMtBSEvCW2zP5HLJex0AaCpKYeU\njx5ATlr+/qDoq+cDUcMbB/pD32V3VzaY+r7MDtSIy66tAuSv0OC7HNrdncL/8Pwj\nImUufCqNZqVv5QI3307labyqW8VhM0OpWJpJULbySs8Gx4IRXgrD1RFmrdF6HWMg\nJM8uBpbzx0e8JK+HnJz4Foc8YL8hAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQwl4FvDy15OmVJH49SMkEv6fWyqjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBs1P2/6+w1\niP/8+IDRo5AS7R3AfYzzgW6yrvOhvYFMh9JTbwCJF2KcR+tZj1t6H7w1b/gbw+D0\nLa7f2DbFziM2uE0Lu3K+CCrHzHxMW9lFo22ILTLfnUEOE+54xGpRuswRtl64VcD0\nVSN9I5+1JU+Zr1lNoV2rmhOMOrKz1IXS7BZYCZUSUGy0UxC1KSkfPkh7STG3ry3H\nd4fjLZDFjQA2PXjfkZChsKRvNw7eACa6F5VethROvUxg0/Apu6C1gNNjvOHd52Ak\n94si+vx6Qivnh+nC2PrFwbgUbIh84N4jE8I+VFgQtI8gmzh7IFVoEhkQpd30SAyg\n4gdM6IsmS9Dx\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIL/cN7835j5gwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA2MTExNjQxNTFaFw0zNTA2MDkxNjQ2NTFaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQC6kea6PqKItooKLIJ1SZAr4mxO5YEGaYKWDDHASuEX7RCcSPhiiWnRWVRF\nz2l0q2HINBWX41z98QP7KSCMDd/neSB9Vbs9b33VsmssLqHgBImJKE6+gKCVh2Gt\n7sHg8Ov7Rx7rlVPLscV34X2QUWqgZ1YILkr76dIZh8oegM3bWIdNGyWtfHc72tCs\n5mPVLOP/CHoqOa2EtnKu69t0rYds4TzEQGUQSAq1rowHaJEdhzDFmIxk1xF09+x7\nwDZT9H2uQq7VLqaZSAFcM+263GwuHiyYONt00OKUkFDbr6SKAmjRg0B6WWNLtbgT\nHQzedaat2zXyXHaPNH/RdORegY6TAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR/BIWQj+PADMEPVbcbqxIUD5aJqTAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQChawGnVder\nuMKKgZOVU8hRL73HiREY2Ko91/Lnw7aqLSle/7ROyIGtFtvnnDYesbNlwTqLhhIw\n0YtK6oKNdVUFRkdBEepaaR0F9YAQaWiP+ro9IZP4JuwqrUCRskS6/WNfZ0+gyNQp\nw/Uq0oglG2E4V20oYKsDxzKQ6kB+koNLIzSiHtbfBzomQDH2ThI6lh2Y1XUgw2qU\nf7bG4QAal9zyNuwWMEiWvDob2e8P7dc8yG9vBTCpNWBhHW6eyjaKHde7twp3MwPE\nMTMXDjM7nJR6WRD9q8xNBXm8Kzi9I4sUVEfIlD3Z61OwqqFCrDw/F1TnaDhw5Okm\ncd61NRV7dhzI\n-----END CERTIFICATE-----\n",
                                "requestheader-allowed-names": "[\"front-proxy-client\"]",
                                "requestheader-client-ca-file": "-----BEGIN CERTIFICATE-----\nMIIDETCCAfmgAwIBAgIIJdy87SOABtwwDQYJKoZIhvcNAQELBQAwGTEXMBUGA1UE\nAxMOZnJvbnQtcHJveHktY2EwHhcNMjUwNjExMTYzNTM2WhcNMzUwNjA5MTY0MDM2\nWjAZMRcwFQYDVQQDEw5mcm9udC1wcm94eS1jYTCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBAKmvVAIHMvlRLtPYE47b+tOE6ow8yllz2OGKi5YLpN2ASnXo\nzypmKsCw3JICcwO4JO8kNrHgHmWDW2yZZy7yGV4zZZEbOtx3vmdFZm6TluLFxTWY\n7sOzdeSc0YrOBKnJVXlCUD+LNQzmi8cAkIBttqoJFeVWmdIGjL5PTh4pU5qOUxyc\nP+rMwYLyZMq/YwNVhMncUJDtW+uxIGGjllBtAg2laLcSFlNkSGZ1NRwbe/D5cgHw\nvxMDtnjaDhTpQCG47L2grGxcKq5wsAiIj2ZqLIbs5SLzogPHvUbK9MUwjtq74C52\nCfmfDEWtxxTOw5TwCogtm15+0a850j4rPjOn9KkCAwEAAaNdMFswDgYDVR0PAQH/\nBAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFG3HL0RK+4hV9Ypn5Ctb\nO2Kk9DU2MBkGA1UdEQQSMBCCDmZyb250LXByb3h5LWNhMA0GCSqGSIb3DQEBCwUA\nA4IBAQBTMv5Ub4QK+hlBYNKc78OawcO45EBv6h7aSkCMjEourUi9xOMH7IVNeeR6\nvaCSy1HBh+FhYF+7VaASE5COxHYguzVVbatpVzyfQ1wxBbJP3tyN0UgdRnLj764t\nj/Y29deD7YYBJ+K8olKZCW8qCw/ZcZBJCE0BY4QAXDUhjO/4qwngSNhz0oV9R2Vu\nNV/fOHa+pwaoh9gIL4b4yo8OfqCJ2vIucF/wAGDQAYWjYaUMq0pEqqCYyR2DLTIC\nLVZiWt2wA7TnSu/jC8IDFWs4n3thyu2bmpsAOWh2PzgjHuf26gNO21MAbJyHTV4x\n+YrY3HawrxNKpEf8LSi382t3Aa/k\n-----END CERTIFICATE-----\n",
                                "requestheader-extra-headers-prefix": "[\"X-Remote-Extra-\"]",
                                "requestheader-group-headers": "[\"X-Remote-Group\"]",
                                "requestheader-username-headers": "[\"X-Remote-User\"]"
                            }
                        },
                        "kube-apiserver-legacy-service-account-token-tracking": {
                            "metadata": {
                                "name": "kube-apiserver-legacy-service-account-token-tracking",
                                "namespace": "kube-system",
                                "uid": "a154a124-b6b9-422a-bc45-de01424b708a",
                                "resourceVersion": "6",
                                "creationTimestamp": "2025-06-11T16:40:59Z",
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:40:59Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:since": {}
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "since": "2025-06-11"
                            }
                        },
                        "kube-proxy": {
                            "metadata": {
                                "name": "kube-proxy",
                                "namespace": "kube-system",
                                "uid": "05c596e5-8268-44d3-9448-61325ad32655",
                                "resourceVersion": "590",
                                "creationTimestamp": "2025-06-11T16:42:44Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "kube-proxy",
                                    "k8s-app": "kube-proxy"
                                },
                                "managedFields": [
                                    {
                                        "manager": "eks",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:44Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                "f:kubeconfig": {}
                                            },
                                            "f:metadata": {
                                                "f:labels": {
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "kubeconfig": "kind: Config\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    server: https://80b2e52ee5c92e74bf7e95d8930b0427.gr7.us-east-1.eks.amazonaws.com\n  name: default\ncontexts:\n- context:\n    cluster: default\n    namespace: default\n    user: default\n  name: default\ncurrent-context: default\nusers:\n- name: default\n  user:\n    tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token"
                            }
                        },
                        "kube-proxy-config": {
                            "metadata": {
                                "name": "kube-proxy-config",
                                "namespace": "kube-system",
                                "uid": "b6dd47d4-c132-47a6-90c9-3f8d5aa66d04",
                                "resourceVersion": "591",
                                "creationTimestamp": "2025-06-11T16:42:44Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "kube-proxy",
                                    "k8s-app": "kube-proxy"
                                },
                                "managedFields": [
                                    {
                                        "manager": "eks",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:44Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                "f:config": {}
                                            },
                                            "f:metadata": {
                                                "f:labels": {
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "config": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: /var/lib/kube-proxy/kubeconfig\n  qps: 5\nclusterCIDR: \"\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  excludeCIDRs: null\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 0.0.0.0:10249\nmode: \"iptables\"\nnodePortAddresses: null\noomScoreAdj: -998\nportRange: \"\""
                            }
                        },
                        "kube-root-ca.crt": {
                            "metadata": {
                                "name": "kube-root-ca.crt",
                                "namespace": "kube-system",
                                "uid": "35373e6a-a4b0-4ac3-94d9-2f9b2634e72c",
                                "resourceVersion": "361",
                                "creationTimestamp": "2025-06-11T16:41:10Z",
                                "annotations": {
                                    "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:41:10Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:data": {
                                                ".": {},
                                                "f:ca.crt": {}
                                            },
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubernetes.io/description": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "data": {
                                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIO+OU4Xabrp4wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA2MTExNjM1MzVaFw0zNTA2MDkxNjQwMzVaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDI7+77junoAgnZ0h49l//VPDVaFfNtSYh/4KwoXHVB1+riws7WEEASUQyp\nSf0zct9pgnYnPjyjxyeied/9nNHGTHmgDnO8bE17P9feNcpegUnmL7t9zsEKKa8s\n7Ln894Fqc//ZWhK3tBWdiXIUWuie9hQBb6xqNsNR4LxoUTUX51o9Rzrcj+Ob3jQ5\n5aaYw3i5vz6OV32dHvkP6VNPqyZBgb7EB/uVuodUTneb/dr58bSz/SP7E62tr8Rt\ncdSMnfjhX6JnbWtxjMNADm4ZI/IPjKbu/jlQBUpQqtzWcAwMgUrKgpzCTf+wAPWt\nAGE0fFt2v1YV6YESAZTw5XoxTD2TAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS829Z4biI4waliQiX2gPgUuzxZcjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBwIm3/EBtC\nmhZK+lHoBJCVr3rwWbwAk5q4Z2U47xmWLQuI9rCjOxfWbsX8pFFeTHBFp8AeOE95\nwAtWffbhs/qRZ1NwSfnOw19ybkLJL6c9jvqnoyiP6T7sCQF/cvCvaETyQhpsR9bP\nq2Ts9mlDWVOClMN/7YwQVWqNxc060aNnpXIkFf916N3GnlPRsodNIEpvk5cEhJrT\nEZMRPF4g6HGZcquMfWuXm6Dwwjf1wO7rwhdJmJQXXi5vEoVvYFEIfqCmnyzvdcCR\nP5x6zC5OIjSajIYLBI9DNP9e4uALamg5kRlaksDUEQt29WuaoJsS4J4/MucyE30M\n+OORV1wrz1HR\n-----END CERTIFICATE-----\n"
                            }
                        }
                    },
                    "secrets": {},
                    "pvcs": {},
                    "jobs": {},
                    "cronJobs": {},
                    "ingresses": {},
                    "networkPolicies": {},
                    "serviceAccounts": {
                        "attachdetach-controller": {
                            "metadata": {
                                "name": "attachdetach-controller",
                                "namespace": "kube-system",
                                "uid": "9a8f3311-00f4-4e4b-a29a-084096b8da07",
                                "resourceVersion": "345",
                                "creationTimestamp": "2025-06-11T16:41:08Z"
                            }
                        },
                        "aws-cloud-provider": {
                            "metadata": {
                                "name": "aws-cloud-provider",
                                "namespace": "kube-system",
                                "uid": "651a80d9-b544-4c0e-ba24-3149b7bd4779",
                                "resourceVersion": "213",
                                "creationTimestamp": "2025-06-11T16:41:03Z"
                            }
                        },
                        "aws-node": {
                            "metadata": {
                                "name": "aws-node",
                                "namespace": "kube-system",
                                "uid": "27e8e719-9f1b-443d-8ca2-0527938d885f",
                                "resourceVersion": "630",
                                "creationTimestamp": "2025-06-11T16:42:45Z",
                                "labels": {
                                    "app.kubernetes.io/instance": "aws-vpc-cni",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "aws-node",
                                    "app.kubernetes.io/version": "v1.19.0",
                                    "helm.sh/chart": "aws-vpc-cni-1.19.0",
                                    "k8s-app": "aws-node"
                                },
                                "managedFields": [
                                    {
                                        "manager": "eks",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:45Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {},
                                                    "f:k8s-app": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "certificate-controller": {
                            "metadata": {
                                "name": "certificate-controller",
                                "namespace": "kube-system",
                                "uid": "46df2661-38a6-44ec-822b-e93d787281e3",
                                "resourceVersion": "326",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        },
                        "clusterrole-aggregation-controller": {
                            "metadata": {
                                "name": "clusterrole-aggregation-controller",
                                "namespace": "kube-system",
                                "uid": "c62c5c62-46eb-4dee-8da7-656856d87f71",
                                "resourceVersion": "333",
                                "creationTimestamp": "2025-06-11T16:41:07Z"
                            }
                        },
                        "coredns": {
                            "metadata": {
                                "name": "coredns",
                                "namespace": "kube-system",
                                "uid": "5a536d3e-650a-4745-a5f9-266f8804ab54",
                                "resourceVersion": "599",
                                "creationTimestamp": "2025-06-11T16:42:45Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "coredns",
                                    "k8s-app": "kube-dns"
                                },
                                "managedFields": [
                                    {
                                        "manager": "eks",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:45Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "cronjob-controller": {
                            "metadata": {
                                "name": "cronjob-controller",
                                "namespace": "kube-system",
                                "uid": "941d3178-6eb0-402a-b92c-c6ad615128e7",
                                "resourceVersion": "344",
                                "creationTimestamp": "2025-06-11T16:41:08Z"
                            }
                        },
                        "daemon-set-controller": {
                            "metadata": {
                                "name": "daemon-set-controller",
                                "namespace": "kube-system",
                                "uid": "4921bd91-2191-48b0-97e3-328c9025b23b",
                                "resourceVersion": "328",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        },
                        "default": {
                            "metadata": {
                                "name": "default",
                                "namespace": "kube-system",
                                "uid": "2ad40341-36ec-487f-8431-0a5b55436670",
                                "resourceVersion": "366",
                                "creationTimestamp": "2025-06-11T16:41:10Z"
                            }
                        },
                        "deployment-controller": {
                            "metadata": {
                                "name": "deployment-controller",
                                "namespace": "kube-system",
                                "uid": "87972345-15c5-4ae0-a504-7f7183d26476",
                                "resourceVersion": "342",
                                "creationTimestamp": "2025-06-11T16:41:08Z"
                            }
                        },
                        "disruption-controller": {
                            "metadata": {
                                "name": "disruption-controller",
                                "namespace": "kube-system",
                                "uid": "efbee52a-0142-436d-b081-6b67a9188b36",
                                "resourceVersion": "337",
                                "creationTimestamp": "2025-06-11T16:41:07Z"
                            }
                        },
                        "endpoint-controller": {
                            "metadata": {
                                "name": "endpoint-controller",
                                "namespace": "kube-system",
                                "uid": "5aa2d551-2b00-4b99-a600-68337ba69840",
                                "resourceVersion": "348",
                                "creationTimestamp": "2025-06-11T16:41:09Z"
                            }
                        },
                        "endpointslice-controller": {
                            "metadata": {
                                "name": "endpointslice-controller",
                                "namespace": "kube-system",
                                "uid": "6497de93-321d-4c42-b546-4dca58eafead",
                                "resourceVersion": "335",
                                "creationTimestamp": "2025-06-11T16:41:07Z"
                            }
                        },
                        "endpointslicemirroring-controller": {
                            "metadata": {
                                "name": "endpointslicemirroring-controller",
                                "namespace": "kube-system",
                                "uid": "a3786d48-9c3a-4d14-b13e-6a2dd3cfa98e",
                                "resourceVersion": "320",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        },
                        "ephemeral-volume-controller": {
                            "metadata": {
                                "name": "ephemeral-volume-controller",
                                "namespace": "kube-system",
                                "uid": "1c2826bf-fd38-4d6c-a611-327689414940",
                                "resourceVersion": "346",
                                "creationTimestamp": "2025-06-11T16:41:09Z"
                            }
                        },
                        "expand-controller": {
                            "metadata": {
                                "name": "expand-controller",
                                "namespace": "kube-system",
                                "uid": "557acd3b-da3c-49c2-9ba2-f6c9a8515a1b",
                                "resourceVersion": "339",
                                "creationTimestamp": "2025-06-11T16:41:08Z"
                            }
                        },
                        "generic-garbage-collector": {
                            "metadata": {
                                "name": "generic-garbage-collector",
                                "namespace": "kube-system",
                                "uid": "8c4c9c6e-91ef-41bf-b378-3a0304031372",
                                "resourceVersion": "322",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        },
                        "horizontal-pod-autoscaler": {
                            "metadata": {
                                "name": "horizontal-pod-autoscaler",
                                "namespace": "kube-system",
                                "uid": "24ee8ad0-f01e-4cab-aa57-0632ab09c007",
                                "resourceVersion": "336",
                                "creationTimestamp": "2025-06-11T16:41:07Z"
                            }
                        },
                        "job-controller": {
                            "metadata": {
                                "name": "job-controller",
                                "namespace": "kube-system",
                                "uid": "39733613-5de2-4b12-b569-5d8ecbe4c578",
                                "resourceVersion": "325",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        },
                        "kube-proxy": {
                            "metadata": {
                                "name": "kube-proxy",
                                "namespace": "kube-system",
                                "uid": "6688d8c0-55df-467a-9def-f4c5880676ef",
                                "resourceVersion": "589",
                                "creationTimestamp": "2025-06-11T16:42:44Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "kube-proxy",
                                    "k8s-app": "kube-proxy"
                                },
                                "managedFields": [
                                    {
                                        "manager": "eks",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:42:44Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "legacy-service-account-token-cleaner": {
                            "metadata": {
                                "name": "legacy-service-account-token-cleaner",
                                "namespace": "kube-system",
                                "uid": "0708751a-2407-4af5-a629-6919474dcba3",
                                "resourceVersion": "340",
                                "creationTimestamp": "2025-06-11T16:41:08Z"
                            }
                        },
                        "namespace-controller": {
                            "metadata": {
                                "name": "namespace-controller",
                                "namespace": "kube-system",
                                "uid": "236f73e3-ea3b-4441-88dd-caa2d0188eee",
                                "resourceVersion": "351",
                                "creationTimestamp": "2025-06-11T16:41:09Z"
                            }
                        },
                        "node-controller": {
                            "metadata": {
                                "name": "node-controller",
                                "namespace": "kube-system",
                                "uid": "0f9676ab-8dc8-4f25-9742-262d1ec823c8",
                                "resourceVersion": "215",
                                "creationTimestamp": "2025-06-11T16:41:03Z"
                            }
                        },
                        "persistent-volume-binder": {
                            "metadata": {
                                "name": "persistent-volume-binder",
                                "namespace": "kube-system",
                                "uid": "1af8c19e-e9ef-44b2-9483-d92436ce4565",
                                "resourceVersion": "354",
                                "creationTimestamp": "2025-06-11T16:41:10Z"
                            }
                        },
                        "pod-garbage-collector": {
                            "metadata": {
                                "name": "pod-garbage-collector",
                                "namespace": "kube-system",
                                "uid": "8e7382e3-6b7d-4074-b996-96d82ef0478f",
                                "resourceVersion": "321",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        },
                        "pv-protection-controller": {
                            "metadata": {
                                "name": "pv-protection-controller",
                                "namespace": "kube-system",
                                "uid": "521305a8-e5f7-4d69-b624-8986ce50c3db",
                                "resourceVersion": "356",
                                "creationTimestamp": "2025-06-11T16:41:10Z"
                            }
                        },
                        "pvc-protection-controller": {
                            "metadata": {
                                "name": "pvc-protection-controller",
                                "namespace": "kube-system",
                                "uid": "184c6c7e-e4b4-4640-bd54-1aaf50e2806f",
                                "resourceVersion": "330",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        },
                        "replicaset-controller": {
                            "metadata": {
                                "name": "replicaset-controller",
                                "namespace": "kube-system",
                                "uid": "c61000f3-e52b-4b64-80c5-185d9b6dd61e",
                                "resourceVersion": "347",
                                "creationTimestamp": "2025-06-11T16:41:09Z"
                            }
                        },
                        "replication-controller": {
                            "metadata": {
                                "name": "replication-controller",
                                "namespace": "kube-system",
                                "uid": "8c190181-dde1-4a70-970e-372663387be8",
                                "resourceVersion": "350",
                                "creationTimestamp": "2025-06-11T16:41:09Z"
                            }
                        },
                        "resourcequota-controller": {
                            "metadata": {
                                "name": "resourcequota-controller",
                                "namespace": "kube-system",
                                "uid": "d1caf8d7-7d67-4577-9eb7-24530f9a7dec",
                                "resourceVersion": "329",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        },
                        "root-ca-cert-publisher": {
                            "metadata": {
                                "name": "root-ca-cert-publisher",
                                "namespace": "kube-system",
                                "uid": "569b2e0d-68d3-4a87-84f4-252a50e4b68d",
                                "resourceVersion": "332",
                                "creationTimestamp": "2025-06-11T16:41:07Z"
                            }
                        },
                        "service-account-controller": {
                            "metadata": {
                                "name": "service-account-controller",
                                "namespace": "kube-system",
                                "uid": "6915b166-f31b-4833-aca7-f082993fd394",
                                "resourceVersion": "352",
                                "creationTimestamp": "2025-06-11T16:41:09Z"
                            }
                        },
                        "service-controller": {
                            "metadata": {
                                "name": "service-controller",
                                "namespace": "kube-system",
                                "uid": "dc31d3a3-5fc9-40d8-ac51-150738a0f462",
                                "resourceVersion": "218",
                                "creationTimestamp": "2025-06-11T16:41:03Z"
                            }
                        },
                        "statefulset-controller": {
                            "metadata": {
                                "name": "statefulset-controller",
                                "namespace": "kube-system",
                                "uid": "dff37ac3-794c-4751-a3f9-c3249e22030a",
                                "resourceVersion": "353",
                                "creationTimestamp": "2025-06-11T16:41:10Z"
                            }
                        },
                        "tagging-controller": {
                            "metadata": {
                                "name": "tagging-controller",
                                "namespace": "kube-system",
                                "uid": "088266b3-d16b-405c-bab5-235a9357aaaa",
                                "resourceVersion": "220",
                                "creationTimestamp": "2025-06-11T16:41:03Z"
                            }
                        },
                        "ttl-after-finished-controller": {
                            "metadata": {
                                "name": "ttl-after-finished-controller",
                                "namespace": "kube-system",
                                "uid": "759f430e-4734-4bb2-b05c-975cf18be061",
                                "resourceVersion": "327",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        },
                        "ttl-controller": {
                            "metadata": {
                                "name": "ttl-controller",
                                "namespace": "kube-system",
                                "uid": "3b231734-5fd5-4723-94b3-1e9bda6152e8",
                                "resourceVersion": "338",
                                "creationTimestamp": "2025-06-11T16:41:08Z"
                            }
                        },
                        "validatingadmissionpolicy-status-controller": {
                            "metadata": {
                                "name": "validatingadmissionpolicy-status-controller",
                                "namespace": "kube-system",
                                "uid": "cd8f7ce0-8d92-45b9-8def-24b9fe90d5df",
                                "resourceVersion": "323",
                                "creationTimestamp": "2025-06-11T16:41:06Z"
                            }
                        }
                    },
                    "roles": {
                        "eks-vpc-resource-controller-role": {
                            "metadata": {
                                "name": "eks-vpc-resource-controller-role",
                                "namespace": "kube-system",
                                "uid": "fb4123ab-feb5-42b8-853b-62bad38c0672",
                                "resourceVersion": "306",
                                "creationTimestamp": "2025-06-11T16:41:05Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks-vpc-resource-controller-role\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"apps\"],\"resourceNames\":[\"vpc-resource-controller\"],\"resources\":[\"deployments\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"amazon-vpc-cni\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"cp-vpc-resource-controller\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resourceNames\":[\"cp-vpc-resource-controller\"],\"resources\":[\"leases\"],\"verbs\":[\"get\",\"update\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:05Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        "apps"
                                    ],
                                    "resources": [
                                        "deployments"
                                    ],
                                    "resourceNames": [
                                        "vpc-resource-controller"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "amazon-vpc-cni"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "update",
                                        "patch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "cp-vpc-resource-controller"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "events"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "update"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ],
                                    "resourceNames": [
                                        "cp-vpc-resource-controller"
                                    ]
                                }
                            ]
                        },
                        "eks:addon-manager": {
                            "metadata": {
                                "name": "eks:addon-manager",
                                "namespace": "kube-system",
                                "uid": "08a19144-c1fa-4aa9-9a4f-83e962d6fae4",
                                "resourceVersion": "284",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:addon-manager\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"policy\"],\"resourceNames\":[\"ebs-csi-controller-pod-disruption-budget\",\"ebs-csi-controller\"],\"resources\":[\"poddisruptionbudgets\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"coredns\",\"kube-proxy\",\"kube-proxy-config\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resourceNames\":[\"aws-node\",\"kube-proxy\",\"ebs-csi-node\",\"ebs-csi-node-windows\"],\"resources\":[\"daemonsets\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resourceNames\":[\"coredns\",\"ebs-csi-controller\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"kube-dns\"],\"resources\":[\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"coredns\",\"aws-node\",\"kube-proxy\",\"ebs-csi-controller-sa\",\"ebs-csi-node-sa\"],\"resources\":[\"serviceaccounts\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "create",
                                        "delete",
                                        "get",
                                        "list",
                                        "patch",
                                        "update",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        "policy"
                                    ],
                                    "resources": [
                                        "poddisruptionbudgets"
                                    ],
                                    "resourceNames": [
                                        "ebs-csi-controller-pod-disruption-budget",
                                        "ebs-csi-controller"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "delete",
                                        "get",
                                        "list",
                                        "patch",
                                        "update",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "coredns",
                                        "kube-proxy",
                                        "kube-proxy-config"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "delete",
                                        "get",
                                        "list",
                                        "patch",
                                        "update",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        "apps"
                                    ],
                                    "resources": [
                                        "daemonsets"
                                    ],
                                    "resourceNames": [
                                        "aws-node",
                                        "kube-proxy",
                                        "ebs-csi-node",
                                        "ebs-csi-node-windows"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "delete",
                                        "get",
                                        "list",
                                        "patch",
                                        "update",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        "apps"
                                    ],
                                    "resources": [
                                        "deployments"
                                    ],
                                    "resourceNames": [
                                        "coredns",
                                        "ebs-csi-controller"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "delete",
                                        "get",
                                        "list",
                                        "patch",
                                        "update",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "services"
                                    ],
                                    "resourceNames": [
                                        "kube-dns"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "delete",
                                        "get",
                                        "list",
                                        "patch",
                                        "update",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "serviceaccounts"
                                    ],
                                    "resourceNames": [
                                        "coredns",
                                        "aws-node",
                                        "kube-proxy",
                                        "ebs-csi-controller-sa",
                                        "ebs-csi-node-sa"
                                    ]
                                }
                            ]
                        },
                        "eks:authenticator": {
                            "metadata": {
                                "name": "eks:authenticator",
                                "namespace": "kube-system",
                                "uid": "3493a051-eb42-4515-8d78-37f5b69a79c7",
                                "resourceVersion": "201",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:authenticator\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"aws-auth\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "create",
                                        "update",
                                        "patch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "events"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "aws-auth"
                                    ]
                                }
                            ]
                        },
                        "eks:az-poller": {
                            "metadata": {
                                "name": "eks:az-poller",
                                "namespace": "kube-system",
                                "uid": "63ca269d-8b89-46e4-b142-bf2c0824b7fe",
                                "resourceVersion": "212",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:az-poller\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"coordination.k8s.io\"],\"resourceNames\":[\"kube-controller-manager\",\"kube-scheduler\",\"cloud-controller-manager\",\"eks-certificates-controller\",\"fargate-scheduler\",\"cp-vpc-resource-controller\",\"amazon-network-policy-controller-k8s\",\"eks-coredns-autoscaler\",\"kms-storage-migrator-lease\"],\"resources\":[\"leases\"],\"verbs\":[\"get\",\"patch\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "patch"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ],
                                    "resourceNames": [
                                        "kube-controller-manager",
                                        "kube-scheduler",
                                        "cloud-controller-manager",
                                        "eks-certificates-controller",
                                        "fargate-scheduler",
                                        "cp-vpc-resource-controller",
                                        "amazon-network-policy-controller-k8s",
                                        "eks-coredns-autoscaler",
                                        "kms-storage-migrator-lease"
                                    ]
                                }
                            ]
                        },
                        "eks:certificate-controller": {
                            "metadata": {
                                "name": "eks:certificate-controller",
                                "namespace": "kube-system",
                                "uid": "035e26f3-bb3c-4dc6-8190-b1a0b66c3e47",
                                "resourceVersion": "226",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:certificate-controller\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\",\"create\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resourceNames\":[\"eks-certificates-controller\"],\"resources\":[\"leases\"],\"verbs\":[\"get\",\"update\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "update",
                                        "create"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "update"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ],
                                    "resourceNames": [
                                        "eks-certificates-controller"
                                    ]
                                }
                            ]
                        },
                        "eks:coredns-autoscaler": {
                            "metadata": {
                                "name": "eks:coredns-autoscaler",
                                "namespace": "kube-system",
                                "uid": "c0183e79-f39e-4a5a-97f6-c9cceb1f8ebc",
                                "resourceVersion": "231",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:coredns-autoscaler\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resourceNames\":[\"eks-coredns-autoscaler\"],\"resources\":[\"leases\"],\"verbs\":[\"get\",\"update\",\"patch\"]},{\"apiGroups\":[\"apps\"],\"resourceNames\":[\"coredns\"],\"resources\":[\"deployments/scale\"],\"verbs\":[\"get\",\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"list\"]},{\"apiGroups\":[\"metrics.k8s.io\"],\"resources\":[\"pods\"],\"verbs\":[\"list\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "create"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "update",
                                        "patch"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ],
                                    "resourceNames": [
                                        "eks-coredns-autoscaler"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "update"
                                    ],
                                    "apiGroups": [
                                        "apps"
                                    ],
                                    "resources": [
                                        "deployments/scale"
                                    ],
                                    "resourceNames": [
                                        "coredns"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "patch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "events"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "list"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "pods"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "list"
                                    ],
                                    "apiGroups": [
                                        "metrics.k8s.io"
                                    ],
                                    "resources": [
                                        "pods"
                                    ]
                                }
                            ]
                        },
                        "eks:fargate-manager": {
                            "metadata": {
                                "name": "eks:fargate-manager",
                                "namespace": "kube-system",
                                "uid": "54d4d6ae-61d3-48f7-8955-179189a9fcb1",
                                "resourceVersion": "277",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-manager\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resourceNames\":[\"aws-auth\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\",\"patch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"get\",\"list\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "update",
                                        "patch",
                                        "delete"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "aws-auth"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "list"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "events"
                                    ]
                                }
                            ]
                        },
                        "eks:k8s-metrics": {
                            "metadata": {
                                "name": "eks:k8s-metrics",
                                "namespace": "kube-system",
                                "uid": "8a17482f-0151-4589-85ae-a6ece7f5a2ec",
                                "resourceVersion": "237",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:k8s-metrics\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"apps\"],\"resourceNames\":[\"aws-node\",\"eks-node-monitoring-agent\"],\"resources\":[\"daemonsets\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"apps\"],\"resourceNames\":[\"vpc-resource-controller\"],\"resources\":[\"deployments\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"amazon-vpc-cni\"],\"resources\":[\"configmaps\"],\"verbs\":[\"list\",\"get\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"eks-extension-metrics-api\"],\"resources\":[\"services\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"list\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get"
                                    ],
                                    "apiGroups": [
                                        "apps"
                                    ],
                                    "resources": [
                                        "daemonsets"
                                    ],
                                    "resourceNames": [
                                        "aws-node",
                                        "eks-node-monitoring-agent"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get"
                                    ],
                                    "apiGroups": [
                                        "apps"
                                    ],
                                    "resources": [
                                        "deployments"
                                    ],
                                    "resourceNames": [
                                        "vpc-resource-controller"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "list",
                                        "get"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "amazon-vpc-cni"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "services"
                                    ],
                                    "resourceNames": [
                                        "eks-extension-metrics-api"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "list"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ]
                                }
                            ]
                        },
                        "eks:network-policy-controller": {
                            "metadata": {
                                "name": "eks:network-policy-controller",
                                "namespace": "kube-system",
                                "uid": "49c62940-49fd-4d4a-b416-ae0f39031da6",
                                "resourceVersion": "292",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "labels": {
                                    "app.kubernetes.io/name": "amazon-network-policy-controller-k8s"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"amazon-network-policy-controller-k8s\"},\"name\":\"eks:network-policy-controller\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resourceNames\":[\"amazon-vpc-cni\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resourceNames\":[\"amazon-network-policy-controller-k8s\"],\"resources\":[\"leases\"],\"verbs\":[\"get\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/name": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "amazon-vpc-cni"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "update",
                                        "patch"
                                    ],
                                    "apiGroups": [
                                        "coordination.k8s.io"
                                    ],
                                    "resources": [
                                        "leases"
                                    ],
                                    "resourceNames": [
                                        "amazon-network-policy-controller-k8s"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "patch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "events"
                                    ]
                                }
                            ]
                        },
                        "eks:node-manager": {
                            "metadata": {
                                "name": "eks:node-manager",
                                "namespace": "kube-system",
                                "uid": "1b8e5703-a94c-4875-9a2a-166e1efede3b",
                                "resourceVersion": "268",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:node-manager\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resourceNames\":[\"aws-auth\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"get\",\"list\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "update",
                                        "patch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "aws-auth"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "list"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "events"
                                    ]
                                }
                            ]
                        },
                        "eks:service-operations-configmaps": {
                            "metadata": {
                                "name": "eks:service-operations-configmaps",
                                "namespace": "kube-system",
                                "uid": "85c01282-b308-4810-8ab0-81f33ad65b3c",
                                "resourceVersion": "251",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:service-operations-configmaps\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resourceNames\":[\"coredns\",\"cp-vpc-resource-controller\",\"kube-proxy\",\"kube-proxy-config\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"aws-auth\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"create\",\"delete\",\"patch\",\"update\"]}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "coredns",
                                        "cp-vpc-resource-controller",
                                        "kube-proxy",
                                        "kube-proxy-config"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "create",
                                        "delete",
                                        "patch",
                                        "update"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "aws-auth"
                                    ]
                                }
                            ]
                        },
                        "extension-apiserver-authentication-reader": {
                            "metadata": {
                                "name": "extension-apiserver-authentication-reader",
                                "namespace": "kube-system",
                                "uid": "d89eb7b0-7d79-4935-ab31-b5cb90572710",
                                "resourceVersion": "179",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "extension-apiserver-authentication"
                                    ]
                                }
                            ]
                        },
                        "system::leader-locking-kube-controller-manager": {
                            "metadata": {
                                "name": "system::leader-locking-kube-controller-manager",
                                "namespace": "kube-system",
                                "uid": "8165643b-c543-4b76-b714-5a2715025384",
                                "resourceVersion": "183",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "update"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "kube-controller-manager"
                                    ]
                                }
                            ]
                        },
                        "system::leader-locking-kube-scheduler": {
                            "metadata": {
                                "name": "system::leader-locking-kube-scheduler",
                                "namespace": "kube-system",
                                "uid": "46c5a234-c252-4f54-b80a-1bfaa173de20",
                                "resourceVersion": "184",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "get",
                                        "update"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ],
                                    "resourceNames": [
                                        "kube-scheduler"
                                    ]
                                }
                            ]
                        },
                        "system:controller:bootstrap-signer": {
                            "metadata": {
                                "name": "system:controller:bootstrap-signer",
                                "namespace": "kube-system",
                                "uid": "4e50779e-73d2-41cf-9916-b363823e591f",
                                "resourceVersion": "180",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "get",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "secrets"
                                    ]
                                }
                            ]
                        },
                        "system:controller:cloud-provider": {
                            "metadata": {
                                "name": "system:controller:cloud-provider",
                                "namespace": "kube-system",
                                "uid": "4ea0b462-1650-4790-a450-d8dca4beca74",
                                "resourceVersion": "181",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "create",
                                        "get",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "configmaps"
                                    ]
                                }
                            ]
                        },
                        "system:controller:token-cleaner": {
                            "metadata": {
                                "name": "system:controller:token-cleaner",
                                "namespace": "kube-system",
                                "uid": "91ef6c74-8376-44bb-9a92-866da868eb1f",
                                "resourceVersion": "182",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:rules": {}
                                        }
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "verbs": [
                                        "delete",
                                        "get",
                                        "list",
                                        "watch"
                                    ],
                                    "apiGroups": [
                                        ""
                                    ],
                                    "resources": [
                                        "secrets"
                                    ]
                                },
                                {
                                    "verbs": [
                                        "create",
                                        "patch",
                                        "update"
                                    ],
                                    "apiGroups": [
                                        "",
                                        "events.k8s.io"
                                    ],
                                    "resources": [
                                        "events"
                                    ]
                                }
                            ]
                        }
                    },
                    "roleBindings": {
                        "dz-metrics-server-auth-reader": {
                            "metadata": {
                                "name": "dz-metrics-server-auth-reader",
                                "namespace": "kube-system",
                                "uid": "702f85d0-f687-4e9d-b979-743cfc0ed494",
                                "resourceVersion": "30350",
                                "creationTimestamp": "2025-06-11T17:21:38Z",
                                "labels": {
                                    "app.kubernetes.io/instance": "metrics-server",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "dz-metrics-server",
                                    "app.kubernetes.io/version": "0.7.2",
                                    "helm.sh/chart": "metrics-server-3.12.2"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-metrics-server\",\"app.kubernetes.io/version\":\"0.7.2\",\"helm.sh/chart\":\"metrics-server-3.12.2\"},\"name\":\"dz-metrics-server-auth-reader\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"extension-apiserver-authentication-reader\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"dz-metrics-server\",\"namespace\":\"devzero-zxporter\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T19:21:46Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/version": {},
                                                    "f:helm.sh/chart": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "ServiceAccount",
                                    "name": "dz-metrics-server",
                                    "namespace": "devzero-zxporter"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "extension-apiserver-authentication-reader"
                            }
                        },
                        "eks-vpc-resource-controller-rolebinding": {
                            "metadata": {
                                "name": "eks-vpc-resource-controller-rolebinding",
                                "namespace": "kube-system",
                                "uid": "a50a00aa-0d4a-469f-bcd9-4e85b6414d11",
                                "resourceVersion": "307",
                                "creationTimestamp": "2025-06-11T16:41:05Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks-vpc-resource-controller-rolebinding\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks-vpc-resource-controller-role\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:vpc-resource-controller\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:05Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:vpc-resource-controller"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks-vpc-resource-controller-role"
                            }
                        },
                        "eks:addon-manager": {
                            "metadata": {
                                "name": "eks:addon-manager",
                                "namespace": "kube-system",
                                "uid": "0aeac59a-e10a-404f-b4da-a8375964ac8e",
                                "resourceVersion": "283",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:addon-manager\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:addon-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:addon-manager\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:addon-manager"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:addon-manager"
                            }
                        },
                        "eks:authenticator": {
                            "metadata": {
                                "name": "eks:authenticator",
                                "namespace": "kube-system",
                                "uid": "d373438b-eca9-4b5f-b421-febbfd1c3f7e",
                                "resourceVersion": "202",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:authenticator\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:authenticator\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:authenticator\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:authenticator"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:authenticator"
                            }
                        },
                        "eks:az-poller": {
                            "metadata": {
                                "name": "eks:az-poller",
                                "namespace": "kube-system",
                                "uid": "b8fc8528-caf5-47a6-9799-4bbb8ff454f3",
                                "resourceVersion": "214",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:az-poller\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:az-poller\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:az-poller\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:az-poller"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:az-poller"
                            }
                        },
                        "eks:certificate-controller": {
                            "metadata": {
                                "name": "eks:certificate-controller",
                                "namespace": "kube-system",
                                "uid": "782ac2d6-7ba6-47c4-934a-8aff78c9d043",
                                "resourceVersion": "227",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:certificate-controller\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:certificate-controller\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:certificate-controller\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:certificate-controller"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:certificate-controller"
                            }
                        },
                        "eks:cloud-controller-manager:apiserver-authentication-reader": {
                            "metadata": {
                                "name": "eks:cloud-controller-manager:apiserver-authentication-reader",
                                "namespace": "kube-system",
                                "uid": "9f8423f0-dfee-4d18-9388-9f357fd778ea",
                                "resourceVersion": "207",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:cloud-controller-manager:apiserver-authentication-reader\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"extension-apiserver-authentication-reader\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:cloud-controller-manager\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:cloud-controller-manager"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "extension-apiserver-authentication-reader"
                            }
                        },
                        "eks:coredns-autoscaler": {
                            "metadata": {
                                "name": "eks:coredns-autoscaler",
                                "namespace": "kube-system",
                                "uid": "f8093aad-6802-4158-ae8a-ac5699a873ed",
                                "resourceVersion": "233",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:coredns-autoscaler\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:coredns-autoscaler\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:coredns-autoscaler\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:coredns-autoscaler"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:coredns-autoscaler"
                            }
                        },
                        "eks:fargate-manager": {
                            "metadata": {
                                "name": "eks:fargate-manager",
                                "namespace": "kube-system",
                                "uid": "8ecdd923-350c-4535-a845-cb13aa1df544",
                                "resourceVersion": "276",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-manager\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:fargate-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:fargate-manager\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:fargate-manager"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:fargate-manager"
                            }
                        },
                        "eks:k8s-metrics": {
                            "metadata": {
                                "name": "eks:k8s-metrics",
                                "namespace": "kube-system",
                                "uid": "47809da8-fc00-4836-8df1-defd6ac24873",
                                "resourceVersion": "238",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:k8s-metrics\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:k8s-metrics\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:k8s-metrics\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:k8s-metrics"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:k8s-metrics"
                            }
                        },
                        "eks:network-policy-controller": {
                            "metadata": {
                                "name": "eks:network-policy-controller",
                                "namespace": "kube-system",
                                "uid": "2153e1e7-abf8-4900-800b-32f6fb2e8c5c",
                                "resourceVersion": "294",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "labels": {
                                    "app.kubernetes.io/component": "rbac",
                                    "app.kubernetes.io/created-by": "amazon-network-policy-controller-k8s",
                                    "app.kubernetes.io/name": "amazon-network-policy-controller-k8s",
                                    "app.kubernetes.io/part-of": "amazon-network-policy-controller-k8s"
                                },
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"rbac\",\"app.kubernetes.io/created-by\":\"amazon-network-policy-controller-k8s\",\"app.kubernetes.io/name\":\"amazon-network-policy-controller-k8s\",\"app.kubernetes.io/part-of\":\"amazon-network-policy-controller-k8s\"},\"name\":\"eks:network-policy-controller\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:network-policy-controller\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:network-policy-controller\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/component": {},
                                                    "f:app.kubernetes.io/created-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:network-policy-controller"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:network-policy-controller"
                            }
                        },
                        "eks:node-manager": {
                            "metadata": {
                                "name": "eks:node-manager",
                                "namespace": "kube-system",
                                "uid": "4fd68902-c1a7-4d1f-81db-ff0ba2ad371a",
                                "resourceVersion": "267",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:node-manager\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:node-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:node-manager\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:node-manager"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:node-manager"
                            }
                        },
                        "eks:service-operations": {
                            "metadata": {
                                "name": "eks:service-operations",
                                "namespace": "kube-system",
                                "uid": "05552429-c360-4fcb-a74f-148072e327b8",
                                "resourceVersion": "252",
                                "creationTimestamp": "2025-06-11T16:41:03Z",
                                "annotations": {
                                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:service-operations\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:service-operations-configmaps\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Group\",\"name\":\"eks:service-operations\"}]}\n"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kubectl-client-side-apply",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:03Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "Group",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "eks:service-operations"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "eks:service-operations-configmaps"
                            }
                        },
                        "system::extension-apiserver-authentication-reader": {
                            "metadata": {
                                "name": "system::extension-apiserver-authentication-reader",
                                "namespace": "kube-system",
                                "uid": "a0d5be2e-6d04-4ab1-9382-ed189310eafa",
                                "resourceVersion": "186",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "system:kube-controller-manager"
                                },
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "system:kube-scheduler"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "extension-apiserver-authentication-reader"
                            }
                        },
                        "system::leader-locking-kube-controller-manager": {
                            "metadata": {
                                "name": "system::leader-locking-kube-controller-manager",
                                "namespace": "kube-system",
                                "uid": "0c2ff1a2-bb0a-4765-a5f7-97905bb23b14",
                                "resourceVersion": "187",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "system:kube-controller-manager"
                                },
                                {
                                    "kind": "ServiceAccount",
                                    "name": "kube-controller-manager",
                                    "namespace": "kube-system"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "system::leader-locking-kube-controller-manager"
                            }
                        },
                        "system::leader-locking-kube-scheduler": {
                            "metadata": {
                                "name": "system::leader-locking-kube-scheduler",
                                "namespace": "kube-system",
                                "uid": "dc15242f-cae0-45e8-be6e-87c65905ebe0",
                                "resourceVersion": "188",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "User",
                                    "apiGroup": "rbac.authorization.k8s.io",
                                    "name": "system:kube-scheduler"
                                },
                                {
                                    "kind": "ServiceAccount",
                                    "name": "kube-scheduler",
                                    "namespace": "kube-system"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "system::leader-locking-kube-scheduler"
                            }
                        },
                        "system:controller:bootstrap-signer": {
                            "metadata": {
                                "name": "system:controller:bootstrap-signer",
                                "namespace": "kube-system",
                                "uid": "dde6c8ca-bdc1-409f-b839-70206789c274",
                                "resourceVersion": "189",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "ServiceAccount",
                                    "name": "bootstrap-signer",
                                    "namespace": "kube-system"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "system:controller:bootstrap-signer"
                            }
                        },
                        "system:controller:cloud-provider": {
                            "metadata": {
                                "name": "system:controller:cloud-provider",
                                "namespace": "kube-system",
                                "uid": "f25970ca-2d73-4043-9753-24189818b4a3",
                                "resourceVersion": "190",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "ServiceAccount",
                                    "name": "cloud-provider",
                                    "namespace": "kube-system"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "system:controller:cloud-provider"
                            }
                        },
                        "system:controller:token-cleaner": {
                            "metadata": {
                                "name": "system:controller:token-cleaner",
                                "namespace": "kube-system",
                                "uid": "5634b5cb-ddc3-4b38-a544-c135e69fb48b",
                                "resourceVersion": "191",
                                "creationTimestamp": "2025-06-11T16:41:01Z",
                                "labels": {
                                    "kubernetes.io/bootstrapping": "rbac-defaults"
                                },
                                "annotations": {
                                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-apiserver",
                                        "operation": "Update",
                                        "apiVersion": "rbac.authorization.k8s.io/v1",
                                        "time": "2025-06-11T16:41:01Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:kubernetes.io/bootstrapping": {}
                                                }
                                            },
                                            "f:roleRef": {},
                                            "f:subjects": {}
                                        }
                                    }
                                ]
                            },
                            "subjects": [
                                {
                                    "kind": "ServiceAccount",
                                    "name": "token-cleaner",
                                    "namespace": "kube-system"
                                }
                            ],
                            "roleRef": {
                                "apiGroup": "rbac.authorization.k8s.io",
                                "kind": "Role",
                                "name": "system:controller:token-cleaner"
                            }
                        }
                    },
                    "podDisruptionBudgets": {
                        "coredns": {
                            "metadata": {
                                "name": "coredns",
                                "namespace": "kube-system",
                                "uid": "f9f7fb13-e4de-40ea-8c1b-3373d0b78ef1",
                                "resourceVersion": "1601",
                                "generation": 1,
                                "creationTimestamp": "2025-06-11T16:42:45Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "coredns",
                                    "k8s-app": "kube-dns"
                                },
                                "managedFields": [
                                    {
                                        "manager": "eks",
                                        "operation": "Apply",
                                        "apiVersion": "policy/v1",
                                        "time": "2025-06-11T16:42:45Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:maxUnavailable": {},
                                                "f:selector": {}
                                            }
                                        }
                                    },
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "policy/v1",
                                        "time": "2025-06-11T16:48:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:status": {
                                                "f:conditions": {
                                                    ".": {},
                                                    "k:{\"type\":\"DisruptionAllowed\"}": {
                                                        ".": {},
                                                        "f:lastTransitionTime": {},
                                                        "f:message": {},
                                                        "f:observedGeneration": {},
                                                        "f:reason": {},
                                                        "f:status": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:currentHealthy": {},
                                                "f:desiredHealthy": {},
                                                "f:disruptionsAllowed": {},
                                                "f:expectedPods": {},
                                                "f:observedGeneration": {}
                                            }
                                        },
                                        "subresource": "status"
                                    }
                                ]
                            },
                            "spec": {
                                "selector": {
                                    "matchLabels": {
                                        "eks.amazonaws.com/component": "coredns",
                                        "k8s-app": "kube-dns"
                                    }
                                },
                                "maxUnavailable": 1
                            },
                            "status": {
                                "observedGeneration": 1,
                                "disruptionsAllowed": 1,
                                "currentHealthy": 2,
                                "desiredHealthy": 1,
                                "expectedPods": 2,
                                "conditions": [
                                    {
                                        "type": "DisruptionAllowed",
                                        "status": "True",
                                        "observedGeneration": 1,
                                        "lastTransitionTime": "2025-06-11T16:48:04Z",
                                        "reason": "SufficientPods",
                                        "message": ""
                                    }
                                ]
                            }
                        }
                    },
                    "endpoints": {
                        "eks-extension-metrics-api": {
                            "metadata": {
                                "name": "eks-extension-metrics-api",
                                "namespace": "kube-system",
                                "uid": "1e94cddb-15f0-496f-af2b-0bf8d1d91c59",
                                "resourceVersion": "263",
                                "creationTimestamp": "2025-06-11T16:41:04Z",
                                "managedFields": [
                                    {
                                        "manager": "eks-internal",
                                        "operation": "Apply",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:41:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:subsets": {}
                                        }
                                    }
                                ]
                            },
                            "subsets": [
                                {
                                    "addresses": [
                                        {
                                            "ip": "172.0.32.0"
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "name": "metrics-api",
                                            "port": 10443,
                                            "protocol": "TCP"
                                        }
                                    ]
                                }
                            ]
                        },
                        "kube-dns": {
                            "metadata": {
                                "name": "kube-dns",
                                "namespace": "kube-system",
                                "uid": "bd654379-c992-4cb4-a738-5dea1f539f5d",
                                "resourceVersion": "1604",
                                "creationTimestamp": "2025-06-11T16:42:45Z",
                                "labels": {
                                    "eks.amazonaws.com/component": "kube-dns",
                                    "k8s-app": "kube-dns",
                                    "kubernetes.io/cluster-service": "true",
                                    "kubernetes.io/name": "CoreDNS"
                                },
                                "annotations": {
                                    "endpoints.kubernetes.io/last-change-trigger-time": "2025-06-11T16:48:04Z"
                                },
                                "managedFields": [
                                    {
                                        "manager": "kube-controller-manager",
                                        "operation": "Update",
                                        "apiVersion": "v1",
                                        "time": "2025-06-11T16:48:04Z",
                                        "fieldsType": "FieldsV1",
                                        "fieldsV1": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:eks.amazonaws.com/component": {},
                                                    "f:k8s-app": {},
                                                    "f:kubernetes.io/cluster-service": {},
                                                    "f:kubernetes.io/name": {}
                                                }
                                            },
                                            "f:subsets": {}
                                        }
                                    }
                                ]
                            },
                            "subsets": [
                                {
                                    "addresses": [
                                        {
                                            "ip": "10.8.101.22",
                                            "nodeName": "ip-10-8-110-61.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "kube-system",
                                                "name": "coredns-586b798467-9ngj9",
                                                "uid": "3ccc0d03-7187-4348-9415-94bba0c106a8"
                                            }
                                        },
                                        {
                                            "ip": "10.8.105.223",
                                            "nodeName": "ip-10-8-110-61.ec2.internal",
                                            "targetRef": {
                                                "kind": "Pod",
                                                "namespace": "kube-system",
                                                "name": "coredns-586b798467-2wnrg",
                                                "uid": "79c24ab3-b7e7-485a-a2f2-ac1bf92a8260"
                                            }
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "name": "dns-tcp",
                                            "port": 53,
                                            "protocol": "TCP"
                                        },
                                        {
                                            "name": "dns",
                                            "port": 53,
                                            "protocol": "UDP"
                                        },
                                        {
                                            "name": "metrics",
                                            "port": 9153,
                                            "protocol": "TCP"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "limitRanges": {},
                    "resourceQuotas": {},
                    "unscheduledPods": {},
                    "hash": "208ede13cd5aaf0ebcde3fc6065aecf4b9423422c0c7b42864c80469fc1d64de"
                }
            },
            "clusterScoped": {
                "persistentVolumes": {},
                "storageClasses": {
                    "gp2": {
                        "metadata": {
                            "name": "gp2",
                            "uid": "366cd168-819d-4b60-b47b-ffb3d723aa17",
                            "resourceVersion": "273",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{},\"name\":\"gp2\"},\"parameters\":{\"fsType\":\"ext4\",\"type\":\"gp2\"},\"provisioner\":\"kubernetes.io/aws-ebs\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "storage.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:parameters": {
                                            ".": {},
                                            "f:fsType": {},
                                            "f:type": {}
                                        },
                                        "f:provisioner": {},
                                        "f:reclaimPolicy": {},
                                        "f:volumeBindingMode": {}
                                    }
                                }
                            ]
                        },
                        "provisioner": "kubernetes.io/aws-ebs",
                        "parameters": {
                            "fsType": "ext4",
                            "type": "gp2"
                        },
                        "reclaimPolicy": "Delete",
                        "volumeBindingMode": "WaitForFirstConsumer"
                    }
                },
                "clusterRoles": {
                    "admin": {
                        "metadata": {
                            "name": "admin",
                            "uid": "96cce23d-ba22-4ce5-899b-268b308cbc10",
                            "resourceVersion": "6781",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "clusterrole-aggregation-controller",
                                    "operation": "Apply",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:19:35Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:rules": {}
                                    }
                                },
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:aggregationRule": {
                                            ".": {},
                                            "f:clusterRoleSelectors": {}
                                        },
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/attach",
                                    "pods/exec",
                                    "pods/portforward",
                                    "pods/proxy",
                                    "secrets",
                                    "services/proxy"
                                ]
                            },
                            {
                                "verbs": [
                                    "impersonate"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "pods/attach",
                                    "pods/exec",
                                    "pods/portforward",
                                    "pods/proxy"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/eviction"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "events",
                                    "persistentvolumeclaims",
                                    "replicationcontrollers",
                                    "replicationcontrollers/scale",
                                    "secrets",
                                    "serviceaccounts",
                                    "services",
                                    "services/proxy"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts/token"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "deployments/rollback",
                                    "deployments/scale",
                                    "replicasets",
                                    "replicasets/scale",
                                    "statefulsets",
                                    "statefulsets/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "jobs"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "deployments/rollback",
                                    "deployments/scale",
                                    "ingresses",
                                    "networkpolicies",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicationcontrollers/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses",
                                    "networkpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods",
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "endpoints",
                                    "persistentvolumeclaims",
                                    "persistentvolumeclaims/status",
                                    "pods",
                                    "replicationcontrollers",
                                    "replicationcontrollers/scale",
                                    "serviceaccounts",
                                    "services",
                                    "services/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "bindings",
                                    "events",
                                    "limitranges",
                                    "namespaces/status",
                                    "pods/log",
                                    "pods/status",
                                    "replicationcontrollers/status",
                                    "resourcequotas",
                                    "resourcequotas/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "controllerrevisions",
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "statefulsets",
                                    "statefulsets/scale",
                                    "statefulsets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers",
                                    "horizontalpodautoscalers/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "cronjobs/status",
                                    "jobs",
                                    "jobs/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "replicationcontrollers/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets",
                                    "poddisruptionbudgets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "localsubjectaccessreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "rbac.authorization.k8s.io"
                                ],
                                "resources": [
                                    "rolebindings",
                                    "roles"
                                ]
                            }
                        ],
                        "aggregationRule": {
                            "clusterRoleSelectors": [
                                {
                                    "matchLabels": {
                                        "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                                    }
                                }
                            ]
                        }
                    },
                    "aws-node": {
                        "metadata": {
                            "name": "aws-node",
                            "uid": "163222fa-6744-4d48-90c9-6ad9564a296a",
                            "resourceVersion": "636",
                            "creationTimestamp": "2025-06-11T16:42:45Z",
                            "labels": {
                                "app.kubernetes.io/instance": "aws-vpc-cni",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "aws-node",
                                "app.kubernetes.io/version": "v1.19.0",
                                "helm.sh/chart": "aws-vpc-cni-1.19.0",
                                "k8s-app": "aws-node"
                            },
                            "managedFields": [
                                {
                                    "manager": "eks",
                                    "operation": "Apply",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:42:45Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {},
                                                "f:k8s-app": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch",
                                    "get"
                                ],
                                "apiGroups": [
                                    "crd.k8s.amazonaws.com"
                                ],
                                "resources": [
                                    "eniconfigs"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch",
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch",
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch",
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "list"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.aws"
                                ],
                                "resources": [
                                    "policyendpoints"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    "networking.k8s.aws"
                                ],
                                "resources": [
                                    "policyendpoints/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "patch"
                                ],
                                "apiGroups": [
                                    "vpcresources.k8s.aws"
                                ],
                                "resources": [
                                    "cninodes"
                                ]
                            }
                        ]
                    },
                    "cluster-admin": {
                        "metadata": {
                            "name": "cluster-admin",
                            "uid": "5ecd8e3a-60e6-47e7-a802-1355f81fd138",
                            "resourceVersion": "70",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "*"
                                ],
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "*"
                                ],
                                "nonResourceURLs": [
                                    "*"
                                ]
                            }
                        ]
                    },
                    "devzero-zxporter-collectionpolicy-editor-role": {
                        "metadata": {
                            "name": "devzero-zxporter-collectionpolicy-editor-role",
                            "uid": "d4b4c356-ec2e-43c2-9bb8-6515274abc18",
                            "resourceVersion": "7338",
                            "creationTimestamp": "2025-06-11T17:21:43Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "kustomize",
                                "app.kubernetes.io/name": "devzero-zxporter"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/managed-by\":\"kustomize\",\"app.kubernetes.io/name\":\"devzero-zxporter\"},\"name\":\"devzero-zxporter-collectionpolicy-editor-role\"},\"rules\":[{\"apiGroups\":[\"devzero.io\"],\"resources\":[\"collectionpolicies\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"devzero.io\"],\"resources\":[\"collectionpolicies/status\"],\"verbs\":[\"get\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:43Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "devzero.io"
                                ],
                                "resources": [
                                    "collectionpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    "devzero.io"
                                ],
                                "resources": [
                                    "collectionpolicies/status"
                                ]
                            }
                        ]
                    },
                    "devzero-zxporter-collectionpolicy-viewer-role": {
                        "metadata": {
                            "name": "devzero-zxporter-collectionpolicy-viewer-role",
                            "uid": "b88b1c67-2e8a-41f6-b919-def7f50ce96b",
                            "resourceVersion": "7339",
                            "creationTimestamp": "2025-06-11T17:21:43Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "kustomize",
                                "app.kubernetes.io/name": "devzero-zxporter"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/managed-by\":\"kustomize\",\"app.kubernetes.io/name\":\"devzero-zxporter\"},\"name\":\"devzero-zxporter-collectionpolicy-viewer-role\"},\"rules\":[{\"apiGroups\":[\"devzero.io\"],\"resources\":[\"collectionpolicies\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"devzero.io\"],\"resources\":[\"collectionpolicies/status\"],\"verbs\":[\"get\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:43Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "devzero.io"
                                ],
                                "resources": [
                                    "collectionpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    "devzero.io"
                                ],
                                "resources": [
                                    "collectionpolicies/status"
                                ]
                            }
                        ]
                    },
                    "devzero-zxporter-manager-role": {
                        "metadata": {
                            "name": "devzero-zxporter-manager-role",
                            "uid": "66b3e087-bde0-4b63-bd58-c93148405d5e",
                            "resourceVersion": "7341",
                            "creationTimestamp": "2025-06-11T17:21:44Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"devzero-zxporter-manager-role\"},\"rules\":[{\"apiGroups\":[\"apiregistration.k8s.io\"],\"resources\":[\"apiservices\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"daemonsets\",\"deployments\",\"replicasets\",\"statefulsets\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"argoproj.io\"],\"resources\":[\"rollouts\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"autoscaling\"],\"resources\":[\"horizontalpodautoscalers\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"autoscaling.k8s.io\"],\"resources\":[\"verticalpodautoscalers\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"cronjobs\",\"jobs\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"endpoints\",\"events\",\"limitranges\",\"namespaces\",\"nodes\",\"persistentvolumeclaims\",\"persistentvolumes\",\"pods\",\"replicationcontrollers\",\"resourcequotas\",\"serviceaccounts\",\"services\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes/metrics\",\"nodes/status\",\"pods/status\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"datadoghq.com\"],\"resources\":[\"extendeddaemonsetreplicasets\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"devzero.io\"],\"resources\":[\"collectionpolicies\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"devzero.io\"],\"resources\":[\"collectionpolicies/finalizers\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"devzero.io\"],\"resources\":[\"collectionpolicies/status\"],\"verbs\":[\"get\",\"patch\",\"update\"]},{\"apiGroups\":[\"karpenter.k8s.aws\"],\"resources\":[\"awsnodetemplates\",\"ec2nodeclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"karpenter.sh\"],\"resources\":[\"machines\",\"nodeclaims\",\"nodepools\",\"provisioners\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"metrics.k8s.io\"],\"resources\":[\"nodes\",\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingressclasses\",\"ingresses\",\"networkpolicies\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"policy\"],\"resources\":[\"poddisruptionbudgets\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"clusterrolebindings\",\"clusterroles\",\"role\",\"rolebindings\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"roles\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"csinodes\",\"storageclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:44Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "apiregistration.k8s.io"
                                ],
                                "resources": [
                                    "apiservices"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "replicasets",
                                    "statefulsets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "argoproj.io"
                                ],
                                "resources": [
                                    "rollouts"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "autoscaling.k8s.io"
                                ],
                                "resources": [
                                    "verticalpodautoscalers"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "jobs"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "endpoints",
                                    "events",
                                    "limitranges",
                                    "namespaces",
                                    "nodes",
                                    "persistentvolumeclaims",
                                    "persistentvolumes",
                                    "pods",
                                    "replicationcontrollers",
                                    "resourcequotas",
                                    "serviceaccounts",
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/metrics",
                                    "nodes/status",
                                    "pods/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "datadoghq.com"
                                ],
                                "resources": [
                                    "extendeddaemonsetreplicasets"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "devzero.io"
                                ],
                                "resources": [
                                    "collectionpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "devzero.io"
                                ],
                                "resources": [
                                    "collectionpolicies/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "devzero.io"
                                ],
                                "resources": [
                                    "collectionpolicies/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "karpenter.k8s.aws"
                                ],
                                "resources": [
                                    "awsnodetemplates",
                                    "ec2nodeclasses"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "karpenter.sh"
                                ],
                                "resources": [
                                    "machines",
                                    "nodeclaims",
                                    "nodepools",
                                    "provisioners"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "nodes",
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingressclasses",
                                    "ingresses",
                                    "networkpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "rbac.authorization.k8s.io"
                                ],
                                "resources": [
                                    "clusterrolebindings",
                                    "clusterroles",
                                    "role",
                                    "rolebindings"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "rbac.authorization.k8s.io"
                                ],
                                "resources": [
                                    "roles"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodes",
                                    "storageclasses"
                                ]
                            }
                        ]
                    },
                    "devzero-zxporter-metrics-auth-role": {
                        "metadata": {
                            "name": "devzero-zxporter-metrics-auth-role",
                            "uid": "5a4a74e9-f1b2-442c-98c9-17f19f3fa56e",
                            "resourceVersion": "7345",
                            "creationTimestamp": "2025-06-11T17:21:45Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"devzero-zxporter-metrics-auth-role\"},\"rules\":[{\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"],\"verbs\":[\"create\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:45Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ]
                            }
                        ]
                    },
                    "devzero-zxporter-metrics-reader": {
                        "metadata": {
                            "name": "devzero-zxporter-metrics-reader",
                            "uid": "c3c38e4f-f8af-4957-a1de-f089d1b564ab",
                            "resourceVersion": "7347",
                            "creationTimestamp": "2025-06-11T17:21:45Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"devzero-zxporter-metrics-reader\"},\"rules\":[{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:45Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get"
                                ],
                                "nonResourceURLs": [
                                    "/metrics"
                                ]
                            }
                        ]
                    },
                    "edit": {
                        "metadata": {
                            "name": "edit",
                            "uid": "2986d2a5-1336-41e2-b783-2e3a5c5c1be4",
                            "resourceVersion": "6779",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults",
                                "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "clusterrole-aggregation-controller",
                                    "operation": "Apply",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:19:35Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:rules": {}
                                    }
                                },
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:aggregationRule": {
                                            ".": {},
                                            "f:clusterRoleSelectors": {}
                                        },
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {},
                                                "f:rbac.authorization.k8s.io/aggregate-to-admin": {}
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/attach",
                                    "pods/exec",
                                    "pods/portforward",
                                    "pods/proxy",
                                    "secrets",
                                    "services/proxy"
                                ]
                            },
                            {
                                "verbs": [
                                    "impersonate"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "pods/attach",
                                    "pods/exec",
                                    "pods/portforward",
                                    "pods/proxy"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/eviction"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "events",
                                    "persistentvolumeclaims",
                                    "replicationcontrollers",
                                    "replicationcontrollers/scale",
                                    "secrets",
                                    "serviceaccounts",
                                    "services",
                                    "services/proxy"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts/token"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "deployments/rollback",
                                    "deployments/scale",
                                    "replicasets",
                                    "replicasets/scale",
                                    "statefulsets",
                                    "statefulsets/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "jobs"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "deployments/rollback",
                                    "deployments/scale",
                                    "ingresses",
                                    "networkpolicies",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicationcontrollers/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses",
                                    "networkpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods",
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "endpoints",
                                    "persistentvolumeclaims",
                                    "persistentvolumeclaims/status",
                                    "pods",
                                    "replicationcontrollers",
                                    "replicationcontrollers/scale",
                                    "serviceaccounts",
                                    "services",
                                    "services/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "bindings",
                                    "events",
                                    "limitranges",
                                    "namespaces/status",
                                    "pods/log",
                                    "pods/status",
                                    "replicationcontrollers/status",
                                    "resourcequotas",
                                    "resourcequotas/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "controllerrevisions",
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "statefulsets",
                                    "statefulsets/scale",
                                    "statefulsets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers",
                                    "horizontalpodautoscalers/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "cronjobs/status",
                                    "jobs",
                                    "jobs/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "replicationcontrollers/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets",
                                    "poddisruptionbudgets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies"
                                ]
                            }
                        ],
                        "aggregationRule": {
                            "clusterRoleSelectors": [
                                {
                                    "matchLabels": {
                                        "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                                    }
                                }
                            ]
                        }
                    },
                    "eks:addon-manager": {
                        "metadata": {
                            "name": "eks:addon-manager",
                            "uid": "c16251f2-1c62-4198-96ab-47e34f40c2bf",
                            "resourceVersion": "271",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:addon-manager\"},\"rules\":[{\"apiGroups\":[\"crd.k8s.amazonaws.com\"],\"resources\":[\"eniconfigs\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"namespaces\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"update\",\"watch\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"*\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resourceNames\":[\"aws-node\",\"system:coredns\",\"eks:kube-proxy\",\"ebs-csi-provisioner-binding\",\"ebs-csi-node-binding\",\"ebs-csi-attacher-binding\",\"ebs-csi-snapshotter-binding\",\"ebs-csi-resizer-binding\",\"ebs-csi-node-getter-binding\"],\"resources\":[\"clusterrolebindings\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resourceNames\":[\"aws-node\",\"system:coredns\",\"ebs-external-attacher-role\",\"ebs-csi-node-role\",\"ebs-external-provisioner-role\",\"ebs-external-snapshotter-role\",\"ebs-external-resizer-role\"],\"resources\":[\"clusterroles\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resourceNames\":[\"eniconfigs.crd.k8s.amazonaws.com\"],\"resources\":[\"customresourcedefinitions\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"endpoints\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"list\",\"watch\",\"create\",\"patch\",\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"secrets\"],\"verbs\":[\"get\",\"list\"]},{\"apiGroups\":[\"discovery.k8s.io\"],\"resources\":[\"endpointslices\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"events.k8s.io\"],\"resources\":[\"events\"],\"verbs\":[\"list\",\"watch\",\"create\",\"patch\",\"update\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"replicasets\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resourceNames\":[\"ebs.csi.aws.com\"],\"resources\":[\"csidrivers\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"persistentvolumes\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"watch\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"persistentvolumeclaims\"],\"verbs\":[\"get\",\"list\",\"watch\",\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"persistentvolumeclaims/status\"],\"verbs\":[\"update\",\"patch\"]},{\"apiGroups\":[\"csi.storage.k8s.io\"],\"resources\":[\"csinodeinfos\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"storageclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"volumeattachments\"],\"verbs\":[\"get\",\"list\",\"watch\",\"update\",\"patch\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"volumeattachments/status\"],\"verbs\":[\"patch\"]},{\"apiGroups\":[\"snapshot.storage.k8s.io\"],\"resources\":[\"volumesnapshots\"],\"verbs\":[\"get\",\"list\"]},{\"apiGroups\":[\"snapshot.storage.k8s.io\"],\"resources\":[\"volumesnapshotcontents\"],\"verbs\":[\"create\",\"get\",\"list\",\"watch\",\"update\",\"delete\",\"patch\"]},{\"apiGroups\":[\"snapshot.storage.k8s.io\"],\"resources\":[\"volumesnapshotclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"snapshot.storage.k8s.io\"],\"resources\":[\"volumesnapshotcontents/status\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"csinodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"get\",\"watch\",\"list\",\"delete\",\"update\",\"create\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"volumeattachments\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "crd.k8s.amazonaws.com"
                                ],
                                "resources": [
                                    "eniconfigs"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "rbac.authorization.k8s.io"
                                ],
                                "resources": [
                                    "clusterrolebindings"
                                ],
                                "resourceNames": [
                                    "aws-node",
                                    "system:coredns",
                                    "eks:kube-proxy",
                                    "ebs-csi-provisioner-binding",
                                    "ebs-csi-node-binding",
                                    "ebs-csi-attacher-binding",
                                    "ebs-csi-snapshotter-binding",
                                    "ebs-csi-resizer-binding",
                                    "ebs-csi-node-getter-binding"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "rbac.authorization.k8s.io"
                                ],
                                "resources": [
                                    "clusterroles"
                                ],
                                "resourceNames": [
                                    "aws-node",
                                    "system:coredns",
                                    "ebs-external-attacher-role",
                                    "ebs-csi-node-role",
                                    "ebs-external-provisioner-role",
                                    "ebs-external-snapshotter-role",
                                    "ebs-external-resizer-role"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "resourceNames": [
                                    "eniconfigs.crd.k8s.amazonaws.com"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch",
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch",
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "replicasets"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csidrivers"
                                ],
                                "resourceNames": [
                                    "ebs.csi.aws.com"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ]
                            },
                            {
                                "verbs": [
                                    "update",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "csi.storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodeinfos"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "patch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "volumeattachments"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "volumeattachments/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list"
                                ],
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshots"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "delete",
                                    "patch"
                                ],
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshotcontents"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshotclasses"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "snapshot.storage.k8s.io"
                                ],
                                "resources": [
                                    "volumesnapshotcontents/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list",
                                    "delete",
                                    "update",
                                    "create"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "volumeattachments"
                                ]
                            }
                        ]
                    },
                    "eks:az-poller": {
                        "metadata": {
                            "name": "eks:az-poller",
                            "uid": "0902d6c8-6e69-4ecc-b292-4ff95e46a6d7",
                            "resourceVersion": "208",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:az-poller\"},\"rules\":[{\"apiGroups\":[\"\"],\"resourceNames\":[\"kubernetes\"],\"resources\":[\"endpoints\"],\"verbs\":[\"get\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"list\",\"patch\",\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"patch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ],
                                "resourceNames": [
                                    "kubernetes"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "patch",
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            }
                        ]
                    },
                    "eks:certificate-controller-approver": {
                        "metadata": {
                            "name": "eks:certificate-controller-approver",
                            "uid": "6dd3c9af-c425-4dd1-925c-05cb494a0dbe",
                            "resourceVersion": "217",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:certificate-controller-approver\"},\"rules\":[{\"apiGroups\":[\"certificates.k8s.io\"],\"resourceNames\":[\"kubernetes.io/kubelet-serving\"],\"resources\":[\"signers\"],\"verbs\":[\"approve\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "approve"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/kubelet-serving"
                                ]
                            }
                        ]
                    },
                    "eks:certificate-controller-manager": {
                        "metadata": {
                            "name": "eks:certificate-controller-manager",
                            "uid": "aaba3c61-cb52-4c1e-982d-5ded950c9dc2",
                            "resourceVersion": "221",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:certificate-controller-manager\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            }
                        ]
                    },
                    "eks:certificate-controller-signer": {
                        "metadata": {
                            "name": "eks:certificate-controller-signer",
                            "uid": "a9972d0c-f375-48d8-ba51-a81938a69342",
                            "resourceVersion": "219",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:certificate-controller-signer\"},\"rules\":[{\"apiGroups\":[\"certificates.k8s.io\"],\"resourceNames\":[\"beta.eks.amazonaws.com/app-serving\"],\"resources\":[\"signers\"],\"verbs\":[\"sign\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "sign"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "resourceNames": [
                                    "beta.eks.amazonaws.com/app-serving"
                                ]
                            }
                        ]
                    },
                    "eks:cloud-controller-manager": {
                        "metadata": {
                            "name": "eks:cloud-controller-manager",
                            "uid": "c374ee0c-bdb4-499b-97e3-3176be352c51",
                            "resourceVersion": "205",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:cloud-controller-manager\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\",\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes/status\"],\"verbs\":[\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services/status\"],\"verbs\":[\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"serviceaccounts\"],\"verbs\":[\"create\",\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"persistentvolumes\"],\"verbs\":[\"get\",\"list\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"endpoints\"],\"verbs\":[\"create\",\"get\",\"list\",\"watch\",\"update\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"create\",\"get\",\"list\",\"watch\",\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"serviceaccounts/token\"],\"verbs\":[\"create\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "*"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts/token"
                                ]
                            }
                        ]
                    },
                    "eks:cloud-provider-extraction-migration": {
                        "metadata": {
                            "name": "eks:cloud-provider-extraction-migration",
                            "uid": "0f222b50-b69a-4e35-bbca-ecb4f62de300",
                            "resourceVersion": "254",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:cloud-provider-extraction-migration\"},\"rules\":[{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resourceNames\":[\"cloud-provider-extraction-migration\"],\"resources\":[\"leases\"],\"verbs\":[\"create\",\"list\",\"get\",\"update\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "list",
                                    "get",
                                    "update"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "resourceNames": [
                                    "cloud-provider-extraction-migration"
                                ]
                            }
                        ]
                    },
                    "eks:cluster-event-watcher": {
                        "metadata": {
                            "name": "eks:cluster-event-watcher",
                            "uid": "cef486eb-fa3c-41e1-865d-a1de90329b2d",
                            "resourceVersion": "228",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:cluster-event-watcher\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "nodes"
                                ]
                            }
                        ]
                    },
                    "eks:coredns-autoscaler": {
                        "metadata": {
                            "name": "eks:coredns-autoscaler",
                            "uid": "eaf8b357-47ad-4803-b168-e622ed0ec954",
                            "resourceVersion": "230",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:coredns-autoscaler\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"metrics.k8s.io\"],\"resources\":[\"nodes\"],\"verbs\":[\"list\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "list"
                                ],
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            }
                        ]
                    },
                    "eks:extension-metrics-apiserver": {
                        "metadata": {
                            "name": "eks:extension-metrics-apiserver",
                            "uid": "d953eb52-0aff-4d3c-a2a7-e4f47bf3aadf",
                            "resourceVersion": "234",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:extension-metrics-apiserver\"},\"rules\":null}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "rules": null
                    },
                    "eks:fargate-manager": {
                        "metadata": {
                            "name": "eks:fargate-manager",
                            "uid": "ff19b7b4-153f-461d-91dc-4173a5c74f0b",
                            "resourceVersion": "280",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-manager\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods/eviction\"],\"verbs\":[\"create\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "delete"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/eviction"
                                ]
                            }
                        ]
                    },
                    "eks:fargate-scheduler": {
                        "metadata": {
                            "name": "eks:fargate-scheduler",
                            "uid": "f8fa8abc-0dce-441c-8787-75caf8d4c206",
                            "resourceVersion": "235",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-scheduler\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"persistentvolumes\",\"persistentvolumeclaims\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods/status\"],\"verbs\":[\"get\",\"list\",\"watch\",\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"fargate-scheduler\"],\"resources\":[\"configmaps\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resourceNames\":[\"fargate-scheduler\"],\"resources\":[\"leases\"],\"verbs\":[\"get\",\"update\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods/binding\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\",\"delete\"]},{\"apiGroups\":[\"events.k8s.io\",\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "persistentvolumes",
                                    "persistentvolumeclaims"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "resourceNames": [
                                    "fargate-scheduler"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "update"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "resourceNames": [
                                    "fargate-scheduler"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/binding"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "delete"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "events.k8s.io",
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "eks:k8s-metrics": {
                        "metadata": {
                            "name": "eks:k8s-metrics",
                            "uid": "9022ca35-a84b-46bd-ab12-76ee1b5436cd",
                            "resourceVersion": "239",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:k8s-metrics\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"endpoints\",\"pods\",\"nodes\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\"],\"verbs\":[\"list\",\"watch\",\"get\"]},{\"nonResourceURLs\":[\"/metrics\",\"/metrics/slis\",\"/debug/api_priority_and_fairness/*\",\"/version\"],\"verbs\":[\"get\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "pods",
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch",
                                    "get"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "deployments"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "nonResourceURLs": [
                                    "/metrics",
                                    "/metrics/slis",
                                    "/debug/api_priority_and_fairness/*",
                                    "/version"
                                ]
                            }
                        ]
                    },
                    "eks:kms-storage-migrator": {
                        "metadata": {
                            "name": "eks:kms-storage-migrator",
                            "uid": "5104f475-b4d2-4c08-aa5d-e087b290e1cd",
                            "resourceVersion": "241",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:kms-storage-migrator\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"secrets\"],\"verbs\":[\"get\",\"list\",\"watch\",\"patch\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"create\",\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resourceNames\":[\"kms-storage-migrator-lease\"],\"resources\":[\"leases\"],\"verbs\":[\"update\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "secrets"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "resourceNames": [
                                    "kms-storage-migrator-lease"
                                ]
                            }
                        ]
                    },
                    "eks:network-policy-controller": {
                        "metadata": {
                            "name": "eks:network-policy-controller",
                            "uid": "c03f5c76-9fda-48f0-a55f-93a7ef700bb1",
                            "resourceVersion": "293",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "labels": {
                                "app.kubernetes.io/name": "amazon-network-policy-controller-k8s"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"creationTimestamp\":null,\"labels\":{\"app.kubernetes.io/name\":\"amazon-network-policy-controller-k8s\"},\"name\":\"eks:network-policy-controller\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.aws\"],\"resources\":[\"policyendpoints\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.aws\"],\"resources\":[\"policyendpoints/finalizers\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"networking.k8s.aws\"],\"resources\":[\"policyendpoints/status\"],\"verbs\":[\"get\",\"patch\",\"update\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"],\"verbs\":[\"get\",\"list\",\"patch\",\"update\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/name": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.aws"
                                ],
                                "resources": [
                                    "policyendpoints"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "networking.k8s.aws"
                                ],
                                "resources": [
                                    "policyendpoints/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "networking.k8s.aws"
                                ],
                                "resources": [
                                    "policyendpoints/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "networkpolicies"
                                ]
                            }
                        ]
                    },
                    "eks:network-webhooks": {
                        "metadata": {
                            "name": "eks:network-webhooks",
                            "uid": "398779f0-a677-45c4-a2db-536e941a2786",
                            "resourceVersion": "243",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:network-webhooks\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"eks.amazonaws.com\"],\"resources\":[\"targetgroupbindings\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "eks.amazonaws.com"
                                ],
                                "resources": [
                                    "targetgroupbindings"
                                ]
                            }
                        ]
                    },
                    "eks:node-bootstrapper": {
                        "metadata": {
                            "name": "eks:node-bootstrapper",
                            "uid": "074c1d7b-f8f3-4702-864c-8fced9ee89a2",
                            "resourceVersion": "282",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "labels": {
                                "eks.amazonaws.com/component": "node"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"node\"},\"name\":\"eks:node-bootstrapper\"},\"rules\":[{\"apiGroups\":[\"certificates.k8s.io\"],\"resources\":[\"certificatesigningrequests/selfnodeserver\"],\"verbs\":[\"create\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:eks.amazonaws.com/component": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests/selfnodeserver"
                                ]
                            }
                        ]
                    },
                    "eks:node-manager": {
                        "metadata": {
                            "name": "eks:node-manager",
                            "uid": "e9811a63-ef1e-48f8-adbc-73f46a54fe64",
                            "resourceVersion": "203",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:node-manager\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods/eviction\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"apps\"],\"resourceNames\":[\"aws-node\"],\"resources\":[\"daemonsets\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"list\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "delete"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/eviction"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets"
                                ],
                                "resourceNames": [
                                    "aws-node"
                                ]
                            },
                            {
                                "verbs": [
                                    "list"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "eks:nodewatcher": {
                        "metadata": {
                            "name": "eks:nodewatcher",
                            "uid": "8942fb0f-78d8-4e4b-8c35-56481258c50d",
                            "resourceVersion": "245",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:nodewatcher\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"watch\",\"list\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            }
                        ]
                    },
                    "eks:pod-identity-mutating-webhook": {
                        "metadata": {
                            "name": "eks:pod-identity-mutating-webhook",
                            "uid": "304c6c8f-721b-471b-84fb-01b0478d7220",
                            "resourceVersion": "247",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:pod-identity-mutating-webhook\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"serviceaccounts\"],\"verbs\":[\"get\",\"watch\",\"list\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "watch",
                                    "list"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ]
                            }
                        ]
                    },
                    "eks:service-operations": {
                        "metadata": {
                            "name": "eks:service-operations",
                            "uid": "e382a973-3d9f-401a-b924-16fd27ec126c",
                            "resourceVersion": "249",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:service-operations\"},\"rules\":[{\"nonResourceURLs\":[\"/healthz*\",\"/readyz*\",\"/metrics*\",\"/debug/api_priority_and_fairness/*\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"endpoints\",\"persistentvolumeclaims\",\"persistentvolumeclaims/status\",\"pods\",\"replicationcontrollers\",\"replicationcontrollers/scale\",\"serviceaccounts\",\"services\",\"services/status\",\"bindings\",\"events\",\"limitranges\",\"namespaces/status\",\"pods/status\",\"replicationcontrollers/status\",\"resourcequotas\",\"resourcequotas/status\",\"namespaces\",\"nodes\",\"nodes/status\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"events.k8s.io\"],\"resources\":[\"events\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"discovery.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"autoscaling\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"policy\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"certificates.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"admissionregistration.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"apiregistration.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"policy\"],\"resources\":[\"podsecuritypolicies\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"node.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"flowcontrol.apiserver.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"scheduling.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\"]},{\"apiGroups\":[\"crd.k8s.amazonaws.com\"],\"resources\":[\"eniconfigs\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"vpcresources.k8s.aws\"],\"resources\":[\"securitygrouppolicies\",\"cninodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.aws\"],\"resources\":[\"policyendpoints\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get"
                                ],
                                "nonResourceURLs": [
                                    "/healthz*",
                                    "/readyz*",
                                    "/metrics*",
                                    "/debug/api_priority_and_fairness/*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "persistentvolumeclaims",
                                    "persistentvolumeclaims/status",
                                    "pods",
                                    "replicationcontrollers",
                                    "replicationcontrollers/scale",
                                    "serviceaccounts",
                                    "services",
                                    "services/status",
                                    "bindings",
                                    "events",
                                    "limitranges",
                                    "namespaces/status",
                                    "pods/status",
                                    "replicationcontrollers/status",
                                    "resourcequotas",
                                    "resourcequotas/status",
                                    "namespaces",
                                    "nodes",
                                    "nodes/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "rbac.authorization.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "admissionregistration.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apiregistration.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "podsecuritypolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "node.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "flowcontrol.apiserver.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list"
                                ],
                                "apiGroups": [
                                    "scheduling.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "crd.k8s.amazonaws.com"
                                ],
                                "resources": [
                                    "eniconfigs"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "vpcresources.k8s.aws"
                                ],
                                "resources": [
                                    "securitygrouppolicies",
                                    "cninodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.aws"
                                ],
                                "resources": [
                                    "policyendpoints"
                                ]
                            }
                        ]
                    },
                    "eks:tagging-controller": {
                        "metadata": {
                            "name": "eks:tagging-controller",
                            "uid": "290ed9c1-1d6e-481c-8b64-55cddba88a8d",
                            "resourceVersion": "255",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:tagging-controller\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"patch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            }
                        ]
                    },
                    "prometheus-dz-prometheus-server": {
                        "metadata": {
                            "name": "prometheus-dz-prometheus-server",
                            "uid": "b746ccf4-0657-4902-9235-a024054be7fe",
                            "resourceVersion": "7159",
                            "creationTimestamp": "2025-06-11T17:21:28Z",
                            "labels": {
                                "app.kubernetes.io/component": "server",
                                "app.kubernetes.io/instance": "prometheus",
                                "app.kubernetes.io/name": "dz-prometheus",
                                "app.kubernetes.io/part-of": "dz-prometheus",
                                "app.kubernetes.io/version": "v3.4.1",
                                "helm.sh/chart": "prometheus-27.20.0"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"dz-prometheus\",\"app.kubernetes.io/part-of\":\"dz-prometheus\",\"app.kubernetes.io/version\":\"v3.4.1\",\"helm.sh/chart\":\"prometheus-27.20.0\"},\"name\":\"prometheus-dz-prometheus-server\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"nodes/proxy\",\"nodes/metrics\",\"services\",\"endpoints\",\"pods\",\"ingresses\",\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses/status\",\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"discovery.k8s.io\"],\"resources\":[\"endpointslices\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:28Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/component": {},
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/part-of": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "nodes/proxy",
                                    "nodes/metrics",
                                    "services",
                                    "endpoints",
                                    "pods",
                                    "ingresses",
                                    "configmaps"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses/status",
                                    "ingresses"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "nonResourceURLs": [
                                    "/metrics"
                                ]
                            }
                        ]
                    },
                    "prometheus-kube-state-metrics": {
                        "metadata": {
                            "name": "prometheus-kube-state-metrics",
                            "uid": "b0fb529f-cd46-4c3c-b0b5-8f80eb302ca4",
                            "resourceVersion": "7158",
                            "creationTimestamp": "2025-06-11T17:21:27Z",
                            "labels": {
                                "app.kubernetes.io/component": "metrics",
                                "app.kubernetes.io/instance": "prometheus",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "kube-state-metrics",
                                "app.kubernetes.io/part-of": "kube-state-metrics",
                                "app.kubernetes.io/version": "2.15.0",
                                "helm.sh/chart": "kube-state-metrics-5.33.2"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"kube-state-metrics\",\"app.kubernetes.io/part-of\":\"kube-state-metrics\",\"app.kubernetes.io/version\":\"2.15.0\",\"helm.sh/chart\":\"kube-state-metrics-5.33.2\"},\"name\":\"prometheus-kube-state-metrics\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"list\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:27Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/component": {},
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/part-of": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            }
                        ]
                    },
                    "system:aggregate-to-admin": {
                        "metadata": {
                            "name": "system:aggregate-to-admin",
                            "uid": "51d9230b-f238-459e-8ce2-bab2b0d1b863",
                            "resourceVersion": "78",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults",
                                "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {},
                                                "f:rbac.authorization.k8s.io/aggregate-to-admin": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "localsubjectaccessreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "rbac.authorization.k8s.io"
                                ],
                                "resources": [
                                    "rolebindings",
                                    "roles"
                                ]
                            }
                        ]
                    },
                    "system:aggregate-to-edit": {
                        "metadata": {
                            "name": "system:aggregate-to-edit",
                            "uid": "526a7263-7965-4653-9154-245372d02ff8",
                            "resourceVersion": "79",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults",
                                "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {},
                                                "f:rbac.authorization.k8s.io/aggregate-to-edit": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/attach",
                                    "pods/exec",
                                    "pods/portforward",
                                    "pods/proxy",
                                    "secrets",
                                    "services/proxy"
                                ]
                            },
                            {
                                "verbs": [
                                    "impersonate"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "pods/attach",
                                    "pods/exec",
                                    "pods/portforward",
                                    "pods/proxy"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/eviction"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "events",
                                    "persistentvolumeclaims",
                                    "replicationcontrollers",
                                    "replicationcontrollers/scale",
                                    "secrets",
                                    "serviceaccounts",
                                    "services",
                                    "services/proxy"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts/token"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "deployments/rollback",
                                    "deployments/scale",
                                    "replicasets",
                                    "replicasets/scale",
                                    "statefulsets",
                                    "statefulsets/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "jobs"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "deployments/rollback",
                                    "deployments/scale",
                                    "ingresses",
                                    "networkpolicies",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicationcontrollers/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses",
                                    "networkpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "deletecollection",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            }
                        ]
                    },
                    "system:aggregate-to-view": {
                        "metadata": {
                            "name": "system:aggregate-to-view",
                            "uid": "c2cf86a2-132a-4a12-9464-d3712b78c254",
                            "resourceVersion": "80",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults",
                                "rbac.authorization.k8s.io/aggregate-to-view": "true"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {},
                                                "f:rbac.authorization.k8s.io/aggregate-to-view": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "endpoints",
                                    "persistentvolumeclaims",
                                    "persistentvolumeclaims/status",
                                    "pods",
                                    "replicationcontrollers",
                                    "replicationcontrollers/scale",
                                    "serviceaccounts",
                                    "services",
                                    "services/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "bindings",
                                    "events",
                                    "limitranges",
                                    "namespaces/status",
                                    "pods/log",
                                    "pods/status",
                                    "replicationcontrollers/status",
                                    "resourcequotas",
                                    "resourcequotas/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "controllerrevisions",
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "statefulsets",
                                    "statefulsets/scale",
                                    "statefulsets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers",
                                    "horizontalpodautoscalers/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "cronjobs/status",
                                    "jobs",
                                    "jobs/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "replicationcontrollers/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets",
                                    "poddisruptionbudgets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies"
                                ]
                            }
                        ]
                    },
                    "system:auth-delegator": {
                        "metadata": {
                            "name": "system:auth-delegator",
                            "uid": "8d84fa7b-fe5b-4372-8b14-4cb344057422",
                            "resourceVersion": "86",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ]
                            }
                        ]
                    },
                    "system:basic-user": {
                        "metadata": {
                            "name": "system:basic-user",
                            "uid": "c3f28bd7-4810-4485-b18f-e627e9365958",
                            "resourceVersion": "73",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "selfsubjectaccessreviews",
                                    "selfsubjectrulesreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "selfsubjectreviews"
                                ]
                            }
                        ]
                    },
                    "system:certificates.k8s.io:certificatesigningrequests:nodeclient": {
                        "metadata": {
                            "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                            "uid": "b2269b1c-0b04-4a5d-8099-5348dfb5da68",
                            "resourceVersion": "91",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests/nodeclient"
                                ]
                            }
                        ]
                    },
                    "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient": {
                        "metadata": {
                            "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                            "uid": "133914aa-e675-4d40-868c-2962e6238159",
                            "resourceVersion": "92",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests/selfnodeclient"
                                ]
                            }
                        ]
                    },
                    "system:certificates.k8s.io:kube-apiserver-client-approver": {
                        "metadata": {
                            "name": "system:certificates.k8s.io:kube-apiserver-client-approver",
                            "uid": "ed8ffaf5-93a0-4877-9c12-6af1f15870b6",
                            "resourceVersion": "96",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "approve"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/kube-apiserver-client"
                                ]
                            }
                        ]
                    },
                    "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver": {
                        "metadata": {
                            "name": "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
                            "uid": "d9ab2642-4fe5-4726-9315-225ba5ce0533",
                            "resourceVersion": "97",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "approve"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/kube-apiserver-client-kubelet"
                                ]
                            }
                        ]
                    },
                    "system:certificates.k8s.io:kubelet-serving-approver": {
                        "metadata": {
                            "name": "system:certificates.k8s.io:kubelet-serving-approver",
                            "uid": "7c1fd135-e6fc-43c5-9e5a-b4fb34a833eb",
                            "resourceVersion": "95",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "approve"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/kubelet-serving"
                                ]
                            }
                        ]
                    },
                    "system:certificates.k8s.io:legacy-unknown-approver": {
                        "metadata": {
                            "name": "system:certificates.k8s.io:legacy-unknown-approver",
                            "uid": "d2f307ac-dae6-4a0b-a87e-0de335410493",
                            "resourceVersion": "94",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "approve"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/legacy-unknown"
                                ]
                            }
                        ]
                    },
                    "system:controller:attachdetach-controller": {
                        "metadata": {
                            "name": "system:controller:attachdetach-controller",
                            "uid": "77b89f7a-bf60-47df-afa4-34cef9bf109f",
                            "resourceVersion": "101",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims",
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "volumeattachments"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csidrivers"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodes"
                                ]
                            }
                        ]
                    },
                    "system:controller:certificate-controller": {
                        "metadata": {
                            "name": "system:controller:certificate-controller",
                            "uid": "3d6beea7-dfa6-4005-be41-d2d18b716d48",
                            "resourceVersion": "127",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests/approval",
                                    "certificatesigningrequests/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "approve"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/kube-apiserver-client-kubelet"
                                ]
                            },
                            {
                                "verbs": [
                                    "sign"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "signers"
                                ],
                                "resourceNames": [
                                    "kubernetes.io/kube-apiserver-client",
                                    "kubernetes.io/kube-apiserver-client-kubelet",
                                    "kubernetes.io/kubelet-serving",
                                    "kubernetes.io/legacy-unknown"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:clusterrole-aggregation-controller": {
                        "metadata": {
                            "name": "system:controller:clusterrole-aggregation-controller",
                            "uid": "32e6ba6e-3c12-4e52-bb6b-3517d82064cb",
                            "resourceVersion": "102",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "escalate",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "rbac.authorization.k8s.io"
                                ],
                                "resources": [
                                    "clusterroles"
                                ]
                            }
                        ]
                    },
                    "system:controller:cronjob-controller": {
                        "metadata": {
                            "name": "system:controller:cronjob-controller",
                            "uid": "a5ba9975-4526-4446-9f87-27e7933cedf5",
                            "resourceVersion": "103",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "delete",
                                    "list"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:daemon-set-controller": {
                        "metadata": {
                            "name": "system:controller:daemon-set-controller",
                            "uid": "3bb80f4e-caf7-43f7-a4e6-68afb94cd533",
                            "resourceVersion": "104",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "list",
                                    "patch",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/binding"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "controllerrevisions"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:deployment-controller": {
                        "metadata": {
                            "name": "system:controller:deployment-controller",
                            "uid": "eb1c637a-fde5-47b1-8e5a-32bddd45c3a7",
                            "resourceVersion": "105",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:disruption-controller": {
                        "metadata": {
                            "name": "system:controller:disruption-controller",
                            "uid": "57971d78-67d1-4777-8fda-93201755bfd3",
                            "resourceVersion": "106",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status"
                                ]
                            }
                        ]
                    },
                    "system:controller:endpoint-controller": {
                        "metadata": {
                            "name": "system:controller:endpoint-controller",
                            "uid": "98ed7a3a-b4b5-46ce-ba0b-81149807606f",
                            "resourceVersion": "107",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints/restricted"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:endpointslice-controller": {
                        "metadata": {
                            "name": "system:controller:endpointslice-controller",
                            "uid": "68c0c963-83c7-42c9-aea0-81401ae61941",
                            "resourceVersion": "108",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "pods",
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:endpointslicemirroring-controller": {
                        "metadata": {
                            "name": "system:controller:endpointslicemirroring-controller",
                            "uid": "f8b8535e-d93b-4b21-aea2-6f739ceef5a1",
                            "resourceVersion": "109",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:ephemeral-volume-controller": {
                        "metadata": {
                            "name": "system:controller:ephemeral-volume-controller",
                            "uid": "797a6ba4-a395-4c0b-82ae-d4dfaa8d0f8c",
                            "resourceVersion": "111",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:expand-controller": {
                        "metadata": {
                            "name": "system:controller:expand-controller",
                            "uid": "82800538-43fa-4de4-8e15-f2940942ace7",
                            "resourceVersion": "110",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:generic-garbage-collector": {
                        "metadata": {
                            "name": "system:controller:generic-garbage-collector",
                            "uid": "bfbd3808-eed2-423a-b6c9-547ec93af8f3",
                            "resourceVersion": "112",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:horizontal-pod-autoscaler": {
                        "metadata": {
                            "name": "system:controller:horizontal-pod-autoscaler",
                            "uid": "600c3707-75b9-4e27-bfc9-4550ff540efb",
                            "resourceVersion": "113",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "update"
                                ],
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "list"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "list"
                                ],
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list"
                                ],
                                "apiGroups": [
                                    "custom.metrics.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list"
                                ],
                                "apiGroups": [
                                    "external.metrics.k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:job-controller": {
                        "metadata": {
                            "name": "system:controller:job-controller",
                            "uid": "700b423d-2ac0-4440-acef-e86afdbae678",
                            "resourceVersion": "114",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "list",
                                    "patch",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:legacy-service-account-token-cleaner": {
                        "metadata": {
                            "name": "system:controller:legacy-service-account-token-cleaner",
                            "uid": "23fcf8bc-8eff-4d05-8068-aead13c4468c",
                            "resourceVersion": "133",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "resourceNames": [
                                    "kube-apiserver-legacy-service-account-token-tracking"
                                ]
                            },
                            {
                                "verbs": [
                                    "delete",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ]
                            }
                        ]
                    },
                    "system:controller:namespace-controller": {
                        "metadata": {
                            "name": "system:controller:namespace-controller",
                            "uid": "4d752e86-5275-4c2a-b21e-743c296d9884",
                            "resourceVersion": "115",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces/finalize",
                                    "namespaces/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "delete",
                                    "deletecollection",
                                    "get",
                                    "list"
                                ],
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ]
                            }
                        ]
                    },
                    "system:controller:node-controller": {
                        "metadata": {
                            "name": "system:controller:node-controller",
                            "uid": "0a40f1d4-3a5d-4be4-8134-44fa8df1fbeb",
                            "resourceVersion": "116",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "delete",
                                    "list"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            }
                        ]
                    },
                    "system:controller:persistent-volume-binder": {
                        "metadata": {
                            "name": "system:controller:persistent-volume-binder",
                            "uid": "8fa096b3-b917-4eff-9daa-75fdcbcd3a40",
                            "resourceVersion": "117",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:pod-garbage-collector": {
                        "metadata": {
                            "name": "system:controller:pod-garbage-collector",
                            "uid": "b7370063-5d72-4baf-811a-5cd9b52f897f",
                            "resourceVersion": "118",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "delete",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status"
                                ]
                            }
                        ]
                    },
                    "system:controller:pv-protection-controller": {
                        "metadata": {
                            "name": "system:controller:pv-protection-controller",
                            "uid": "2d14c3a5-fa52-4f03-bcb7-390165ba8703",
                            "resourceVersion": "129",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:pvc-protection-controller": {
                        "metadata": {
                            "name": "system:controller:pvc-protection-controller",
                            "uid": "b1565a4c-9f5c-45b0-aadf-3db45a112231",
                            "resourceVersion": "128",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:replicaset-controller": {
                        "metadata": {
                            "name": "system:controller:replicaset-controller",
                            "uid": "3e686b40-6c99-4f09-a205-7b8745fef44f",
                            "resourceVersion": "119",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "list",
                                    "patch",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:replication-controller": {
                        "metadata": {
                            "name": "system:controller:replication-controller",
                            "uid": "4d481b06-1272-4910-b992-9509074cf4ac",
                            "resourceVersion": "120",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "list",
                                    "patch",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:resourcequota-controller": {
                        "metadata": {
                            "name": "system:controller:resourcequota-controller",
                            "uid": "5175f4ef-2cda-41f4-9bbe-f1e97c2bdb70",
                            "resourceVersion": "121",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "resourcequotas/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:root-ca-cert-publisher": {
                        "metadata": {
                            "name": "system:controller:root-ca-cert-publisher",
                            "uid": "c9042ad0-8953-43ad-812a-d692f8a1802d",
                            "resourceVersion": "131",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:route-controller": {
                        "metadata": {
                            "name": "system:controller:route-controller",
                            "uid": "76b09e3f-0acd-47f5-ba55-59175d6cdbd6",
                            "resourceVersion": "122",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:service-account-controller": {
                        "metadata": {
                            "name": "system:controller:service-account-controller",
                            "uid": "25406bfa-91f9-4af6-a42a-efe1186ddcb2",
                            "resourceVersion": "123",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:service-controller": {
                        "metadata": {
                            "name": "system:controller:service-controller",
                            "uid": "c907a96d-ddb5-4856-89f6-480e8b501eaa",
                            "resourceVersion": "124",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:statefulset-controller": {
                        "metadata": {
                            "name": "system:controller:statefulset-controller",
                            "uid": "89398cea-b424-4310-abb7-c285f6314187",
                            "resourceVersion": "125",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets/finalizers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "controllerrevisions"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "delete",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/finalizers"
                                ]
                            }
                        ]
                    },
                    "system:controller:ttl-after-finished-controller": {
                        "metadata": {
                            "name": "system:controller:ttl-after-finished-controller",
                            "uid": "40248212-421f-4d35-9d9f-236beb59a1d5",
                            "resourceVersion": "130",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:ttl-controller": {
                        "metadata": {
                            "name": "system:controller:ttl-controller",
                            "uid": "e0264f04-e741-4817-aac5-391204139036",
                            "resourceVersion": "126",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:controller:validatingadmissionpolicy-status-controller": {
                        "metadata": {
                            "name": "system:controller:validatingadmissionpolicy-status-controller",
                            "uid": "534324cc-563f-4e7a-99d5-459ca6595be2",
                            "resourceVersion": "132",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "admissionregistration.k8s.io"
                                ],
                                "resources": [
                                    "validatingadmissionpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "admissionregistration.k8s.io"
                                ],
                                "resources": [
                                    "validatingadmissionpolicies/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:coredns": {
                        "metadata": {
                            "name": "system:coredns",
                            "uid": "e5c0c50c-cfa3-4277-8ade-3e45b487f582",
                            "resourceVersion": "603",
                            "creationTimestamp": "2025-06-11T16:42:45Z",
                            "labels": {
                                "eks.amazonaws.com/component": "coredns",
                                "k8s-app": "kube-dns",
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "managedFields": [
                                {
                                    "manager": "eks",
                                    "operation": "Apply",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:42:45Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                "f:eks.amazonaws.com/component": {},
                                                "f:k8s-app": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services",
                                    "pods",
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            }
                        ]
                    },
                    "system:discovery": {
                        "metadata": {
                            "name": "system:discovery",
                            "uid": "1395e9c7-af42-46e5-8520-fdf7e905df67",
                            "resourceVersion": "71",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get"
                                ],
                                "nonResourceURLs": [
                                    "/api",
                                    "/api/*",
                                    "/apis",
                                    "/apis/*",
                                    "/healthz",
                                    "/livez",
                                    "/openapi",
                                    "/openapi/*",
                                    "/readyz",
                                    "/version",
                                    "/version/"
                                ]
                            }
                        ]
                    },
                    "system:dz-metrics-server": {
                        "metadata": {
                            "name": "system:dz-metrics-server",
                            "uid": "5a491bc0-3bea-49a0-988d-4cb97615b953",
                            "resourceVersion": "30347",
                            "creationTimestamp": "2025-06-11T17:21:36Z",
                            "labels": {
                                "app.kubernetes.io/instance": "metrics-server",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "dz-metrics-server",
                                "app.kubernetes.io/version": "0.7.2",
                                "helm.sh/chart": "metrics-server-3.12.2"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-metrics-server\",\"app.kubernetes.io/version\":\"0.7.2\",\"helm.sh/chart\":\"metrics-server-3.12.2\"},\"name\":\"system:dz-metrics-server\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes/metrics\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"nodes\",\"namespaces\",\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T19:21:46Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/metrics"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "nodes",
                                    "namespaces",
                                    "configmaps"
                                ]
                            }
                        ]
                    },
                    "system:dz-metrics-server-aggregated-reader": {
                        "metadata": {
                            "name": "system:dz-metrics-server-aggregated-reader",
                            "uid": "4dbcfbb4-134d-4228-bd76-003be6585c9f",
                            "resourceVersion": "30345",
                            "creationTimestamp": "2025-06-11T17:21:36Z",
                            "labels": {
                                "app.kubernetes.io/instance": "metrics-server",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "dz-metrics-server",
                                "app.kubernetes.io/version": "0.7.2",
                                "helm.sh/chart": "metrics-server-3.12.2",
                                "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                                "rbac.authorization.k8s.io/aggregate-to-edit": "true",
                                "rbac.authorization.k8s.io/aggregate-to-view": "true"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-metrics-server\",\"app.kubernetes.io/version\":\"0.7.2\",\"helm.sh/chart\":\"metrics-server-3.12.2\",\"rbac.authorization.k8s.io/aggregate-to-admin\":\"true\",\"rbac.authorization.k8s.io/aggregate-to-edit\":\"true\",\"rbac.authorization.k8s.io/aggregate-to-view\":\"true\"},\"name\":\"system:dz-metrics-server-aggregated-reader\"},\"rules\":[{\"apiGroups\":[\"metrics.k8s.io\"],\"resources\":[\"pods\",\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T19:21:46Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {},
                                                "f:rbac.authorization.k8s.io/aggregate-to-admin": {},
                                                "f:rbac.authorization.k8s.io/aggregate-to-edit": {},
                                                "f:rbac.authorization.k8s.io/aggregate-to-view": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods",
                                    "nodes"
                                ]
                            }
                        ]
                    },
                    "system:heapster": {
                        "metadata": {
                            "name": "system:heapster",
                            "uid": "f95321ad-ba7e-473c-861a-fbf480487486",
                            "resourceVersion": "81",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events",
                                    "namespaces",
                                    "nodes",
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "deployments"
                                ]
                            }
                        ]
                    },
                    "system:kube-aggregator": {
                        "metadata": {
                            "name": "system:kube-aggregator",
                            "uid": "cca48b38-d854-45fb-9143-ba39cc225a84",
                            "resourceVersion": "87",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ]
                            }
                        ]
                    },
                    "system:kube-controller-manager": {
                        "metadata": {
                            "name": "system:kube-controller-manager",
                            "uid": "7f3b658f-e17c-4bec-ac5a-ebd7b6de25c1",
                            "resourceVersion": "88",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "update"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "resourceNames": [
                                    "kube-controller-manager"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets",
                                    "serviceaccounts"
                                ]
                            },
                            {
                                "verbs": [
                                    "delete"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "namespaces",
                                    "secrets",
                                    "serviceaccounts"
                                ]
                            },
                            {
                                "verbs": [
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets",
                                    "serviceaccounts"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts/token"
                                ]
                            }
                        ]
                    },
                    "system:kube-dns": {
                        "metadata": {
                            "name": "system:kube-dns",
                            "uid": "afc91926-e3cc-4e3b-8a1c-dd8ecb33ef0d",
                            "resourceVersion": "89",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ]
                            }
                        ]
                    },
                    "system:kube-scheduler": {
                        "metadata": {
                            "name": "system:kube-scheduler",
                            "uid": "330fb181-40f1-4806-89cb-48befa8e0f38",
                            "resourceVersion": "100",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "update"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "resourceNames": [
                                    "kube-scheduler"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "bindings",
                                    "pods/binding"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "replicationcontrollers",
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps",
                                    "extensions"
                                ],
                                "resources": [
                                    "replicasets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "statefulsets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims",
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "subjectaccessreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csidrivers"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csistoragecapacities"
                                ]
                            }
                        ]
                    },
                    "system:kubelet-api-admin": {
                        "metadata": {
                            "name": "system:kubelet-api-admin",
                            "uid": "4da2a0e8-803f-4d42-9b02-a24ef9d7035f",
                            "resourceVersion": "84",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "proxy"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "*"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/log",
                                    "nodes/metrics",
                                    "nodes/proxy",
                                    "nodes/stats"
                                ]
                            }
                        ]
                    },
                    "system:monitoring": {
                        "metadata": {
                            "name": "system:monitoring",
                            "uid": "fc2f032a-841a-4770-a4a4-bba3d61ef21c",
                            "resourceVersion": "72",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get"
                                ],
                                "nonResourceURLs": [
                                    "/healthz",
                                    "/healthz/*",
                                    "/livez",
                                    "/livez/*",
                                    "/metrics",
                                    "/metrics/slis",
                                    "/readyz",
                                    "/readyz/*"
                                ]
                            }
                        ]
                    },
                    "system:node": {
                        "metadata": {
                            "name": "system:node",
                            "uid": "175a3961-b13d-49ee-8deb-d8db679321f1",
                            "resourceVersion": "82",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    "authorization.k8s.io"
                                ],
                                "resources": [
                                    "localsubjectaccessreviews",
                                    "subjectaccessreviews"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods/eviction"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "secrets"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims",
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "resources": [
                                    "leases"
                                ]
                            },
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "volumeattachments"
                                ]
                            },
                            {
                                "verbs": [
                                    "create"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts/token"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csidrivers"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "csinodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "node.k8s.io"
                                ],
                                "resources": [
                                    "runtimeclasses"
                                ]
                            }
                        ]
                    },
                    "system:node-bootstrapper": {
                        "metadata": {
                            "name": "system:node-bootstrapper",
                            "uid": "e51a61fa-9194-4524-af9b-fa3b8179d140",
                            "resourceVersion": "85",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "certificates.k8s.io"
                                ],
                                "resources": [
                                    "certificatesigningrequests"
                                ]
                            }
                        ]
                    },
                    "system:node-problem-detector": {
                        "metadata": {
                            "name": "system:node-problem-detector",
                            "uid": "60b679bb-f2fa-4bc4-9e6a-3103feb71f7e",
                            "resourceVersion": "83",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:node-proxier": {
                        "metadata": {
                            "name": "system:node-proxier",
                            "uid": "1da9560f-0193-48b0-bd3b-3eda017a0594",
                            "resourceVersion": "99",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "endpoints",
                                    "services"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            }
                        ]
                    },
                    "system:persistent-volume-provisioner": {
                        "metadata": {
                            "name": "system:persistent-volume-provisioner",
                            "uid": "4c346795-9ac6-4125-b830-c84aa7280622",
                            "resourceVersion": "90",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "delete",
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ]
                            },
                            {
                                "verbs": [
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "patch",
                                    "update"
                                ],
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ]
                            }
                        ]
                    },
                    "system:public-info-viewer": {
                        "metadata": {
                            "name": "system:public-info-viewer",
                            "uid": "0313541a-d2f8-42ee-ae99-618990366eca",
                            "resourceVersion": "74",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get"
                                ],
                                "nonResourceURLs": [
                                    "/healthz",
                                    "/livez",
                                    "/readyz",
                                    "/version",
                                    "/version/"
                                ]
                            }
                        ]
                    },
                    "system:service-account-issuer-discovery": {
                        "metadata": {
                            "name": "system:service-account-issuer-discovery",
                            "uid": "722e8ef0-f17e-4610-a2e8-7bdce591690d",
                            "resourceVersion": "98",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get"
                                ],
                                "nonResourceURLs": [
                                    "/.well-known/openid-configuration",
                                    "/.well-known/openid-configuration/",
                                    "/openid/v1/jwks",
                                    "/openid/v1/jwks/"
                                ]
                            }
                        ]
                    },
                    "system:volume-scheduler": {
                        "metadata": {
                            "name": "system:volume-scheduler",
                            "uid": "7d0e2e1f-0833-42b3-b803-4ca0b83a8232",
                            "resourceVersion": "93",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumeclaims"
                                ]
                            }
                        ]
                    },
                    "view": {
                        "metadata": {
                            "name": "view",
                            "uid": "5a8cdae8-63d4-4903-9660-9cc7eeea142c",
                            "resourceVersion": "6778",
                            "creationTimestamp": "2025-06-11T16:41:00Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults",
                                "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "clusterrole-aggregation-controller",
                                    "operation": "Apply",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:19:35Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:rules": {}
                                    }
                                },
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:00Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:aggregationRule": {
                                            ".": {},
                                            "f:clusterRoleSelectors": {}
                                        },
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {},
                                                "f:rbac.authorization.k8s.io/aggregate-to-edit": {}
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "configmaps",
                                    "endpoints",
                                    "persistentvolumeclaims",
                                    "persistentvolumeclaims/status",
                                    "pods",
                                    "replicationcontrollers",
                                    "replicationcontrollers/scale",
                                    "serviceaccounts",
                                    "services",
                                    "services/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "bindings",
                                    "events",
                                    "limitranges",
                                    "namespaces/status",
                                    "pods/log",
                                    "pods/status",
                                    "replicationcontrollers/status",
                                    "resourcequotas",
                                    "resourcequotas/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "discovery.k8s.io"
                                ],
                                "resources": [
                                    "endpointslices"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "controllerrevisions",
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "statefulsets",
                                    "statefulsets/scale",
                                    "statefulsets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "autoscaling"
                                ],
                                "resources": [
                                    "horizontalpodautoscalers",
                                    "horizontalpodautoscalers/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "cronjobs",
                                    "cronjobs/status",
                                    "jobs",
                                    "jobs/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "daemonsets/status",
                                    "deployments",
                                    "deployments/scale",
                                    "deployments/status",
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies",
                                    "replicasets",
                                    "replicasets/scale",
                                    "replicasets/status",
                                    "replicationcontrollers/scale"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "policy"
                                ],
                                "resources": [
                                    "poddisruptionbudgets",
                                    "poddisruptionbudgets/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses",
                                    "ingresses/status",
                                    "networkpolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods",
                                    "nodes"
                                ]
                            }
                        ],
                        "aggregationRule": {
                            "clusterRoleSelectors": [
                                {
                                    "matchLabels": {
                                        "rbac.authorization.k8s.io/aggregate-to-view": "true"
                                    }
                                }
                            ]
                        }
                    },
                    "vpc-resource-controller-role": {
                        "metadata": {
                            "name": "vpc-resource-controller-role",
                            "uid": "01e211ff-7ab1-4cd2-b9a5-804332609428",
                            "resourceVersion": "303",
                            "creationTimestamp": "2025-06-11T16:41:05Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"vpc-resource-controller-role\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes/status\"],\"verbs\":[\"get\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\",\"patch\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"serviceaccounts\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"crd.k8s.amazonaws.com\"],\"resources\":[\"eniconfigs\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"vpcresources.k8s.aws\"],\"resources\":[\"securitygrouppolicies\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"vpcresources.k8s.aws\"],\"resources\":[\"cninodes\"],\"verbs\":[\"create\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:05Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:rules": {}
                                    }
                                }
                            ]
                        },
                        "rules": [
                            {
                                "verbs": [
                                    "create",
                                    "update",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "patch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/status"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "patch",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "serviceaccounts"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "crd.k8s.amazonaws.com"
                                ],
                                "resources": [
                                    "eniconfigs"
                                ]
                            },
                            {
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "vpcresources.k8s.aws"
                                ],
                                "resources": [
                                    "securitygrouppolicies"
                                ]
                            },
                            {
                                "verbs": [
                                    "create",
                                    "get",
                                    "list",
                                    "patch",
                                    "update",
                                    "watch"
                                ],
                                "apiGroups": [
                                    "vpcresources.k8s.aws"
                                ],
                                "resources": [
                                    "cninodes"
                                ]
                            }
                        ]
                    }
                },
                "clusterRoleBindings": {
                    "aws-node": {
                        "metadata": {
                            "name": "aws-node",
                            "uid": "f9ddf1c3-89f6-4d1b-9d2c-28815c6f55a6",
                            "resourceVersion": "637",
                            "creationTimestamp": "2025-06-11T16:42:45Z",
                            "labels": {
                                "app.kubernetes.io/instance": "aws-vpc-cni",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "aws-node",
                                "app.kubernetes.io/version": "v1.19.0",
                                "helm.sh/chart": "aws-vpc-cni-1.19.0",
                                "k8s-app": "aws-node"
                            },
                            "managedFields": [
                                {
                                    "manager": "eks",
                                    "operation": "Apply",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:42:45Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {},
                                                "f:k8s-app": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "aws-node",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "aws-node"
                        }
                    },
                    "cluster-admin": {
                        "metadata": {
                            "name": "cluster-admin",
                            "uid": "3fe1b5d8-2e4b-484b-9269-1b3749fa5c18",
                            "resourceVersion": "134",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:masters"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "cluster-admin"
                        }
                    },
                    "devzero-zxporter-manager-rolebinding": {
                        "metadata": {
                            "name": "devzero-zxporter-manager-rolebinding",
                            "uid": "fe1d155f-8ef2-49c0-983e-8d692c69798e",
                            "resourceVersion": "7355",
                            "creationTimestamp": "2025-06-11T17:21:47Z",
                            "labels": {
                                "app.kubernetes.io/managed-by": "kustomize",
                                "app.kubernetes.io/name": "devzero-zxporter"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/managed-by\":\"kustomize\",\"app.kubernetes.io/name\":\"devzero-zxporter\"},\"name\":\"devzero-zxporter-manager-rolebinding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"devzero-zxporter-manager-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"devzero-zxporter-controller-manager\",\"namespace\":\"devzero-zxporter\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:47Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "devzero-zxporter-controller-manager",
                                "namespace": "devzero-zxporter"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "devzero-zxporter-manager-role"
                        }
                    },
                    "devzero-zxporter-metrics-auth-rolebinding": {
                        "metadata": {
                            "name": "devzero-zxporter-metrics-auth-rolebinding",
                            "uid": "894fd819-5466-4a67-b395-7607cae6e8a9",
                            "resourceVersion": "7358",
                            "creationTimestamp": "2025-06-11T17:21:47Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"devzero-zxporter-metrics-auth-rolebinding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"devzero-zxporter-metrics-auth-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"devzero-zxporter-controller-manager\",\"namespace\":\"devzero-zxporter\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:47Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "devzero-zxporter-controller-manager",
                                "namespace": "devzero-zxporter"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "devzero-zxporter-metrics-auth-role"
                        }
                    },
                    "dz-metrics-server:system:auth-delegator": {
                        "metadata": {
                            "name": "dz-metrics-server:system:auth-delegator",
                            "uid": "fc1d20dd-f892-4bb6-bf0b-d5338af9d220",
                            "resourceVersion": "30348",
                            "creationTimestamp": "2025-06-11T17:21:37Z",
                            "labels": {
                                "app.kubernetes.io/instance": "metrics-server",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "dz-metrics-server",
                                "app.kubernetes.io/version": "0.7.2",
                                "helm.sh/chart": "metrics-server-3.12.2"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-metrics-server\",\"app.kubernetes.io/version\":\"0.7.2\",\"helm.sh/chart\":\"metrics-server-3.12.2\"},\"name\":\"dz-metrics-server:system:auth-delegator\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"dz-metrics-server\",\"namespace\":\"devzero-zxporter\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T19:21:46Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "dz-metrics-server",
                                "namespace": "devzero-zxporter"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:auth-delegator"
                        }
                    },
                    "eks:addon-cluster-admin": {
                        "metadata": {
                            "name": "eks:addon-cluster-admin",
                            "uid": "694544fc-b11a-443f-8ea1-12b345bddb11",
                            "resourceVersion": "270",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:addon-cluster-admin\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"cluster-admin\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:addon-manager\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:addon-manager"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "cluster-admin"
                        }
                    },
                    "eks:addon-manager": {
                        "metadata": {
                            "name": "eks:addon-manager",
                            "uid": "e8bd3744-49d1-4e62-a6a1-6f328ec14770",
                            "resourceVersion": "269",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:addon-manager\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:addon-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:addon-manager\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:addon-manager"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:addon-manager"
                        }
                    },
                    "eks:az-poller": {
                        "metadata": {
                            "name": "eks:az-poller",
                            "uid": "bc705fb9-1629-4ff3-9a45-d464eba6bcfb",
                            "resourceVersion": "216",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:az-poller\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:az-poller\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:az-poller\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:az-poller"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:az-poller"
                        }
                    },
                    "eks:certificate-controller": {
                        "metadata": {
                            "name": "eks:certificate-controller",
                            "uid": "28d62364-7eb9-41f4-aae3-ebd8e01e869a",
                            "resourceVersion": "223",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:certificate-controller\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:controller:certificate-controller\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:certificate-controller\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:certificate-controller"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:certificate-controller"
                        }
                    },
                    "eks:certificate-controller-approver": {
                        "metadata": {
                            "name": "eks:certificate-controller-approver",
                            "uid": "139cd8ff-a0a7-4515-b308-9dd6617462a8",
                            "resourceVersion": "224",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:certificate-controller-approver\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:certificate-controller-approver\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:certificate-controller\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:certificate-controller"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:certificate-controller-approver"
                        }
                    },
                    "eks:certificate-controller-manager": {
                        "metadata": {
                            "name": "eks:certificate-controller-manager",
                            "uid": "0fa66b1f-b214-4294-8bc8-aae64e0fb9d3",
                            "resourceVersion": "222",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:certificate-controller-manager\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:certificate-controller-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:certificate-controller\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:certificate-controller"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:certificate-controller-manager"
                        }
                    },
                    "eks:certificate-controller-signer": {
                        "metadata": {
                            "name": "eks:certificate-controller-signer",
                            "uid": "13c2a5bf-a025-4169-99a6-5294f8a18ce5",
                            "resourceVersion": "225",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:certificate-controller-signer\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:certificate-controller-signer\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:certificate-controller\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:certificate-controller"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:certificate-controller-signer"
                        }
                    },
                    "eks:cloud-controller-manager": {
                        "metadata": {
                            "name": "eks:cloud-controller-manager",
                            "uid": "ae7ba20f-11e7-45cc-8106-89c44cd11e74",
                            "resourceVersion": "206",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:cloud-controller-manager\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:cloud-controller-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:cloud-controller-manager\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:cloud-controller-manager"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:cloud-controller-manager"
                        }
                    },
                    "eks:cloud-provider-extraction-migration": {
                        "metadata": {
                            "name": "eks:cloud-provider-extraction-migration",
                            "uid": "cecb1956-74d8-48b2-a490-2410f1f610e4",
                            "resourceVersion": "253",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:cloud-provider-extraction-migration\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:cloud-provider-extraction-migration\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"system:kube-controller-manager\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:kube-controller-manager"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:cloud-provider-extraction-migration"
                        }
                    },
                    "eks:cluster-event-watcher": {
                        "metadata": {
                            "name": "eks:cluster-event-watcher",
                            "uid": "8f91156c-532b-4749-aef9-4f6886663341",
                            "resourceVersion": "229",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:cluster-event-watcher\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:cluster-event-watcher\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:cluster-event-watcher\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:cluster-event-watcher"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:cluster-event-watcher"
                        }
                    },
                    "eks:coredns-autoscaler": {
                        "metadata": {
                            "name": "eks:coredns-autoscaler",
                            "uid": "ad394f48-29f0-403e-8d81-a67ea7a1d9c2",
                            "resourceVersion": "232",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:coredns-autoscaler\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:coredns-autoscaler\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:coredns-autoscaler\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:coredns-autoscaler"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:coredns-autoscaler"
                        }
                    },
                    "eks:fargate-manager": {
                        "metadata": {
                            "name": "eks:fargate-manager",
                            "uid": "4f2d24ed-59ec-4c0a-8b56-6357ca6101b0",
                            "resourceVersion": "279",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-manager\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:fargate-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:fargate-manager\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:fargate-manager"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:fargate-manager"
                        }
                    },
                    "eks:fargate-scheduler": {
                        "metadata": {
                            "name": "eks:fargate-scheduler",
                            "uid": "37299077-89af-491e-a914-d389ca691963",
                            "resourceVersion": "236",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-scheduler\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:fargate-scheduler\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:fargate-scheduler\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:fargate-scheduler"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:fargate-scheduler"
                        }
                    },
                    "eks:k8s-metrics": {
                        "metadata": {
                            "name": "eks:k8s-metrics",
                            "uid": "3a46831d-1366-4ac8-84bc-4e975dfdf61f",
                            "resourceVersion": "240",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:k8s-metrics\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:k8s-metrics\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:k8s-metrics\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:k8s-metrics"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:k8s-metrics"
                        }
                    },
                    "eks:kms-storage-migrator": {
                        "metadata": {
                            "name": "eks:kms-storage-migrator",
                            "uid": "8036ae21-8f7f-4d10-a48e-fe6b87fe6961",
                            "resourceVersion": "242",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:kms-storage-migrator\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:kms-storage-migrator\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:kms-storage-migrator\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:kms-storage-migrator"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:kms-storage-migrator"
                        }
                    },
                    "eks:kube-proxy": {
                        "metadata": {
                            "name": "eks:kube-proxy",
                            "uid": "d9965453-e070-4f8c-8d2a-694be4ea528b",
                            "resourceVersion": "592",
                            "creationTimestamp": "2025-06-11T16:42:44Z",
                            "labels": {
                                "eks.amazonaws.com/component": "kube-proxy",
                                "k8s-app": "kube-proxy"
                            },
                            "managedFields": [
                                {
                                    "manager": "eks",
                                    "operation": "Apply",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:42:44Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:labels": {
                                                "f:eks.amazonaws.com/component": {},
                                                "f:k8s-app": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "kube-proxy",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-proxier"
                        }
                    },
                    "eks:kube-proxy-fargate": {
                        "metadata": {
                            "name": "eks:kube-proxy-fargate",
                            "uid": "b66a9245-d31b-4c6b-9992-dd79d6a49162",
                            "resourceVersion": "278",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:kube-proxy-fargate\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:node-proxier\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Group\",\"name\":\"system:node-proxier\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:node-proxier"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-proxier"
                        }
                    },
                    "eks:kube-proxy-windows": {
                        "metadata": {
                            "name": "eks:kube-proxy-windows",
                            "uid": "2caa47f7-cb44-4e12-8f70-164f79a6f18a",
                            "resourceVersion": "275",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "labels": {
                                "eks.amazonaws.com/component": "kube-proxy",
                                "k8s-app": "kube-proxy"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"kube-proxy\",\"k8s-app\":\"kube-proxy\"},\"name\":\"eks:kube-proxy-windows\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:node-proxier\"},\"subjects\":[{\"kind\":\"Group\",\"name\":\"eks:kube-proxy-windows\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:eks.amazonaws.com/component": {},
                                                "f:k8s-app": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:kube-proxy-windows"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-proxier"
                        }
                    },
                    "eks:network-policy-controller": {
                        "metadata": {
                            "name": "eks:network-policy-controller",
                            "uid": "ae0e95bd-31f7-4b16-9bca-786938086ad6",
                            "resourceVersion": "295",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "labels": {
                                "app.kubernetes.io/component": "rbac",
                                "app.kubernetes.io/created-by": "amazon-network-policy-controller-k8s",
                                "app.kubernetes.io/instance": "manager-rolebinding",
                                "app.kubernetes.io/name": "amazon-network-policy-controller-k8s",
                                "app.kubernetes.io/part-of": "amazon-network-policy-controller-k8s"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"rbac\",\"app.kubernetes.io/created-by\":\"amazon-network-policy-controller-k8s\",\"app.kubernetes.io/instance\":\"manager-rolebinding\",\"app.kubernetes.io/name\":\"amazon-network-policy-controller-k8s\",\"app.kubernetes.io/part-of\":\"amazon-network-policy-controller-k8s\"},\"name\":\"eks:network-policy-controller\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:network-policy-controller\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:network-policy-controller\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/component": {},
                                                "f:app.kubernetes.io/created-by": {},
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/part-of": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:network-policy-controller"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:network-policy-controller"
                        }
                    },
                    "eks:network-webhooks": {
                        "metadata": {
                            "name": "eks:network-webhooks",
                            "uid": "09ef103c-b7a0-4192-8b8c-e269a3bfb83a",
                            "resourceVersion": "244",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:network-webhooks\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:network-webhooks\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:network-webhooks\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:network-webhooks"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:network-webhooks"
                        }
                    },
                    "eks:node-bootstrapper": {
                        "metadata": {
                            "name": "eks:node-bootstrapper",
                            "uid": "56132d24-9ffc-4eb7-b33a-989ab035e652",
                            "resourceVersion": "281",
                            "creationTimestamp": "2025-06-11T16:41:04Z",
                            "labels": {
                                "eks.amazonaws.com/component": "node"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"node\"},\"name\":\"eks:node-bootstrapper\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:node-bootstrapper\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Group\",\"name\":\"system:bootstrappers\"},{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Group\",\"name\":\"system:nodes\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:04Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:eks.amazonaws.com/component": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:bootstrappers"
                            },
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:nodes"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:node-bootstrapper"
                        }
                    },
                    "eks:node-manager": {
                        "metadata": {
                            "name": "eks:node-manager",
                            "uid": "add4a86b-8be0-4d99-84a3-e6f31b2d3dbf",
                            "resourceVersion": "204",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:node-manager\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:node-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:node-manager\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:node-manager"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:node-manager"
                        }
                    },
                    "eks:nodewatcher": {
                        "metadata": {
                            "name": "eks:nodewatcher",
                            "uid": "1388c27c-f3f9-444d-af7e-0bc73bdd4910",
                            "resourceVersion": "246",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:nodewatcher\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:nodewatcher\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:nodewatcher\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:nodewatcher"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:nodewatcher"
                        }
                    },
                    "eks:pod-identity-mutating-webhook": {
                        "metadata": {
                            "name": "eks:pod-identity-mutating-webhook",
                            "uid": "ca44cd01-60e0-479e-b7ac-0d0d3c0b83af",
                            "resourceVersion": "248",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:pod-identity-mutating-webhook\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:pod-identity-mutating-webhook\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:pod-identity-mutating-webhook\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:pod-identity-mutating-webhook"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:pod-identity-mutating-webhook"
                        }
                    },
                    "eks:service-operations": {
                        "metadata": {
                            "name": "eks:service-operations",
                            "uid": "d31ef6c6-4259-40de-b68d-d2589fcca719",
                            "resourceVersion": "250",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:service-operations\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:service-operations\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Group\",\"name\":\"eks:service-operations\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:service-operations"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:service-operations"
                        }
                    },
                    "eks:tagging-controller": {
                        "metadata": {
                            "name": "eks:tagging-controller",
                            "uid": "8c9c253d-7046-428f-8879-a8559e7da0b6",
                            "resourceVersion": "256",
                            "creationTimestamp": "2025-06-11T16:41:03Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:tagging-controller\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:tagging-controller\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"tagging-controller\",\"namespace\":\"kube-system\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:03Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "tagging-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "eks:tagging-controller"
                        }
                    },
                    "prometheus-dz-prometheus-server": {
                        "metadata": {
                            "name": "prometheus-dz-prometheus-server",
                            "uid": "ef9d9745-9611-4bda-bb00-e2e707ce67dc",
                            "resourceVersion": "7163",
                            "creationTimestamp": "2025-06-11T17:21:29Z",
                            "labels": {
                                "app.kubernetes.io/component": "server",
                                "app.kubernetes.io/instance": "prometheus",
                                "app.kubernetes.io/name": "dz-prometheus",
                                "app.kubernetes.io/part-of": "dz-prometheus",
                                "app.kubernetes.io/version": "v3.4.1",
                                "helm.sh/chart": "prometheus-27.20.0"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/name\":\"dz-prometheus\",\"app.kubernetes.io/part-of\":\"dz-prometheus\",\"app.kubernetes.io/version\":\"v3.4.1\",\"helm.sh/chart\":\"prometheus-27.20.0\"},\"name\":\"prometheus-dz-prometheus-server\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"prometheus-dz-prometheus-server\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"prometheus-dz-prometheus-server\",\"namespace\":\"devzero-zxporter\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:29Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/component": {},
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/part-of": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "prometheus-dz-prometheus-server",
                                "namespace": "devzero-zxporter"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "prometheus-dz-prometheus-server"
                        }
                    },
                    "prometheus-kube-state-metrics": {
                        "metadata": {
                            "name": "prometheus-kube-state-metrics",
                            "uid": "2ca2bf23-ea1d-42ee-939f-a270aa05553f",
                            "resourceVersion": "7162",
                            "creationTimestamp": "2025-06-11T17:21:28Z",
                            "labels": {
                                "app.kubernetes.io/component": "metrics",
                                "app.kubernetes.io/instance": "prometheus",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "kube-state-metrics",
                                "app.kubernetes.io/part-of": "kube-state-metrics",
                                "app.kubernetes.io/version": "2.15.0",
                                "helm.sh/chart": "kube-state-metrics-5.33.2"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"metrics\",\"app.kubernetes.io/instance\":\"prometheus\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"kube-state-metrics\",\"app.kubernetes.io/part-of\":\"kube-state-metrics\",\"app.kubernetes.io/version\":\"2.15.0\",\"helm.sh/chart\":\"kube-state-metrics-5.33.2\"},\"name\":\"prometheus-kube-state-metrics\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"prometheus-kube-state-metrics\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"prometheus-kube-state-metrics\",\"namespace\":\"devzero-zxporter\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T17:21:28Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/component": {},
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/part-of": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "prometheus-kube-state-metrics",
                                "namespace": "devzero-zxporter"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "prometheus-kube-state-metrics"
                        }
                    },
                    "system:basic-user": {
                        "metadata": {
                            "name": "system:basic-user",
                            "uid": "669edb87-3b41-4da2-8010-9f0e368838dd",
                            "resourceVersion": "137",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:authenticated"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:basic-user"
                        }
                    },
                    "system:controller:attachdetach-controller": {
                        "metadata": {
                            "name": "system:controller:attachdetach-controller",
                            "uid": "1c0d37d4-4c1b-488f-8115-2f8f5d0fc7ae",
                            "resourceVersion": "146",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "attachdetach-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:attachdetach-controller"
                        }
                    },
                    "system:controller:certificate-controller": {
                        "metadata": {
                            "name": "system:controller:certificate-controller",
                            "uid": "93a4fd3a-288e-4582-9a9e-67dfe19d4f02",
                            "resourceVersion": "172",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "certificate-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:certificate-controller"
                        }
                    },
                    "system:controller:clusterrole-aggregation-controller": {
                        "metadata": {
                            "name": "system:controller:clusterrole-aggregation-controller",
                            "uid": "feb5c888-ae77-4012-ac6b-e6b7c8584e12",
                            "resourceVersion": "147",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "clusterrole-aggregation-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:clusterrole-aggregation-controller"
                        }
                    },
                    "system:controller:cronjob-controller": {
                        "metadata": {
                            "name": "system:controller:cronjob-controller",
                            "uid": "bb3d966b-9a8b-442e-a1c9-abbbfc7795c6",
                            "resourceVersion": "148",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "cronjob-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:cronjob-controller"
                        }
                    },
                    "system:controller:daemon-set-controller": {
                        "metadata": {
                            "name": "system:controller:daemon-set-controller",
                            "uid": "c6b2558e-6d2c-4408-9a4f-c718fcd2f94d",
                            "resourceVersion": "149",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "daemon-set-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:daemon-set-controller"
                        }
                    },
                    "system:controller:deployment-controller": {
                        "metadata": {
                            "name": "system:controller:deployment-controller",
                            "uid": "d3088143-c18f-4fb4-ac9a-942eda7970ce",
                            "resourceVersion": "150",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "deployment-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:deployment-controller"
                        }
                    },
                    "system:controller:disruption-controller": {
                        "metadata": {
                            "name": "system:controller:disruption-controller",
                            "uid": "5d5372cc-2752-40b6-b946-b6aaaca851db",
                            "resourceVersion": "151",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "disruption-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:disruption-controller"
                        }
                    },
                    "system:controller:endpoint-controller": {
                        "metadata": {
                            "name": "system:controller:endpoint-controller",
                            "uid": "40ad420e-81de-4c98-9367-68cfa2c7bc53",
                            "resourceVersion": "152",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "endpoint-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:endpoint-controller"
                        }
                    },
                    "system:controller:endpointslice-controller": {
                        "metadata": {
                            "name": "system:controller:endpointslice-controller",
                            "uid": "7de6d90f-bf98-4082-b829-d80e9e46e6c6",
                            "resourceVersion": "153",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "endpointslice-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:endpointslice-controller"
                        }
                    },
                    "system:controller:endpointslicemirroring-controller": {
                        "metadata": {
                            "name": "system:controller:endpointslicemirroring-controller",
                            "uid": "2b63ade6-d99c-4c61-991b-d17cd9598d2f",
                            "resourceVersion": "154",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "endpointslicemirroring-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:endpointslicemirroring-controller"
                        }
                    },
                    "system:controller:ephemeral-volume-controller": {
                        "metadata": {
                            "name": "system:controller:ephemeral-volume-controller",
                            "uid": "20d1ce8e-199c-4e93-ac5b-a6b612ed40a5",
                            "resourceVersion": "156",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "ephemeral-volume-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:ephemeral-volume-controller"
                        }
                    },
                    "system:controller:expand-controller": {
                        "metadata": {
                            "name": "system:controller:expand-controller",
                            "uid": "69e83a69-f942-406b-af54-d1aa69b70045",
                            "resourceVersion": "155",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "expand-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:expand-controller"
                        }
                    },
                    "system:controller:generic-garbage-collector": {
                        "metadata": {
                            "name": "system:controller:generic-garbage-collector",
                            "uid": "0d53b425-679c-4968-ab6d-272f96292a1f",
                            "resourceVersion": "157",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "generic-garbage-collector",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:generic-garbage-collector"
                        }
                    },
                    "system:controller:horizontal-pod-autoscaler": {
                        "metadata": {
                            "name": "system:controller:horizontal-pod-autoscaler",
                            "uid": "d082766d-7f72-48b7-a2d6-3c2e9d074e55",
                            "resourceVersion": "158",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "horizontal-pod-autoscaler",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:horizontal-pod-autoscaler"
                        }
                    },
                    "system:controller:job-controller": {
                        "metadata": {
                            "name": "system:controller:job-controller",
                            "uid": "e622834a-cfdf-4cf0-b21b-83f8506a499b",
                            "resourceVersion": "159",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "job-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:job-controller"
                        }
                    },
                    "system:controller:legacy-service-account-token-cleaner": {
                        "metadata": {
                            "name": "system:controller:legacy-service-account-token-cleaner",
                            "uid": "ae2befc8-8cca-4efb-bf0e-c07e404cd743",
                            "resourceVersion": "178",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "legacy-service-account-token-cleaner",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:legacy-service-account-token-cleaner"
                        }
                    },
                    "system:controller:namespace-controller": {
                        "metadata": {
                            "name": "system:controller:namespace-controller",
                            "uid": "335e4be0-352c-456b-957b-ac356bd56b18",
                            "resourceVersion": "160",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "namespace-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:namespace-controller"
                        }
                    },
                    "system:controller:node-controller": {
                        "metadata": {
                            "name": "system:controller:node-controller",
                            "uid": "94ae5b1a-137f-4b06-b628-011227fd5689",
                            "resourceVersion": "161",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "node-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:node-controller"
                        }
                    },
                    "system:controller:persistent-volume-binder": {
                        "metadata": {
                            "name": "system:controller:persistent-volume-binder",
                            "uid": "5880f144-561b-412d-9155-630fef5104b9",
                            "resourceVersion": "162",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "persistent-volume-binder",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:persistent-volume-binder"
                        }
                    },
                    "system:controller:pod-garbage-collector": {
                        "metadata": {
                            "name": "system:controller:pod-garbage-collector",
                            "uid": "14907fa0-4d87-440e-9141-89769fa87583",
                            "resourceVersion": "163",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "pod-garbage-collector",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:pod-garbage-collector"
                        }
                    },
                    "system:controller:pv-protection-controller": {
                        "metadata": {
                            "name": "system:controller:pv-protection-controller",
                            "uid": "c720e837-1105-4d4b-ac95-d5010ea910f9",
                            "resourceVersion": "174",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "pv-protection-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:pv-protection-controller"
                        }
                    },
                    "system:controller:pvc-protection-controller": {
                        "metadata": {
                            "name": "system:controller:pvc-protection-controller",
                            "uid": "b212c77f-9a9e-4ce9-96ec-4ba015a133ea",
                            "resourceVersion": "173",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "pvc-protection-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:pvc-protection-controller"
                        }
                    },
                    "system:controller:replicaset-controller": {
                        "metadata": {
                            "name": "system:controller:replicaset-controller",
                            "uid": "14a399ce-f70a-43ec-a3db-bf442e978184",
                            "resourceVersion": "164",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "replicaset-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:replicaset-controller"
                        }
                    },
                    "system:controller:replication-controller": {
                        "metadata": {
                            "name": "system:controller:replication-controller",
                            "uid": "8fc1df59-1eb1-4288-9e7f-6677506aaa99",
                            "resourceVersion": "165",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "replication-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:replication-controller"
                        }
                    },
                    "system:controller:resourcequota-controller": {
                        "metadata": {
                            "name": "system:controller:resourcequota-controller",
                            "uid": "e4b8a2f7-79cb-4e88-abfd-c6dc8705ff6a",
                            "resourceVersion": "166",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "resourcequota-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:resourcequota-controller"
                        }
                    },
                    "system:controller:root-ca-cert-publisher": {
                        "metadata": {
                            "name": "system:controller:root-ca-cert-publisher",
                            "uid": "a3ce03d1-24d9-4775-8224-11a56fd5f8c9",
                            "resourceVersion": "176",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "root-ca-cert-publisher",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:root-ca-cert-publisher"
                        }
                    },
                    "system:controller:route-controller": {
                        "metadata": {
                            "name": "system:controller:route-controller",
                            "uid": "1cc4a98f-2555-4c35-b97b-f2b8d8b0eafa",
                            "resourceVersion": "167",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "route-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:route-controller"
                        }
                    },
                    "system:controller:service-account-controller": {
                        "metadata": {
                            "name": "system:controller:service-account-controller",
                            "uid": "50f9fb09-7f51-439b-b9ff-8a6173e53219",
                            "resourceVersion": "168",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "service-account-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:service-account-controller"
                        }
                    },
                    "system:controller:service-controller": {
                        "metadata": {
                            "name": "system:controller:service-controller",
                            "uid": "cdf1fe8b-0015-41b7-bada-ba63c04e546a",
                            "resourceVersion": "169",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "service-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:service-controller"
                        }
                    },
                    "system:controller:statefulset-controller": {
                        "metadata": {
                            "name": "system:controller:statefulset-controller",
                            "uid": "0bac71ac-6b41-40db-8493-557fa0d513a0",
                            "resourceVersion": "170",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "statefulset-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:statefulset-controller"
                        }
                    },
                    "system:controller:ttl-after-finished-controller": {
                        "metadata": {
                            "name": "system:controller:ttl-after-finished-controller",
                            "uid": "9ce43303-200a-4bc1-86fb-0771410f5547",
                            "resourceVersion": "175",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "ttl-after-finished-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:ttl-after-finished-controller"
                        }
                    },
                    "system:controller:ttl-controller": {
                        "metadata": {
                            "name": "system:controller:ttl-controller",
                            "uid": "893e692b-fe39-47c7-88b7-33892baf5694",
                            "resourceVersion": "171",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "ttl-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:ttl-controller"
                        }
                    },
                    "system:controller:validatingadmissionpolicy-status-controller": {
                        "metadata": {
                            "name": "system:controller:validatingadmissionpolicy-status-controller",
                            "uid": "12de974a-291f-4b3d-8685-3a7aca5189ed",
                            "resourceVersion": "177",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "validatingadmissionpolicy-status-controller",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:controller:validatingadmissionpolicy-status-controller"
                        }
                    },
                    "system:coredns": {
                        "metadata": {
                            "name": "system:coredns",
                            "uid": "4566ae44-a469-4e03-b244-5e1538fb4efc",
                            "resourceVersion": "605",
                            "creationTimestamp": "2025-06-11T16:42:45Z",
                            "labels": {
                                "eks.amazonaws.com/component": "coredns",
                                "k8s-app": "kube-dns",
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "eks",
                                    "operation": "Apply",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:42:45Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                "f:eks.amazonaws.com/component": {},
                                                "f:k8s-app": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "coredns",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:coredns"
                        }
                    },
                    "system:discovery": {
                        "metadata": {
                            "name": "system:discovery",
                            "uid": "5134b7fe-ec30-4d67-b69c-99f80e1bf242",
                            "resourceVersion": "136",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:authenticated"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:discovery"
                        }
                    },
                    "system:dz-metrics-server": {
                        "metadata": {
                            "name": "system:dz-metrics-server",
                            "uid": "02435379-b626-4b87-abce-257872b66bb6",
                            "resourceVersion": "30349",
                            "creationTimestamp": "2025-06-11T17:21:37Z",
                            "labels": {
                                "app.kubernetes.io/instance": "metrics-server",
                                "app.kubernetes.io/managed-by": "Helm",
                                "app.kubernetes.io/name": "dz-metrics-server",
                                "app.kubernetes.io/version": "0.7.2",
                                "helm.sh/chart": "metrics-server-3.12.2"
                            },
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/instance\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"dz-metrics-server\",\"app.kubernetes.io/version\":\"0.7.2\",\"helm.sh/chart\":\"metrics-server-3.12.2\"},\"name\":\"system:dz-metrics-server\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:dz-metrics-server\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"dz-metrics-server\",\"namespace\":\"devzero-zxporter\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T19:21:46Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:app.kubernetes.io/instance": {},
                                                "f:app.kubernetes.io/managed-by": {},
                                                "f:app.kubernetes.io/name": {},
                                                "f:app.kubernetes.io/version": {},
                                                "f:helm.sh/chart": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "dz-metrics-server",
                                "namespace": "devzero-zxporter"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:dz-metrics-server"
                        }
                    },
                    "system:kube-controller-manager": {
                        "metadata": {
                            "name": "system:kube-controller-manager",
                            "uid": "e378849c-5044-44d1-9c07-2164df0f23c8",
                            "resourceVersion": "140",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:kube-controller-manager"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:kube-controller-manager"
                        }
                    },
                    "system:kube-dns": {
                        "metadata": {
                            "name": "system:kube-dns",
                            "uid": "7db21f4e-82f1-42d8-a209-ad0aba21e5a2",
                            "resourceVersion": "141",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "kube-dns",
                                "namespace": "kube-system"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:kube-dns"
                        }
                    },
                    "system:kube-scheduler": {
                        "metadata": {
                            "name": "system:kube-scheduler",
                            "uid": "3fa42429-48a0-41bc-8ac1-87f58bbed88e",
                            "resourceVersion": "142",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:kube-scheduler"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:kube-scheduler"
                        }
                    },
                    "system:monitoring": {
                        "metadata": {
                            "name": "system:monitoring",
                            "uid": "556aceb0-f1cc-4621-b1a0-8cbae0fff690",
                            "resourceVersion": "135",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:monitoring"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:monitoring"
                        }
                    },
                    "system:node": {
                        "metadata": {
                            "name": "system:node",
                            "uid": "e3701f74-9724-4bf0-8999-68a9f3542ab9",
                            "resourceVersion": "144",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {}
                                    }
                                }
                            ]
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node"
                        }
                    },
                    "system:node-proxier": {
                        "metadata": {
                            "name": "system:node-proxier",
                            "uid": "18fb16fa-2fcc-4575-9681-c1709b205ba3",
                            "resourceVersion": "139",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:kube-proxy"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:node-proxier"
                        }
                    },
                    "system:public-info-viewer": {
                        "metadata": {
                            "name": "system:public-info-viewer",
                            "uid": "e143825d-1298-4ecb-99a0-3c23e04d0a5a",
                            "resourceVersion": "138",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:authenticated"
                            },
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:unauthenticated"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:public-info-viewer"
                        }
                    },
                    "system:service-account-issuer-discovery": {
                        "metadata": {
                            "name": "system:service-account-issuer-discovery",
                            "uid": "af1692ec-832b-4243-a707-02d7bab1e321",
                            "resourceVersion": "145",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "Group",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:serviceaccounts"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:service-account-issuer-discovery"
                        }
                    },
                    "system:volume-scheduler": {
                        "metadata": {
                            "name": "system:volume-scheduler",
                            "uid": "1254a3df-7098-4d8b-89ad-f27af590d5a7",
                            "resourceVersion": "143",
                            "creationTimestamp": "2025-06-11T16:41:01Z",
                            "labels": {
                                "kubernetes.io/bootstrapping": "rbac-defaults"
                            },
                            "annotations": {
                                "rbac.authorization.kubernetes.io/autoupdate": "true"
                            },
                            "managedFields": [
                                {
                                    "manager": "kube-apiserver",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:01Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                            },
                                            "f:labels": {
                                                ".": {},
                                                "f:kubernetes.io/bootstrapping": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "system:kube-scheduler"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:volume-scheduler"
                        }
                    },
                    "vpc-resource-controller-rolebinding": {
                        "metadata": {
                            "name": "vpc-resource-controller-rolebinding",
                            "uid": "38d4bbc9-c1f9-4de7-a89b-21b7d2994b02",
                            "resourceVersion": "305",
                            "creationTimestamp": "2025-06-11T16:41:05Z",
                            "annotations": {
                                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"vpc-resource-controller-rolebinding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"vpc-resource-controller-role\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:vpc-resource-controller\"}]}\n"
                            },
                            "managedFields": [
                                {
                                    "manager": "kubectl-client-side-apply",
                                    "operation": "Update",
                                    "apiVersion": "rbac.authorization.k8s.io/v1",
                                    "time": "2025-06-11T16:41:05Z",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                ".": {},
                                                "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                            }
                                        },
                                        "f:roleRef": {},
                                        "f:subjects": {}
                                    }
                                }
                            ]
                        },
                        "subjects": [
                            {
                                "kind": "User",
                                "apiGroup": "rbac.authorization.k8s.io",
                                "name": "eks:vpc-resource-controller"
                            }
                        ],
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "vpc-resource-controller-role"
                        }
                    }
                },
                "hash": "283b458c477c544998a62bcfef497061dd918a5f514c683264567c40fd0133b5"
            },
            "timestamp": "2025-06-12T17:54:15.192013647Z",
            "snapshotId": "snapshot-1749750855192013875"
        },
        "Timestamp": "2025-06-12T17:54:15.192013647Z",
        "EventType": 9,
        "Key": "snapshot-1749750855192013875"
    }
}