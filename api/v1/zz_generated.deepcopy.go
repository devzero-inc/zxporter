//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionPolicy) DeepCopyInto(out *CollectionPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionPolicy.
func (in *CollectionPolicy) DeepCopy() *CollectionPolicy {
	if in == nil {
		return nil
	}
	out := new(CollectionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CollectionPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionPolicyList) DeepCopyInto(out *CollectionPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CollectionPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionPolicyList.
func (in *CollectionPolicyList) DeepCopy() *CollectionPolicyList {
	if in == nil {
		return nil
	}
	out := new(CollectionPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CollectionPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionPolicySpec) DeepCopyInto(out *CollectionPolicySpec) {
	*out = *in
	in.TargetSelector.DeepCopyInto(&out.TargetSelector)
	in.Exclusions.DeepCopyInto(&out.Exclusions)
	in.Policies.DeepCopyInto(&out.Policies)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionPolicySpec.
func (in *CollectionPolicySpec) DeepCopy() *CollectionPolicySpec {
	if in == nil {
		return nil
	}
	out := new(CollectionPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionPolicyStatus) DeepCopyInto(out *CollectionPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.LastUpdated.DeepCopyInto(&out.LastUpdated)
	if in.ActiveCollectors != nil {
		in, out := &in.ActiveCollectors, &out.ActiveCollectors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.LastSuccessfulPulseConnection.DeepCopyInto(&out.LastSuccessfulPulseConnection)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionPolicyStatus.
func (in *CollectionPolicyStatus) DeepCopy() *CollectionPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(CollectionPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedConfigMap) DeepCopyInto(out *ExcludedConfigMap) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedConfigMap.
func (in *ExcludedConfigMap) DeepCopy() *ExcludedConfigMap {
	if in == nil {
		return nil
	}
	out := new(ExcludedConfigMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedCronJob) DeepCopyInto(out *ExcludedCronJob) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedCronJob.
func (in *ExcludedCronJob) DeepCopy() *ExcludedCronJob {
	if in == nil {
		return nil
	}
	out := new(ExcludedCronJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedCustomResource) DeepCopyInto(out *ExcludedCustomResource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedCustomResource.
func (in *ExcludedCustomResource) DeepCopy() *ExcludedCustomResource {
	if in == nil {
		return nil
	}
	out := new(ExcludedCustomResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedDaemonSet) DeepCopyInto(out *ExcludedDaemonSet) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedDaemonSet.
func (in *ExcludedDaemonSet) DeepCopy() *ExcludedDaemonSet {
	if in == nil {
		return nil
	}
	out := new(ExcludedDaemonSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedDeployment) DeepCopyInto(out *ExcludedDeployment) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedDeployment.
func (in *ExcludedDeployment) DeepCopy() *ExcludedDeployment {
	if in == nil {
		return nil
	}
	out := new(ExcludedDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedEndpoint) DeepCopyInto(out *ExcludedEndpoint) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedEndpoint.
func (in *ExcludedEndpoint) DeepCopy() *ExcludedEndpoint {
	if in == nil {
		return nil
	}
	out := new(ExcludedEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedEvent) DeepCopyInto(out *ExcludedEvent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedEvent.
func (in *ExcludedEvent) DeepCopy() *ExcludedEvent {
	if in == nil {
		return nil
	}
	out := new(ExcludedEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedHPA) DeepCopyInto(out *ExcludedHPA) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedHPA.
func (in *ExcludedHPA) DeepCopy() *ExcludedHPA {
	if in == nil {
		return nil
	}
	out := new(ExcludedHPA)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedIngress) DeepCopyInto(out *ExcludedIngress) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedIngress.
func (in *ExcludedIngress) DeepCopy() *ExcludedIngress {
	if in == nil {
		return nil
	}
	out := new(ExcludedIngress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedJob) DeepCopyInto(out *ExcludedJob) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedJob.
func (in *ExcludedJob) DeepCopy() *ExcludedJob {
	if in == nil {
		return nil
	}
	out := new(ExcludedJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedLimitRange) DeepCopyInto(out *ExcludedLimitRange) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedLimitRange.
func (in *ExcludedLimitRange) DeepCopy() *ExcludedLimitRange {
	if in == nil {
		return nil
	}
	out := new(ExcludedLimitRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedNetworkPolicy) DeepCopyInto(out *ExcludedNetworkPolicy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedNetworkPolicy.
func (in *ExcludedNetworkPolicy) DeepCopy() *ExcludedNetworkPolicy {
	if in == nil {
		return nil
	}
	out := new(ExcludedNetworkPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedPDB) DeepCopyInto(out *ExcludedPDB) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedPDB.
func (in *ExcludedPDB) DeepCopy() *ExcludedPDB {
	if in == nil {
		return nil
	}
	out := new(ExcludedPDB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedPVC) DeepCopyInto(out *ExcludedPVC) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedPVC.
func (in *ExcludedPVC) DeepCopy() *ExcludedPVC {
	if in == nil {
		return nil
	}
	out := new(ExcludedPVC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedPod) DeepCopyInto(out *ExcludedPod) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedPod.
func (in *ExcludedPod) DeepCopy() *ExcludedPod {
	if in == nil {
		return nil
	}
	out := new(ExcludedPod)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedReplicationController) DeepCopyInto(out *ExcludedReplicationController) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedReplicationController.
func (in *ExcludedReplicationController) DeepCopy() *ExcludedReplicationController {
	if in == nil {
		return nil
	}
	out := new(ExcludedReplicationController)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedResourceQuota) DeepCopyInto(out *ExcludedResourceQuota) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedResourceQuota.
func (in *ExcludedResourceQuota) DeepCopy() *ExcludedResourceQuota {
	if in == nil {
		return nil
	}
	out := new(ExcludedResourceQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedRole) DeepCopyInto(out *ExcludedRole) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedRole.
func (in *ExcludedRole) DeepCopy() *ExcludedRole {
	if in == nil {
		return nil
	}
	out := new(ExcludedRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedRoleBinding) DeepCopyInto(out *ExcludedRoleBinding) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedRoleBinding.
func (in *ExcludedRoleBinding) DeepCopy() *ExcludedRoleBinding {
	if in == nil {
		return nil
	}
	out := new(ExcludedRoleBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedSecret) DeepCopyInto(out *ExcludedSecret) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedSecret.
func (in *ExcludedSecret) DeepCopy() *ExcludedSecret {
	if in == nil {
		return nil
	}
	out := new(ExcludedSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedService) DeepCopyInto(out *ExcludedService) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedService.
func (in *ExcludedService) DeepCopy() *ExcludedService {
	if in == nil {
		return nil
	}
	out := new(ExcludedService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedServiceAccount) DeepCopyInto(out *ExcludedServiceAccount) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedServiceAccount.
func (in *ExcludedServiceAccount) DeepCopy() *ExcludedServiceAccount {
	if in == nil {
		return nil
	}
	out := new(ExcludedServiceAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedStatefulSet) DeepCopyInto(out *ExcludedStatefulSet) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedStatefulSet.
func (in *ExcludedStatefulSet) DeepCopy() *ExcludedStatefulSet {
	if in == nil {
		return nil
	}
	out := new(ExcludedStatefulSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedVPA) DeepCopyInto(out *ExcludedVPA) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedVPA.
func (in *ExcludedVPA) DeepCopy() *ExcludedVPA {
	if in == nil {
		return nil
	}
	out := new(ExcludedVPA)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Exclusions) DeepCopyInto(out *Exclusions) {
	*out = *in
	if in.ExcludedNamespaces != nil {
		in, out := &in.ExcludedNamespaces, &out.ExcludedNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedNodes != nil {
		in, out := &in.ExcludedNodes, &out.ExcludedNodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedLabels != nil {
		in, out := &in.ExcludedLabels, &out.ExcludedLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExcludedPods != nil {
		in, out := &in.ExcludedPods, &out.ExcludedPods
		*out = make([]ExcludedPod, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedDeployments != nil {
		in, out := &in.ExcludedDeployments, &out.ExcludedDeployments
		*out = make([]ExcludedDeployment, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedStatefulSets != nil {
		in, out := &in.ExcludedStatefulSets, &out.ExcludedStatefulSets
		*out = make([]ExcludedStatefulSet, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedDaemonSets != nil {
		in, out := &in.ExcludedDaemonSets, &out.ExcludedDaemonSets
		*out = make([]ExcludedDaemonSet, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedReplicationControllers != nil {
		in, out := &in.ExcludedReplicationControllers, &out.ExcludedReplicationControllers
		*out = make([]ExcludedReplicationController, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedJobs != nil {
		in, out := &in.ExcludedJobs, &out.ExcludedJobs
		*out = make([]ExcludedJob, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedCronJobs != nil {
		in, out := &in.ExcludedCronJobs, &out.ExcludedCronJobs
		*out = make([]ExcludedCronJob, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedServices != nil {
		in, out := &in.ExcludedServices, &out.ExcludedServices
		*out = make([]ExcludedService, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedEndpoints != nil {
		in, out := &in.ExcludedEndpoints, &out.ExcludedEndpoints
		*out = make([]ExcludedEndpoint, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedIngresses != nil {
		in, out := &in.ExcludedIngresses, &out.ExcludedIngresses
		*out = make([]ExcludedIngress, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedIngressClasses != nil {
		in, out := &in.ExcludedIngressClasses, &out.ExcludedIngressClasses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedNetworkPolicies != nil {
		in, out := &in.ExcludedNetworkPolicies, &out.ExcludedNetworkPolicies
		*out = make([]ExcludedNetworkPolicy, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedConfigMaps != nil {
		in, out := &in.ExcludedConfigMaps, &out.ExcludedConfigMaps
		*out = make([]ExcludedConfigMap, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedSecrets != nil {
		in, out := &in.ExcludedSecrets, &out.ExcludedSecrets
		*out = make([]ExcludedSecret, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedServiceAccounts != nil {
		in, out := &in.ExcludedServiceAccounts, &out.ExcludedServiceAccounts
		*out = make([]ExcludedServiceAccount, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedPVCs != nil {
		in, out := &in.ExcludedPVCs, &out.ExcludedPVCs
		*out = make([]ExcludedPVC, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedPVs != nil {
		in, out := &in.ExcludedPVs, &out.ExcludedPVs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedStorageClasses != nil {
		in, out := &in.ExcludedStorageClasses, &out.ExcludedStorageClasses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedRoles != nil {
		in, out := &in.ExcludedRoles, &out.ExcludedRoles
		*out = make([]ExcludedRole, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedRoleBindings != nil {
		in, out := &in.ExcludedRoleBindings, &out.ExcludedRoleBindings
		*out = make([]ExcludedRoleBinding, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedClusterRoles != nil {
		in, out := &in.ExcludedClusterRoles, &out.ExcludedClusterRoles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedClusterRoleBindings != nil {
		in, out := &in.ExcludedClusterRoleBindings, &out.ExcludedClusterRoleBindings
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedResourceQuotas != nil {
		in, out := &in.ExcludedResourceQuotas, &out.ExcludedResourceQuotas
		*out = make([]ExcludedResourceQuota, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedLimitRanges != nil {
		in, out := &in.ExcludedLimitRanges, &out.ExcludedLimitRanges
		*out = make([]ExcludedLimitRange, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedHPAs != nil {
		in, out := &in.ExcludedHPAs, &out.ExcludedHPAs
		*out = make([]ExcludedHPA, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedVPAs != nil {
		in, out := &in.ExcludedVPAs, &out.ExcludedVPAs
		*out = make([]ExcludedVPA, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedPDBs != nil {
		in, out := &in.ExcludedPDBs, &out.ExcludedPDBs
		*out = make([]ExcludedPDB, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedPSPs != nil {
		in, out := &in.ExcludedPSPs, &out.ExcludedPSPs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedCRDs != nil {
		in, out := &in.ExcludedCRDs, &out.ExcludedCRDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedCustomResources != nil {
		in, out := &in.ExcludedCustomResources, &out.ExcludedCustomResources
		*out = make([]ExcludedCustomResource, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedCRDGroups != nil {
		in, out := &in.ExcludedCRDGroups, &out.ExcludedCRDGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedEvents != nil {
		in, out := &in.ExcludedEvents, &out.ExcludedEvents
		*out = make([]ExcludedEvent, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Exclusions.
func (in *Exclusions) DeepCopy() *Exclusions {
	if in == nil {
		return nil
	}
	out := new(Exclusions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedResource) DeepCopyInto(out *NamespacedResource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedResource.
func (in *NamespacedResource) DeepCopy() *NamespacedResource {
	if in == nil {
		return nil
	}
	out := new(NamespacedResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Policies) DeepCopyInto(out *Policies) {
	*out = *in
	if in.WatchedCRDs != nil {
		in, out := &in.WatchedCRDs, &out.WatchedCRDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DisabledCollectors != nil {
		in, out := &in.DisabledCollectors, &out.DisabledCollectors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Policies.
func (in *Policies) DeepCopy() *Policies {
	if in == nil {
		return nil
	}
	out := new(Policies)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSelector) DeepCopyInto(out *TargetSelector) {
	*out = *in
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSelector.
func (in *TargetSelector) DeepCopy() *TargetSelector {
	if in == nil {
		return nil
	}
	out := new(TargetSelector)
	in.DeepCopyInto(out)
	return out
}
