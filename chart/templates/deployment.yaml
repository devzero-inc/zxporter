apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-prometheus-kube-state-metrics
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.prometheusKubeStateMetrics.replicas }}
  revisionHistoryLimit: {{ .Values.prometheusKubeStateMetrics.revisionHistoryLimit
    }}
  strategy:
    type: {{ .Values.prometheusKubeStateMetrics.strategy.type | quote }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: kube-state-metrics
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: metrics
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/part-of: kube-state-metrics
        app.kubernetes.io/version: 2.10.1
        helm.sh/chart: kube-state-metrics-5.15.2
      {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args: {{- toYaml .Values.prometheusKubeStateMetrics.kubeStateMetrics.args | nindent
          8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: '{{ .Values.prometheusKubeStateMetrics.kubeStateMetrics.image.repository
          }}:{{ .Values.prometheusKubeStateMetrics.kubeStateMetrics.image.tag | default
          .Chart.AppVersion }}'
        imagePullPolicy: {{ .Values.prometheusKubeStateMetrics.kubeStateMetrics.imagePullPolicy
          }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources: {}
        securityContext: {{- toYaml .Values.prometheusKubeStateMetrics.kubeStateMetrics.containerSecurityContext
          | nindent 10 }}
      securityContext: {{- toYaml .Values.prometheusKubeStateMetrics.podSecurityContext
        | nindent 8 }}
      serviceAccountName: {{ include "chart.fullname" . }}-prometheus-kube-state-metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-prometheus-dz-prometheus-server
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: dz-prometheus
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.prometheusDzPrometheusServer.replicas }}
  revisionHistoryLimit: {{ .Values.prometheusDzPrometheusServer.revisionHistoryLimit
    }}
  strategy:
    type: {{ .Values.prometheusDzPrometheusServer.strategy.type | quote }}
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: dz-prometheus
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: dz-prometheus
        app.kubernetes.io/part-of: dz-prometheus
        app.kubernetes.io/version: v2.48.0
        helm.sh/chart: prometheus-25.8.0
      {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args: {{- toYaml .Values.prometheusDzPrometheusServer.dzPrometheusServerConfigmapReload.args
          | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: '{{ .Values.prometheusDzPrometheusServer.dzPrometheusServerConfigmapReload.image.repository
          }}:{{ .Values.prometheusDzPrometheusServer.dzPrometheusServerConfigmapReload.image.tag
          | default .Chart.AppVersion }}'
        imagePullPolicy: {{ .Values.prometheusDzPrometheusServer.dzPrometheusServerConfigmapReload.imagePullPolicy
          }}
        name: dz-prometheus-server-configmap-reload
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
          readOnly: true
      - args: {{- toYaml .Values.prometheusDzPrometheusServer.dzPrometheusServer.args |
          nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: '{{ .Values.prometheusDzPrometheusServer.dzPrometheusServer.image.repository
          }}:{{ .Values.prometheusDzPrometheusServer.dzPrometheusServer.image.tag | default
          .Chart.AppVersion }}'
        imagePullPolicy: {{ .Values.prometheusDzPrometheusServer.dzPrometheusServer.imagePullPolicy
          }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        name: dz-prometheus-server
        ports:
        - containerPort: 9090
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /data
          name: storage-volume
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext: {{- toYaml .Values.prometheusDzPrometheusServer.podSecurityContext
        | nindent 8 }}
      serviceAccountName: {{ include "chart.fullname" . }}-prometheus-dz-prometheus-server
      terminationGracePeriodSeconds: 300
      volumes:
      - configMap:
          name: {{ include "chart.fullname" . }}-prometheus-dz-prometheus-server
        name: config-volume
      - emptyDir: {}
        name: storage-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-evzero-zxporter-controller-manager
  labels:
    control-plane: controller-manager
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.evzeroZxporterControllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.evzeroZxporterControllerManager.manager.args | nindent
          8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: '{{ .Values.evzeroZxporterControllerManager.manager.image.repository }}:{{
          .Values.evzeroZxporterControllerManager.manager.image.tag | default .Chart.AppVersion
          }}'
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.evzeroZxporterControllerManager.manager.resources
          | nindent 10 }}
        securityContext: {{- toYaml .Values.evzeroZxporterControllerManager.manager.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/zxporter/config
          name: config-volume
          readOnly: true
      securityContext: {{- toYaml .Values.evzeroZxporterControllerManager.podSecurityContext
        | nindent 8 }}
      serviceAccountName: {{ include "chart.fullname" . }}-evzero-zxporter-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: {{ include "chart.fullname" . }}-evzero-zxporter-env-config
        name: config-volume
