evzeroZxporterControllerManager:
  manager:
    args:
    - --metrics-bind-address=:8443
    - --leader-elect
    - --health-probe-bind-address=:8081
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    image:
      repository: ttl.sh/zxporter
      tag: latest
    resources:
      requests:
        cpu: 200m
        memory: 128Mi
  podSecurityContext:
    runAsNonRoot: true
  replicas: 1
  serviceAccount:
    annotations: {}
evzeroZxporterControllerManagerMetricsService:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  type: ClusterIP
evzeroZxporterEnvConfig:
  bufferSize: ""
  clusterToken: '{{ .cluster_token }}'
  collectionFrequency: ""
  dakrUrl: https://api.devzero.io/dakr
  disableNetworkIoMetrics: ""
  disabledCollectors: ""
  excludedClusterrolebindings: ""
  excludedClusterroles: ""
  excludedCrdgroups: ""
  excludedCrds: ""
  excludedCronjobs: ""
  excludedDaemonsets: ""
  excludedDeployments: ""
  excludedEndpoints: ""
  excludedEvents: ""
  excludedHpas: ""
  excludedIngressclasses: ""
  excludedIngresses: ""
  excludedJobs: ""
  excludedLimitranges: ""
  excludedNamespaces: ""
  excludedNetworkpolicies: ""
  excludedNodes: ""
  excludedPdbs: ""
  excludedPods: ""
  excludedPsps: ""
  excludedPvcs: ""
  excludedPvs: ""
  excludedReplicationcontrollers: ""
  excludedResourcequotas: ""
  excludedRolebindings: ""
  excludedRoles: ""
  excludedServiceaccounts: ""
  excludedServices: ""
  excludedStatefulsets: ""
  excludedStorageclasses: ""
  excludedVpas: ""
  k8SProvider: '{{ .k8s_provider }}'
  kubeContextName: '{{ .kube_context_name }}'
  maskSecretData: ""
  nodeMetricsInterval: ""
  prometheusUrl: http://prometheus-dz-prometheus-server.devzero-zxporter.svc.cluster.local:80
  targetNamespaces: ""
  watchedCrds: ""
kubernetesClusterDomain: cluster.local
prometheusDzPrometheusServer:
  alertingRulesYml: '{}'
  alerts: '{}'
  allowSnippetAnnotations: "false"
  dzPrometheusServer:
    args:
    - --storage.tsdb.retention.time=15d
    - --config.file=/etc/config/prometheus.yml
    - --storage.tsdb.path=/data
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --web.enable-lifecycle
    image:
      repository: quay.io/prometheus/prometheus
      tag: v2.48.0
    imagePullPolicy: IfNotPresent
  dzPrometheusServerConfigmapReload:
    args:
    - --watched-dir=/etc/config
    - --reload-url=http://127.0.0.1:9090/-/reload
    image:
      repository: quay.io/prometheus-operator/prometheus-config-reloader
      tag: v0.67.0
    imagePullPolicy: IfNotPresent
  podSecurityContext:
    fsGroup: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 9090
  prometheusYml: |-
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes-cadvisor
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  recordingRulesYml: '{}'
  replicas: 1
  revisionHistoryLimit: 10
  rules: '{}'
  serviceAccount:
    annotations: {}
  strategy:
    type: Recreate
  type: ClusterIP
prometheusKubeStateMetrics:
  kubeStateMetrics:
    args:
    - --port=8080
    - --resources=nodes
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    image:
      repository: registry.k8s.io/kube-state-metrics/kube-state-metrics
      tag: v2.10.1
    imagePullPolicy: IfNotPresent
  podSecurityContext:
    fsGroup: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  replicas: 1
  revisionHistoryLimit: 10
  serviceAccount:
    annotations: {}
  strategy:
    type: RollingUpdate
  type: ClusterIP
zPrometheusNodeExporter:
  nodeExporter:
    args:
    - --path.procfs=/host/proc
    - --path.sysfs=/host/sys
    - --path.rootfs=/host/root
    - --path.udev.data=/host/root/run/udev/data
    - --web.listen-address=[$(HOST_IP)]:9101
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
    env:
      hostIp: 0.0.0.0
    image:
      repository: quay.io/prometheus/node-exporter
      tag: v1.7.0
    imagePullPolicy: IfNotPresent
  nodeSelector:
    kubernetes.io/os: linux
  podSecurityContext:
    fsGroup: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
  ports:
  - name: metrics
    port: 9101
    protocol: TCP
    targetPort: 9101
  serviceAccount:
    annotations: {}
  type: ClusterIP
